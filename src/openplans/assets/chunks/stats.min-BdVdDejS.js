var lM=Object.defineProperty;var Eg=r=>{throw TypeError(r)};var cM=(r,t,e)=>t in r?lM(r,t,{enumerable:!0,configurable:!0,writable:!0,value:e}):r[t]=e;var q=(r,t,e)=>cM(r,typeof t!="symbol"?t+"":t,e),Tg=(r,t,e)=>t.has(r)||Eg("Cannot "+e);var Hd=(r,t,e)=>(Tg(r,t,"read from private field"),e?e.call(r):t.get(r)),Cg=(r,t,e)=>t.has(r)?Eg("Cannot add the same private member more than once"):t instanceof WeakSet?t.add(r):t.set(r,e),Rg=(r,t,e,i)=>(Tg(r,t,"write to private field"),i?i.call(r,e):t.set(r,e),e);(function(){const t=document.createElement("link").relList;if(t&&t.supports&&t.supports("modulepreload"))return;for(const n of document.querySelectorAll('link[rel="modulepreload"]'))i(n);new MutationObserver(n=>{for(const s of n)if(s.type==="childList")for(const o of s.addedNodes)o.tagName==="LINK"&&o.rel==="modulepreload"&&i(o)}).observe(document,{childList:!0,subtree:!0});function e(n){const s={};return n.integrity&&(s.integrity=n.integrity),n.referrerPolicy&&(s.referrerPolicy=n.referrerPolicy),n.crossOrigin==="use-credentials"?s.credentials="include":n.crossOrigin==="anonymous"?s.credentials="omit":s.credentials="same-origin",s}function i(n){if(n.ep)return;n.ep=!0;const s=e(n);fetch(n.href,s)}})();function Pg(r,t,e,i){function n(s){return s instanceof e?s:new e(function(o){o(s)})}return new(e||(e=Promise))(function(s,o){function a(c){try{l(i.next(c))}catch(u){o(u)}}function h(c){try{l(i.throw(c))}catch(u){o(u)}}function l(c){c.done?s(c.value):n(c.value).then(a,h)}l((i=i.apply(r,[])).next())})}function jt(r,t,e,i){if(typeof t=="function"?r!==t||!0:!t.has(r))throw new TypeError("Cannot read private member from an object whose class did not declare it");return e==="m"?i:e==="a"?i.call(r):i?i.value:t.get(r)}function sn(r,t,e,i,n){if(typeof t=="function"?r!==t||!0:!t.has(r))throw new TypeError("Cannot write private member to an object whose class did not declare it");return t.set(r,e),e}let D,Qa=null;function sh(){return(Qa===null||Qa.byteLength===0)&&(Qa=new Uint8Array(D.memory.buffer)),Qa}function uM(r,t){return r=r>>>0,sh().subarray(r/1,r/1+t)}function ox(r){const t=D.__externref_table_alloc();return D.__wbindgen_export_2.set(t,r),t}function dM(r,t){try{return r.apply(this,t)}catch(e){const i=ox(e);D.__wbindgen_exn_store(i)}}const ax=typeof TextDecoder<"u"?new TextDecoder("utf-8",{ignoreBOM:!0,fatal:!0}):{decode:()=>{throw Error("TextDecoder not available")}};typeof TextDecoder<"u"&&ax.decode();function ye(r,t){return r=r>>>0,ax.decode(sh().subarray(r,r+t))}let Me=0;const Qc=typeof TextEncoder<"u"?new TextEncoder("utf-8"):{encode:()=>{throw Error("TextEncoder not available")}},fM=typeof Qc.encodeInto=="function"?function(r,t){return Qc.encodeInto(r,t)}:function(r,t){const e=Qc.encode(r);return t.set(e),{read:r.length,written:e.length}};function Di(r,t,e){if(e===void 0){const a=Qc.encode(r),h=t(a.length,1)>>>0;return sh().subarray(h,h+a.length).set(a),Me=a.length,h}let i=r.length,n=t(i,1)>>>0;const s=sh();let o=0;for(;o<i;o++){const a=r.charCodeAt(o);if(a>127)break;s[n+o]=a}if(o!==i){o!==0&&(r=r.slice(o)),n=e(n,i,i=o+r.length*3,1)>>>0;const a=sh().subarray(n+o,n+i),h=fM(r,a);o+=h.written,n=e(n,i,o,1)>>>0}return Me=o,n}function Ve(r,t){if(!(r instanceof t))throw new Error(`expected instance of ${t.name}`)}let br=null;function hx(){return(br===null||br.buffer.detached===!0||br.buffer.detached===void 0&&br.buffer!==D.memory.buffer)&&(br=new DataView(D.memory.buffer)),br}function rh(r,t){const e=t(r.length*4,4)>>>0;for(let i=0;i<r.length;i++){const n=ox(r[i]);hx().setUint32(e+4*i,n,!0)}return Me=r.length,e}let th=null;function lx(){return(th===null||th.byteLength===0)&&(th=new Float64Array(D.memory.buffer)),th}function pM(r,t){const e=t(r.length*8,8)>>>0;return lx().set(r,e/8),Me=r.length,e}function mM(r,t){r=r>>>0;const e=hx(),i=[];for(let n=r;n<r+4*t;n+=4)i.push(D.__wbindgen_export_2.get(e.getUint32(n,!0)));return D.__externref_drop_slice(r,t),i}function Ig(r,t){return r=r>>>0,lx().subarray(r/8,r/8+t)}typeof FinalizationRegistry>"u"||new FinalizationRegistry(r=>D.__wbg_color_free(r>>>0,1));typeof FinalizationRegistry>"u"||new FinalizationRegistry(r=>D.__wbg_colorrgb_free(r>>>0,1));typeof FinalizationRegistry>"u"||new FinalizationRegistry(r=>D.__wbg_matrix3_free(r>>>0,1));const Gd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(r=>D.__wbg_matrix4_free(r>>>0,1));let gM=class Gi{static __wrap(t){t=t>>>0;const e=Object.create(Gi.prototype);return e.__wbg_ptr=t,Gd.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Gd.unregister(this),t}free(){const t=this.__destroy_into_raw();D.__wbg_matrix4_free(t,0)}get elements(){const t=D.matrix4_elements(this.__wbg_ptr);var e=Ig(t[0],t[1]).slice();return D.__wbindgen_free(t[0],t[1]*8,8),e}constructor(){const t=D.matrix4_new();return this.__wbg_ptr=t>>>0,Gd.register(this,this.__wbg_ptr,this),this}static set(t,e,i,n,s,o,a,h,l,c,u,d,f,p,_,g){const m=D.matrix4_set(t,e,i,n,s,o,a,h,l,c,u,d,f,p,_,g);return Gi.__wrap(m)}clone(){const t=D.matrix4_clone(this.__wbg_ptr);return Gi.__wrap(t)}identity(){D.matrix4_identity(this.__wbg_ptr)}determinant(){return D.matrix4_determinant(this.__wbg_ptr)}adjucate(){const t=D.matrix4_adjucate(this.__wbg_ptr);return Gi.__wrap(t)}inverse(){const t=D.matrix4_inverse(this.__wbg_ptr);return Gi.__wrap(t)}multiply(t){Ve(t,Gi);const e=D.matrix4_multiply(this.__wbg_ptr,t.__wbg_ptr);return Gi.__wrap(e)}add(t){Ve(t,Gi);const e=D.matrix4_add(this.__wbg_ptr,t.__wbg_ptr);return Gi.__wrap(e)}subtract(t){Ve(t,Gi);const e=D.matrix4_subtract(this.__wbg_ptr,t.__wbg_ptr);return Gi.__wrap(e)}flatten(){const t=D.matrix4_flatten(this.__wbg_ptr);var e=Ig(t[0],t[1]).slice();return D.__wbindgen_free(t[0],t[1]*8,8),e}get_element_at(t){const e=D.matrix4_get_element_at(this.__wbg_ptr,t);return e[0]===0?void 0:e[1]}is_zero(){return D.matrix4_is_zero(this.__wbg_ptr)!==0}is_identity(){return D.matrix4_is_identity(this.__wbg_ptr)!==0}transpose(){const t=D.matrix4_transpose(this.__wbg_ptr);return Gi.__wrap(t)}};const Lg=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(r=>D.__wbg_ogarc_free(r>>>0,1));class _M{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Lg.unregister(this),t}free(){const t=this.__destroy_into_raw();D.__wbg_ogarc_free(t,0)}set id(t){const e=Di(t,D.__wbindgen_malloc,D.__wbindgen_realloc),i=Me;D.ogarc_set_id(this.__wbg_ptr,e,i)}get id(){let t,e;try{const i=D.ogarc_id(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}constructor(t){const e=Di(t,D.__wbindgen_malloc,D.__wbindgen_realloc),i=Me,n=D.ogarc_new(e,i);return this.__wbg_ptr=n>>>0,Lg.register(this,this.__wbg_ptr,this),this}set_config(t,e,i,n,s){Ve(t,me);var o=t.__destroy_into_raw();D.ogarc_set_config(this.__wbg_ptr,o,e,i,n,s)}generate_geometry(){D.ogarc_generate_geometry(this.__wbg_ptr)}dispose_points(){D.ogarc_dispose_points(this.__wbg_ptr)}destroy(){D.ogarc_destroy(this.__wbg_ptr)}get_brep_serialized(){let t,e;try{const i=D.ogarc_get_brep_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}get_geometry_serialized(){let t,e;try{const i=D.ogarc_get_geometry_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}}const Dg=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(r=>D.__wbg_ogcuboid_free(r>>>0,1));class yM{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Dg.unregister(this),t}free(){const t=this.__destroy_into_raw();D.__wbg_ogcuboid_free(t,0)}set id(t){const e=Di(t,D.__wbindgen_malloc,D.__wbindgen_realloc),i=Me;D.ogcuboid_set_id(this.__wbg_ptr,e,i)}get id(){let t,e;try{const i=D.ogcuboid_id(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}constructor(t){const e=Di(t,D.__wbindgen_malloc,D.__wbindgen_realloc),i=Me,n=D.ogcuboid_new(e,i);return this.__wbg_ptr=n>>>0,Dg.register(this,this.__wbg_ptr,this),this}set_config(t,e,i,n){Ve(t,me);var s=t.__destroy_into_raw();D.ogcuboid_set_config(this.__wbg_ptr,s,e,i,n)}generate_brep(){D.ogcuboid_generate_brep(this.__wbg_ptr)}clean_geometry(){D.ogcuboid_clean_geometry(this.__wbg_ptr)}generate_geometry(){D.ogcuboid_generate_geometry(this.__wbg_ptr)}get_brep_serialized(){let t,e;try{const i=D.ogcuboid_get_brep_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}get_geometry_serialized(){let t,e;try{const i=D.ogcuboid_get_geometry_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}get_outline_geometry_serialized(){let t,e;try{const i=D.ogcuboid_get_outline_geometry_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}}const Og=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(r=>D.__wbg_ogcylinder_free(r>>>0,1));class xM{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Og.unregister(this),t}free(){const t=this.__destroy_into_raw();D.__wbg_ogcylinder_free(t,0)}set id(t){const e=Di(t,D.__wbindgen_malloc,D.__wbindgen_realloc),i=Me;D.ogcylinder_set_id(this.__wbg_ptr,e,i)}get id(){let t,e;try{const i=D.ogcylinder_id(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}constructor(t){const e=Di(t,D.__wbindgen_malloc,D.__wbindgen_realloc),i=Me,n=D.ogcylinder_new(e,i);return this.__wbg_ptr=n>>>0,Og.register(this,this.__wbg_ptr,this),this}set_config(t,e,i,n,s){Ve(t,me);var o=t.__destroy_into_raw();D.ogcylinder_set_config(this.__wbg_ptr,o,e,i,n,s)}generate_brep(){D.ogcylinder_generate_brep(this.__wbg_ptr)}clean_geometry(){D.ogcylinder_clean_geometry(this.__wbg_ptr)}generate_geometry(){D.ogcylinder_generate_geometry(this.__wbg_ptr)}get_brep_serialized(){let t,e;try{const i=D.ogcylinder_get_brep_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}get_geometry_serialized(){let t,e;try{const i=D.ogcylinder_get_geometry_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}get_outline_geometry_serialized(){let t,e;try{const i=D.ogcylinder_get_outline_geometry_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}}const Fg=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(r=>D.__wbg_ogline_free(r>>>0,1));class vM{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Fg.unregister(this),t}free(){const t=this.__destroy_into_raw();D.__wbg_ogline_free(t,0)}set id(t){const e=Di(t,D.__wbindgen_malloc,D.__wbindgen_realloc),i=Me;D.ogline_set_id(this.__wbg_ptr,e,i)}get id(){let t,e;try{const i=D.ogline_id(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}constructor(t){const e=Di(t,D.__wbindgen_malloc,D.__wbindgen_realloc),i=Me,n=D.ogline_new(e,i);return this.__wbg_ptr=n>>>0,Fg.register(this,this.__wbg_ptr,this),this}set_config(t,e){Ve(t,me);var i=t.__destroy_into_raw();Ve(e,me);var n=e.__destroy_into_raw();D.ogline_set_config(this.__wbg_ptr,i,n)}generate_geometry(){D.ogline_generate_geometry(this.__wbg_ptr)}dispose_points(){D.ogline_dispose_points(this.__wbg_ptr)}destroy(){D.ogline_destroy(this.__wbg_ptr)}get_brep_serialized(){let t,e;try{const i=D.ogline_get_brep_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}get_geometry_serialized(){let t,e;try{const i=D.ogline_get_geometry_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}}const zg=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(r=>D.__wbg_ogpolygon_free(r>>>0,1));class bM{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,zg.unregister(this),t}free(){const t=this.__destroy_into_raw();D.__wbg_ogpolygon_free(t,0)}set id(t){const e=Di(t,D.__wbindgen_malloc,D.__wbindgen_realloc),i=Me;D.ogpolygon_set_id(this.__wbg_ptr,e,i)}get id(){let t,e;try{const i=D.ogpolygon_id(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}constructor(t){const e=Di(t,D.__wbindgen_malloc,D.__wbindgen_realloc),i=Me,n=D.ogpolygon_new(e,i);return this.__wbg_ptr=n>>>0,zg.register(this,this.__wbg_ptr,this),this}set_config(t){const e=rh(t,D.__wbindgen_malloc),i=Me;D.ogpolygon_set_config(this.__wbg_ptr,e,i)}set_transformation(t){const e=pM(t,D.__wbindgen_malloc),i=Me;D.ogpolygon_set_transformation(this.__wbg_ptr,e,i)}add_vertices(t){const e=rh(t,D.__wbindgen_malloc),i=Me;D.ogpolygon_add_vertices(this.__wbg_ptr,e,i)}add_holes(t){const e=rh(t,D.__wbindgen_malloc),i=Me;D.ogpolygon_add_holes(this.__wbg_ptr,e,i)}clean_geometry(){D.ogpolygon_clean_geometry(this.__wbg_ptr)}generate_brep(){D.ogpolygon_generate_brep(this.__wbg_ptr)}generate_geometry(){D.ogpolygon_generate_geometry(this.__wbg_ptr)}get_brep_serialized(){let t,e;try{const i=D.ogpolygon_get_brep_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}get_geometry_serialized(){let t,e;try{const i=D.ogpolygon_get_geometry_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}get_outline_geometry_serialized(){let t,e;try{const i=D.ogpolygon_get_outline_geometry_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}}const Wd=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(r=>D.__wbg_ogpolyline_free(r>>>0,1));class cu{static __wrap(t){t=t>>>0;const e=Object.create(cu.prototype);return e.__wbg_ptr=t,Wd.register(e,e.__wbg_ptr,e),e}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Wd.unregister(this),t}free(){const t=this.__destroy_into_raw();D.__wbg_ogpolyline_free(t,0)}set id(t){const e=Di(t,D.__wbindgen_malloc,D.__wbindgen_realloc),i=Me;D.ogpolyline_set_id(this.__wbg_ptr,e,i)}get id(){let t,e;try{const i=D.ogpolyline_id(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}constructor(t){const e=Di(t,D.__wbindgen_malloc,D.__wbindgen_realloc),i=Me,n=D.ogpolyline_new(e,i);return this.__wbg_ptr=n>>>0,Wd.register(this,this.__wbg_ptr,this),this}clone(){const t=D.ogpolyline_clone(this.__wbg_ptr);return cu.__wrap(t)}set_config(t){const e=rh(t,D.__wbindgen_malloc),i=Me;D.ogpolyline_set_config(this.__wbg_ptr,e,i)}generate_geometry(){D.ogpolyline_generate_geometry(this.__wbg_ptr)}add_multiple_points(t){const e=rh(t,D.__wbindgen_malloc),i=Me;D.ogpolyline_add_multiple_points(this.__wbg_ptr,e,i)}add_point(t){Ve(t,me);var e=t.__destroy_into_raw();D.ogpolyline_add_point(this.__wbg_ptr,e)}get_points(){let t,e;try{const i=D.ogpolyline_get_points(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}get_raw_points(){const t=D.ogpolyline_get_raw_points(this.__wbg_ptr);var e=mM(t[0],t[1]).slice();return D.__wbindgen_free(t[0],t[1]*4,4),e}is_closed(){return D.ogpolyline_is_closed(this.__wbg_ptr)!==0}check_closed_test(){D.ogpolyline_check_closed_test(this.__wbg_ptr)}get_brep_serialized(){let t,e;try{const i=D.ogpolyline_get_brep_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}get_geometry_serialized(){let t,e;try{const i=D.ogpolyline_get_geometry_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}}const Ug=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(r=>D.__wbg_ogrectangle_free(r>>>0,1));class MM{__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,Ug.unregister(this),t}free(){const t=this.__destroy_into_raw();D.__wbg_ogrectangle_free(t,0)}set id(t){const e=Di(t,D.__wbindgen_malloc,D.__wbindgen_realloc),i=Me;D.ogrectangle_set_id(this.__wbg_ptr,e,i)}get id(){let t,e;try{const i=D.ogrectangle_id(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}constructor(t){const e=Di(t,D.__wbindgen_malloc,D.__wbindgen_realloc),i=Me,n=D.ogrectangle_new(e,i);return this.__wbg_ptr=n>>>0,Ug.register(this,this.__wbg_ptr,this),this}set_config(t,e,i){Ve(t,me);var n=t.__destroy_into_raw();D.ogrectangle_set_config(this.__wbg_ptr,n,e,i)}generate_geometry(){D.ogrectangle_generate_geometry(this.__wbg_ptr)}get_brep_serialized(){let t,e;try{const i=D.ogrectangle_get_brep_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}get_geometry_serialized(){let t,e;try{const i=D.ogrectangle_get_geometry_serialized(this.__wbg_ptr);return t=i[0],e=i[1],ye(i[0],i[1])}finally{D.__wbindgen_free(t,e,1)}}}const $d=typeof FinalizationRegistry>"u"?{register:()=>{},unregister:()=>{}}:new FinalizationRegistry(r=>D.__wbg_vector3_free(r>>>0,1));let me=class Ae{static __wrap(t){t=t>>>0;const e=Object.create(Ae.prototype);return e.__wbg_ptr=t,$d.register(e,e.__wbg_ptr,e),e}static __unwrap(t){return t instanceof Ae?t.__destroy_into_raw():0}__destroy_into_raw(){const t=this.__wbg_ptr;return this.__wbg_ptr=0,$d.unregister(this),t}free(){const t=this.__destroy_into_raw();D.__wbg_vector3_free(t,0)}get x(){return D.__wbg_get_vector3_x(this.__wbg_ptr)}set x(t){D.__wbg_set_vector3_x(this.__wbg_ptr,t)}get y(){return D.__wbg_get_vector3_y(this.__wbg_ptr)}set y(t){D.__wbg_set_vector3_y(this.__wbg_ptr,t)}get z(){return D.__wbg_get_vector3_z(this.__wbg_ptr)}set z(t){D.__wbg_set_vector3_z(this.__wbg_ptr,t)}constructor(t,e,i){const n=D.vector3_new(t,e,i);return this.__wbg_ptr=n>>>0,$d.register(this,this.__wbg_ptr,this),this}add(t){Ve(t,Ae);const e=D.vector3_add(this.__wbg_ptr,t.__wbg_ptr);return Ae.__wrap(e)}add_scalar(t){const e=D.vector3_add_scalar(this.__wbg_ptr,t);return Ae.__wrap(e)}subtract(t){Ve(t,Ae);const e=D.vector3_subtract(this.__wbg_ptr,t.__wbg_ptr);return Ae.__wrap(e)}subtract_scalar(t){const e=D.vector3_subtract_scalar(this.__wbg_ptr,t);return Ae.__wrap(e)}clone(){const t=D.vector3_clone(this.__wbg_ptr);return Ae.__wrap(t)}zero(){D.vector3_zero(this.__wbg_ptr)}copy(t){Ve(t,Ae),D.vector3_copy(this.__wbg_ptr,t.__wbg_ptr)}multiply_scalar(t){const e=D.vector3_multiply_scalar(this.__wbg_ptr,t);return Ae.__wrap(e)}multiply(t){Ve(t,Ae);const e=D.vector3_multiply(this.__wbg_ptr,t.__wbg_ptr);return Ae.__wrap(e)}divide(t){Ve(t,Ae);const e=D.vector3_divide(this.__wbg_ptr,t.__wbg_ptr);return Ae.__wrap(e)}divide_scalar(t){const e=D.vector3_divide_scalar(this.__wbg_ptr,t);return Ae.__wrap(e)}negate(){const t=D.vector3_negate(this.__wbg_ptr);return Ae.__wrap(t)}dot(t){return Ve(t,Ae),D.vector3_dot(this.__wbg_ptr,t.__wbg_ptr)}magnitude(){return D.vector3_magnitude(this.__wbg_ptr)}length(){return D.vector3_length(this.__wbg_ptr)}normalize(){const t=D.vector3_normalize(this.__wbg_ptr);return Ae.__wrap(t)}cross(t){Ve(t,Ae);const e=D.vector3_cross(this.__wbg_ptr,t.__wbg_ptr);return Ae.__wrap(e)}distance(t){return Ve(t,Ae),D.vector3_distance(this.__wbg_ptr,t.__wbg_ptr)}apply_matrix4(t){Ve(t,gM);var e=t.__destroy_into_raw();D.vector3_apply_matrix4(this.__wbg_ptr,e)}};async function wM(r,t){if(typeof Response=="function"&&r instanceof Response){if(typeof WebAssembly.instantiateStreaming=="function")try{return await WebAssembly.instantiateStreaming(r,t)}catch(i){if(r.headers.get("Content-Type")!="application/wasm")console.warn("`WebAssembly.instantiateStreaming` failed because your server does not serve Wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\n",i);else throw i}const e=await r.arrayBuffer();return await WebAssembly.instantiate(e,t)}else{const e=await WebAssembly.instantiate(r,t);return e instanceof WebAssembly.Instance?{instance:e,module:r}:e}}function SM(){const r={};return r.wbg={},r.wbg.__wbg_getRandomValues_38097e921c2494c3=function(){return dM(function(t,e){globalThis.crypto.getRandomValues(uM(t,e))},arguments)},r.wbg.__wbg_log_c222819a41e063d3=function(t){console.log(t)},r.wbg.__wbg_vector3_new=function(t){return me.__wrap(t)},r.wbg.__wbg_vector3_unwrap=function(t){return me.__unwrap(t)},r.wbg.__wbindgen_init_externref_table=function(){const t=D.__wbindgen_export_2,e=t.grow(4);t.set(0,void 0),t.set(e+0,void 0),t.set(e+1,null),t.set(e+2,!0),t.set(e+3,!1)},r.wbg.__wbindgen_string_new=function(t,e){return ye(t,e)},r.wbg.__wbindgen_throw=function(t,e){throw new Error(ye(t,e))},r}function AM(r,t){return D=r.exports,cx.__wbindgen_wasm_module=t,br=null,th=null,Qa=null,D.__wbindgen_start(),D}async function cx(r){if(D!==void 0)return D;typeof r<"u"&&(Object.getPrototypeOf(r)===Object.prototype?{module_or_path:r}=r:console.warn("using deprecated parameters for the initialization function; pass a single object instead")),typeof r>"u"&&(r=new URL(""+new URL("../static/opengeometry_bg-BHR8gH9S.wasm",import.meta.url).href,import.meta.url));const t=SM();(typeof r=="string"||typeof Request=="function"&&r instanceof Request||typeof URL=="function"&&r instanceof URL)&&(r=fetch(r));const{instance:e,module:i}=await wM(await r,t);return AM(e,i)}/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ux="168",Up=0,EM=1,TM=2,Ng=1,Bg=100,kg=204,Vg=205,Hg=3,CM=0,dx=300,Gg=1e3,al=1001,Wg=1002,RM=1006,PM=1008,IM=1009,LM=1015,DM=1023,OM=0,fx="",Bs="srgb",fm="srgb-linear",FM="display-p3",px="display-p3-linear",Np="linear",$g="srgb",Xg="rec709",qg="p3",Zr=7680,Yg=519,Zg=35044,hl=2e3,Jg=2001;let ju=class{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const i=this._listeners;return i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const n=this._listeners[t];if(n!==void 0){const s=n.indexOf(e);s!==-1&&n.splice(s,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const i=this._listeners[t.type];if(i!==void 0){t.target=this;const n=i.slice(0);for(let s=0,o=n.length;s<o;s++)n[s].call(this,t);t.target=null}}};const ri=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function Gh(){const r=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(ri[r&255]+ri[r>>8&255]+ri[r>>16&255]+ri[r>>24&255]+"-"+ri[t&255]+ri[t>>8&255]+"-"+ri[t>>16&15|64]+ri[t>>24&255]+"-"+ri[e&63|128]+ri[e>>8&255]+"-"+ri[e>>16&255]+ri[e>>24&255]+ri[i&255]+ri[i>>8&255]+ri[i>>16&255]+ri[i>>24&255]).toLowerCase()}function Ri(r,t,e){return Math.max(t,Math.min(e,r))}function zM(r,t){return(r%t+t)%t}function Xd(r,t,e){return(1-e)*r+e*t}function Ma(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function Si(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}let Xi=class mx{constructor(t=0,e=0){mx.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6],this.y=n[1]*e+n[4]*i+n[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(Ri(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),n=Math.sin(e),s=this.x-t.x,o=this.y-t.y;return this.x=s*i-o*n+t.x,this.y=s*n+o*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},da=class gx{constructor(t,e,i,n,s,o,a,h,l){gx.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,i,n,s,o,a,h,l)}set(t,e,i,n,s,o,a,h,l){const c=this.elements;return c[0]=t,c[1]=n,c[2]=a,c[3]=e,c[4]=s,c[5]=h,c[6]=i,c[7]=o,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,s=this.elements,o=i[0],a=i[3],h=i[6],l=i[1],c=i[4],u=i[7],d=i[2],f=i[5],p=i[8],_=n[0],g=n[3],m=n[6],x=n[1],y=n[4],v=n[7],E=n[2],b=n[5],w=n[8];return s[0]=o*_+a*x+h*E,s[3]=o*g+a*y+h*b,s[6]=o*m+a*v+h*w,s[1]=l*_+c*x+u*E,s[4]=l*g+c*y+u*b,s[7]=l*m+c*v+u*w,s[2]=d*_+f*x+p*E,s[5]=d*g+f*y+p*b,s[8]=d*m+f*v+p*w,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],n=t[2],s=t[3],o=t[4],a=t[5],h=t[6],l=t[7],c=t[8];return e*o*c-e*a*l-i*s*c+i*a*h+n*s*l-n*o*h}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],s=t[3],o=t[4],a=t[5],h=t[6],l=t[7],c=t[8],u=c*o-a*l,d=a*h-c*s,f=l*s-o*h,p=e*u+i*d+n*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/p;return t[0]=u*_,t[1]=(n*l-c*i)*_,t[2]=(a*i-n*o)*_,t[3]=d*_,t[4]=(c*e-n*h)*_,t[5]=(n*s-a*e)*_,t[6]=f*_,t[7]=(i*h-l*e)*_,t[8]=(o*e-i*s)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,n,s,o,a){const h=Math.cos(s),l=Math.sin(s);return this.set(i*h,i*l,-i*(h*o+l*a)+o+t,-n*l,n*h,-n*(-l*o+h*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(qd.makeScale(t,e)),this}rotate(t){return this.premultiply(qd.makeRotation(-t)),this}translate(t,e){return this.premultiply(qd.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let n=0;n<9;n++)if(e[n]!==i[n])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}};const qd=new da;function UM(r){for(let t=r.length-1;t>=0;--t)if(r[t]>=65535)return!0;return!1}function Kg(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}const jg={};function NM(r){r in jg||(jg[r]=!0,console.warn(r))}const Qg=new da().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),t_=new da().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),wa={[fm]:{transfer:Np,primaries:Xg,luminanceCoefficients:[.2126,.7152,.0722],toReference:r=>r,fromReference:r=>r},[Bs]:{transfer:$g,primaries:Xg,luminanceCoefficients:[.2126,.7152,.0722],toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[px]:{transfer:Np,primaries:qg,luminanceCoefficients:[.2289,.6917,.0793],toReference:r=>r.applyMatrix3(t_),fromReference:r=>r.applyMatrix3(Qg)},[FM]:{transfer:$g,primaries:qg,luminanceCoefficients:[.2289,.6917,.0793],toReference:r=>r.convertSRGBToLinear().applyMatrix3(t_),fromReference:r=>r.applyMatrix3(Qg).convertLinearToSRGB()}},BM=new Set([fm,px]),un={enabled:!0,_workingColorSpace:fm,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!BM.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,t,e){if(this.enabled===!1||t===e||!t||!e)return r;const i=wa[t].toReference,n=wa[e].fromReference;return n(i(r))},fromWorkingColorSpace:function(r,t){return this.convert(r,this._workingColorSpace,t)},toWorkingColorSpace:function(r,t){return this.convert(r,t,this._workingColorSpace)},getPrimaries:function(r){return wa[r].primaries},getTransfer:function(r){return r===fx?Np:wa[r].transfer},getLuminanceCoefficients:function(r,t=this._workingColorSpace){return r.fromArray(wa[t].luminanceCoefficients)}};function ta(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function Yd(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Jr,kM=class{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Jr===void 0&&(Jr=Kg("canvas")),Jr.width=t.width,Jr.height=t.height;const i=Jr.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=Jr}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Kg("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const n=i.getImageData(0,0,t.width,t.height),s=n.data;for(let o=0;o<s.length;o++)s[o]=ta(s[o]/255)*255;return i.putImageData(n,0,0),e}else if(t.data){const e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(ta(e[i]/255)*255):e[i]=ta(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}},VM=0,HM=class{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:VM++}),this.uuid=Gh(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let s;if(Array.isArray(n)){s=[];for(let o=0,a=n.length;o<a;o++)n[o].isDataTexture?s.push(Zd(n[o].image)):s.push(Zd(n[o]))}else s=Zd(n);i.url=s}return e||(t.images[this.uuid]=i),i}};function Zd(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?kM.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let GM=0,pm=class tu extends ju{constructor(t=tu.DEFAULT_IMAGE,e=tu.DEFAULT_MAPPING,i=al,n=al,s=RM,o=PM,a=DM,h=IM,l=tu.DEFAULT_ANISOTROPY,c=fx){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:GM++}),this.uuid=Gh(),this.name="",this.source=new HM(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=s,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=h,this.offset=new Xi(0,0),this.repeat=new Xi(1,1),this.center=new Xi(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new da,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==dx)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case Gg:t.x=t.x-Math.floor(t.x);break;case al:t.x=t.x<0?0:1;break;case Wg:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case Gg:t.y=t.y-Math.floor(t.y);break;case al:t.y=t.y<0?0:1;break;case Wg:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}};pm.DEFAULT_IMAGE=null;pm.DEFAULT_MAPPING=dx;pm.DEFAULT_ANISOTROPY=1;let Wh=class{constructor(t=0,e=0,i=0,n=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=n}static slerpFlat(t,e,i,n,s,o,a){let h=i[n+0],l=i[n+1],c=i[n+2],u=i[n+3];const d=s[o+0],f=s[o+1],p=s[o+2],_=s[o+3];if(a===0){t[e+0]=h,t[e+1]=l,t[e+2]=c,t[e+3]=u;return}if(a===1){t[e+0]=d,t[e+1]=f,t[e+2]=p,t[e+3]=_;return}if(u!==_||h!==d||l!==f||c!==p){let g=1-a;const m=h*d+l*f+c*p+u*_,x=m>=0?1:-1,y=1-m*m;if(y>Number.EPSILON){const E=Math.sqrt(y),b=Math.atan2(E,m*x);g=Math.sin(g*b)/E,a=Math.sin(a*b)/E}const v=a*x;if(h=h*g+d*v,l=l*g+f*v,c=c*g+p*v,u=u*g+_*v,g===1-a){const E=1/Math.sqrt(h*h+l*l+c*c+u*u);h*=E,l*=E,c*=E,u*=E}}t[e]=h,t[e+1]=l,t[e+2]=c,t[e+3]=u}static multiplyQuaternionsFlat(t,e,i,n,s,o){const a=i[n],h=i[n+1],l=i[n+2],c=i[n+3],u=s[o],d=s[o+1],f=s[o+2],p=s[o+3];return t[e]=a*p+c*u+h*f-l*d,t[e+1]=h*p+c*d+l*u-a*f,t[e+2]=l*p+c*f+a*d-h*u,t[e+3]=c*p-a*u-h*d-l*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,n=t._y,s=t._z,o=t._order,a=Math.cos,h=Math.sin,l=a(i/2),c=a(n/2),u=a(s/2),d=h(i/2),f=h(n/2),p=h(s/2);switch(o){case"XYZ":this._x=d*c*u+l*f*p,this._y=l*f*u-d*c*p,this._z=l*c*p+d*f*u,this._w=l*c*u-d*f*p;break;case"YXZ":this._x=d*c*u+l*f*p,this._y=l*f*u-d*c*p,this._z=l*c*p-d*f*u,this._w=l*c*u+d*f*p;break;case"ZXY":this._x=d*c*u-l*f*p,this._y=l*f*u+d*c*p,this._z=l*c*p+d*f*u,this._w=l*c*u-d*f*p;break;case"ZYX":this._x=d*c*u-l*f*p,this._y=l*f*u+d*c*p,this._z=l*c*p-d*f*u,this._w=l*c*u+d*f*p;break;case"YZX":this._x=d*c*u+l*f*p,this._y=l*f*u+d*c*p,this._z=l*c*p-d*f*u,this._w=l*c*u-d*f*p;break;case"XZY":this._x=d*c*u-l*f*p,this._y=l*f*u-d*c*p,this._z=l*c*p+d*f*u,this._w=l*c*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],n=e[4],s=e[8],o=e[1],a=e[5],h=e[9],l=e[2],c=e[6],u=e[10],d=i+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(c-h)*f,this._y=(s-l)*f,this._z=(o-n)*f}else if(i>a&&i>u){const f=2*Math.sqrt(1+i-a-u);this._w=(c-h)/f,this._x=.25*f,this._y=(n+o)/f,this._z=(s+l)/f}else if(a>u){const f=2*Math.sqrt(1+a-i-u);this._w=(s-l)/f,this._x=(n+o)/f,this._y=.25*f,this._z=(h+c)/f}else{const f=2*Math.sqrt(1+u-i-a);this._w=(o-n)/f,this._x=(s+l)/f,this._y=(h+c)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Ri(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(i===0)return this;const n=Math.min(1,e/i);return this.slerp(t,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,n=t._y,s=t._z,o=t._w,a=e._x,h=e._y,l=e._z,c=e._w;return this._x=i*c+o*a+n*l-s*h,this._y=n*c+o*h+s*a-i*l,this._z=s*c+o*l+i*h-n*a,this._w=o*c-i*a-n*h-s*l,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const i=this._x,n=this._y,s=this._z,o=this._w;let a=o*t._w+i*t._x+n*t._y+s*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=i,this._y=n,this._z=s,this;const h=1-a*a;if(h<=Number.EPSILON){const f=1-e;return this._w=f*o+e*this._w,this._x=f*i+e*this._x,this._y=f*n+e*this._y,this._z=f*s+e*this._z,this.normalize(),this}const l=Math.sqrt(h),c=Math.atan2(l,a),u=Math.sin((1-e)*c)/l,d=Math.sin(e*c)/l;return this._w=o*u+this._w*d,this._x=i*u+this._x*d,this._y=n*u+this._y*d,this._z=s*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(n*Math.sin(t),n*Math.cos(t),s*Math.sin(e),s*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},J=class _x{constructor(t=0,e=0,i=0){_x.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(e_.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(e_.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,n=this.z,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6]*n,this.y=s[1]*e+s[4]*i+s[7]*n,this.z=s[2]*e+s[5]*i+s[8]*n,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,s=t.elements,o=1/(s[3]*e+s[7]*i+s[11]*n+s[15]);return this.x=(s[0]*e+s[4]*i+s[8]*n+s[12])*o,this.y=(s[1]*e+s[5]*i+s[9]*n+s[13])*o,this.z=(s[2]*e+s[6]*i+s[10]*n+s[14])*o,this}applyQuaternion(t){const e=this.x,i=this.y,n=this.z,s=t.x,o=t.y,a=t.z,h=t.w,l=2*(o*n-a*i),c=2*(a*e-s*n),u=2*(s*i-o*e);return this.x=e+h*l+o*u-a*c,this.y=i+h*c+a*l-s*u,this.z=n+h*u+s*c-o*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,n=this.z,s=t.elements;return this.x=s[0]*e+s[4]*i+s[8]*n,this.y=s[1]*e+s[5]*i+s[9]*n,this.z=s[2]*e+s[6]*i+s[10]*n,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,n=t.y,s=t.z,o=e.x,a=e.y,h=e.z;return this.x=n*h-s*a,this.y=s*o-i*h,this.z=i*a-n*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return Jd.copy(this).projectOnVector(t),this.sub(Jd)}reflect(t){return this.sub(Jd.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(Ri(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const n=Math.sin(e)*t;return this.x=n*Math.sin(i),this.y=Math.cos(e)*t,this.z=n*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,i=Math.sqrt(1-e*e);return this.x=i*Math.cos(t),this.y=e,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const Jd=new J,e_=new Wh;let $h=class{constructor(t=new J(1/0,1/0,1/0),e=new J(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(dn.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(dn.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=dn.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0){const s=i.getAttribute("position");if(e===!0&&s!==void 0&&t.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)t.isMesh===!0?t.getVertexPosition(o,dn):dn.fromBufferAttribute(s,o),dn.applyMatrix4(t.matrixWorld),this.expandByPoint(dn);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),ll.copy(t.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),ll.copy(i.boundingBox)),ll.applyMatrix4(t.matrixWorld),this.union(ll)}const n=t.children;for(let s=0,o=n.length;s<o;s++)this.expandByObject(n[s],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,dn),dn.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Sa),cl.subVectors(this.max,Sa),Kr.subVectors(t.a,Sa),jr.subVectors(t.b,Sa),Qr.subVectors(t.c,Sa),bs.subVectors(jr,Kr),Ms.subVectors(Qr,jr),er.subVectors(Kr,Qr);let e=[0,-bs.z,bs.y,0,-Ms.z,Ms.y,0,-er.z,er.y,bs.z,0,-bs.x,Ms.z,0,-Ms.x,er.z,0,-er.x,-bs.y,bs.x,0,-Ms.y,Ms.x,0,-er.y,er.x,0];return!Kd(e,Kr,jr,Qr,cl)||(e=[1,0,0,0,1,0,0,0,1],!Kd(e,Kr,jr,Qr,cl))?!1:(ul.crossVectors(bs,Ms),e=[ul.x,ul.y,ul.z],Kd(e,Kr,jr,Qr,cl))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,dn).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(dn).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Xn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Xn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Xn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Xn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Xn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Xn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Xn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Xn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Xn),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}};const Xn=[new J,new J,new J,new J,new J,new J,new J,new J],dn=new J,ll=new $h,Kr=new J,jr=new J,Qr=new J,bs=new J,Ms=new J,er=new J,Sa=new J,cl=new J,ul=new J,ir=new J;function Kd(r,t,e,i,n){for(let s=0,o=r.length-3;s<=o;s+=3){ir.fromArray(r,s);const a=n.x*Math.abs(ir.x)+n.y*Math.abs(ir.y)+n.z*Math.abs(ir.z),h=t.dot(ir),l=e.dot(ir),c=i.dot(ir);if(Math.max(-Math.max(h,l,c),Math.min(h,l,c))>a)return!1}return!0}const WM=new $h,Aa=new J,jd=new J;let mm=class{constructor(t=new J,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;e!==void 0?i.copy(e):WM.setFromPoints(t).getCenter(i);let n=0;for(let s=0,o=t.length;s<o;s++)n=Math.max(n,i.distanceToSquared(t[s]));return this.radius=Math.sqrt(n),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Aa.subVectors(t,this.center);const e=Aa.lengthSq();if(e>this.radius*this.radius){const i=Math.sqrt(e),n=(i-this.radius)*.5;this.center.addScaledVector(Aa,n/i),this.radius+=n}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(jd.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Aa.copy(t.center).add(jd)),this.expandByPoint(Aa.copy(t.center).sub(jd))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}};const qn=new J,Qd=new J,dl=new J,ws=new J,tf=new J,fl=new J,ef=new J;let yx=class{constructor(t=new J,e=new J(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,qn)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=qn.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(qn.copy(this.origin).addScaledVector(this.direction,e),qn.distanceToSquared(t))}distanceSqToSegment(t,e,i,n){Qd.copy(t).add(e).multiplyScalar(.5),dl.copy(e).sub(t).normalize(),ws.copy(this.origin).sub(Qd);const s=t.distanceTo(e)*.5,o=-this.direction.dot(dl),a=ws.dot(this.direction),h=-ws.dot(dl),l=ws.lengthSq(),c=Math.abs(1-o*o);let u,d,f,p;if(c>0)if(u=o*h-a,d=o*a-h,p=s*c,u>=0)if(d>=-p)if(d<=p){const _=1/c;u*=_,d*=_,f=u*(u+o*d+2*a)+d*(o*u+d+2*h)+l}else d=s,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*h)+l;else d=-s,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*h)+l;else d<=-p?(u=Math.max(0,-(-o*s+a)),d=u>0?-s:Math.min(Math.max(-s,-h),s),f=-u*u+d*(d+2*h)+l):d<=p?(u=0,d=Math.min(Math.max(-s,-h),s),f=d*(d+2*h)+l):(u=Math.max(0,-(o*s+a)),d=u>0?s:Math.min(Math.max(-s,-h),s),f=-u*u+d*(d+2*h)+l);else d=o>0?-s:s,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*h)+l;return i&&i.copy(this.origin).addScaledVector(this.direction,u),n&&n.copy(Qd).addScaledVector(dl,d),f}intersectSphere(t,e){qn.subVectors(t.center,this.origin);const i=qn.dot(this.direction),n=qn.dot(qn)-i*i,s=t.radius*t.radius;if(n>s)return null;const o=Math.sqrt(s-n),a=i-o,h=i+o;return h<0?null:a<0?this.at(h,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return i===null?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,n,s,o,a,h;const l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,d=this.origin;return l>=0?(i=(t.min.x-d.x)*l,n=(t.max.x-d.x)*l):(i=(t.max.x-d.x)*l,n=(t.min.x-d.x)*l),c>=0?(s=(t.min.y-d.y)*c,o=(t.max.y-d.y)*c):(s=(t.max.y-d.y)*c,o=(t.min.y-d.y)*c),i>o||s>n||((s>i||isNaN(i))&&(i=s),(o<n||isNaN(n))&&(n=o),u>=0?(a=(t.min.z-d.z)*u,h=(t.max.z-d.z)*u):(a=(t.max.z-d.z)*u,h=(t.min.z-d.z)*u),i>h||a>n)||((a>i||i!==i)&&(i=a),(h<n||n!==n)&&(n=h),n<0)?null:this.at(i>=0?i:n,e)}intersectsBox(t){return this.intersectBox(t,qn)!==null}intersectTriangle(t,e,i,n,s){tf.subVectors(e,t),fl.subVectors(i,t),ef.crossVectors(tf,fl);let o=this.direction.dot(ef),a;if(o>0){if(n)return null;a=1}else if(o<0)a=-1,o=-o;else return null;ws.subVectors(this.origin,t);const h=a*this.direction.dot(fl.crossVectors(ws,fl));if(h<0)return null;const l=a*this.direction.dot(tf.cross(ws));if(l<0||h+l>o)return null;const c=-a*ws.dot(ef);return c<0?null:this.at(c/o,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},qi=class Bp{constructor(t,e,i,n,s,o,a,h,l,c,u,d,f,p,_,g){Bp.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,i,n,s,o,a,h,l,c,u,d,f,p,_,g)}set(t,e,i,n,s,o,a,h,l,c,u,d,f,p,_,g){const m=this.elements;return m[0]=t,m[4]=e,m[8]=i,m[12]=n,m[1]=s,m[5]=o,m[9]=a,m[13]=h,m[2]=l,m[6]=c,m[10]=u,m[14]=d,m[3]=f,m[7]=p,m[11]=_,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Bp().fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,n=1/to.setFromMatrixColumn(t,0).length(),s=1/to.setFromMatrixColumn(t,1).length(),o=1/to.setFromMatrixColumn(t,2).length();return e[0]=i[0]*n,e[1]=i[1]*n,e[2]=i[2]*n,e[3]=0,e[4]=i[4]*s,e[5]=i[5]*s,e[6]=i[6]*s,e[7]=0,e[8]=i[8]*o,e[9]=i[9]*o,e[10]=i[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,n=t.y,s=t.z,o=Math.cos(i),a=Math.sin(i),h=Math.cos(n),l=Math.sin(n),c=Math.cos(s),u=Math.sin(s);if(t.order==="XYZ"){const d=o*c,f=o*u,p=a*c,_=a*u;e[0]=h*c,e[4]=-h*u,e[8]=l,e[1]=f+p*l,e[5]=d-_*l,e[9]=-a*h,e[2]=_-d*l,e[6]=p+f*l,e[10]=o*h}else if(t.order==="YXZ"){const d=h*c,f=h*u,p=l*c,_=l*u;e[0]=d+_*a,e[4]=p*a-f,e[8]=o*l,e[1]=o*u,e[5]=o*c,e[9]=-a,e[2]=f*a-p,e[6]=_+d*a,e[10]=o*h}else if(t.order==="ZXY"){const d=h*c,f=h*u,p=l*c,_=l*u;e[0]=d-_*a,e[4]=-o*u,e[8]=p+f*a,e[1]=f+p*a,e[5]=o*c,e[9]=_-d*a,e[2]=-o*l,e[6]=a,e[10]=o*h}else if(t.order==="ZYX"){const d=o*c,f=o*u,p=a*c,_=a*u;e[0]=h*c,e[4]=p*l-f,e[8]=d*l+_,e[1]=h*u,e[5]=_*l+d,e[9]=f*l-p,e[2]=-l,e[6]=a*h,e[10]=o*h}else if(t.order==="YZX"){const d=o*h,f=o*l,p=a*h,_=a*l;e[0]=h*c,e[4]=_-d*u,e[8]=p*u+f,e[1]=u,e[5]=o*c,e[9]=-a*c,e[2]=-l*c,e[6]=f*u+p,e[10]=d-_*u}else if(t.order==="XZY"){const d=o*h,f=o*l,p=a*h,_=a*l;e[0]=h*c,e[4]=-u,e[8]=l*c,e[1]=d*u+_,e[5]=o*c,e[9]=f*u-p,e[2]=p*u-f,e[6]=a*c,e[10]=_*u+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose($M,t,XM)}lookAt(t,e,i){const n=this.elements;return Ui.subVectors(t,e),Ui.lengthSq()===0&&(Ui.z=1),Ui.normalize(),Ss.crossVectors(i,Ui),Ss.lengthSq()===0&&(Math.abs(i.z)===1?Ui.x+=1e-4:Ui.z+=1e-4,Ui.normalize(),Ss.crossVectors(i,Ui)),Ss.normalize(),pl.crossVectors(Ui,Ss),n[0]=Ss.x,n[4]=pl.x,n[8]=Ui.x,n[1]=Ss.y,n[5]=pl.y,n[9]=Ui.y,n[2]=Ss.z,n[6]=pl.z,n[10]=Ui.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,s=this.elements,o=i[0],a=i[4],h=i[8],l=i[12],c=i[1],u=i[5],d=i[9],f=i[13],p=i[2],_=i[6],g=i[10],m=i[14],x=i[3],y=i[7],v=i[11],E=i[15],b=n[0],w=n[4],T=n[8],S=n[12],M=n[1],I=n[5],N=n[9],O=n[13],B=n[2],Y=n[6],$=n[10],st=n[14],X=n[3],ut=n[7],pt=n[11],mt=n[15];return s[0]=o*b+a*M+h*B+l*X,s[4]=o*w+a*I+h*Y+l*ut,s[8]=o*T+a*N+h*$+l*pt,s[12]=o*S+a*O+h*st+l*mt,s[1]=c*b+u*M+d*B+f*X,s[5]=c*w+u*I+d*Y+f*ut,s[9]=c*T+u*N+d*$+f*pt,s[13]=c*S+u*O+d*st+f*mt,s[2]=p*b+_*M+g*B+m*X,s[6]=p*w+_*I+g*Y+m*ut,s[10]=p*T+_*N+g*$+m*pt,s[14]=p*S+_*O+g*st+m*mt,s[3]=x*b+y*M+v*B+E*X,s[7]=x*w+y*I+v*Y+E*ut,s[11]=x*T+y*N+v*$+E*pt,s[15]=x*S+y*O+v*st+E*mt,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],n=t[8],s=t[12],o=t[1],a=t[5],h=t[9],l=t[13],c=t[2],u=t[6],d=t[10],f=t[14],p=t[3],_=t[7],g=t[11],m=t[15];return p*(+s*h*u-n*l*u-s*a*d+i*l*d+n*a*f-i*h*f)+_*(+e*h*f-e*l*d+s*o*d-n*o*f+n*l*c-s*h*c)+g*(+e*l*u-e*a*f-s*o*u+i*o*f+s*a*c-i*l*c)+m*(-n*a*c-e*h*u+e*a*d+n*o*u-i*o*d+i*h*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const n=this.elements;return t.isVector3?(n[12]=t.x,n[13]=t.y,n[14]=t.z):(n[12]=t,n[13]=e,n[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],s=t[3],o=t[4],a=t[5],h=t[6],l=t[7],c=t[8],u=t[9],d=t[10],f=t[11],p=t[12],_=t[13],g=t[14],m=t[15],x=u*g*l-_*d*l+_*h*f-a*g*f-u*h*m+a*d*m,y=p*d*l-c*g*l-p*h*f+o*g*f+c*h*m-o*d*m,v=c*_*l-p*u*l+p*a*f-o*_*f-c*a*m+o*u*m,E=p*u*h-c*_*h-p*a*d+o*_*d+c*a*g-o*u*g,b=e*x+i*y+n*v+s*E;if(b===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/b;return t[0]=x*w,t[1]=(_*d*s-u*g*s-_*n*f+i*g*f+u*n*m-i*d*m)*w,t[2]=(a*g*s-_*h*s+_*n*l-i*g*l-a*n*m+i*h*m)*w,t[3]=(u*h*s-a*d*s-u*n*l+i*d*l+a*n*f-i*h*f)*w,t[4]=y*w,t[5]=(c*g*s-p*d*s+p*n*f-e*g*f-c*n*m+e*d*m)*w,t[6]=(p*h*s-o*g*s-p*n*l+e*g*l+o*n*m-e*h*m)*w,t[7]=(o*d*s-c*h*s+c*n*l-e*d*l-o*n*f+e*h*f)*w,t[8]=v*w,t[9]=(p*u*s-c*_*s-p*i*f+e*_*f+c*i*m-e*u*m)*w,t[10]=(o*_*s-p*a*s+p*i*l-e*_*l-o*i*m+e*a*m)*w,t[11]=(c*a*s-o*u*s-c*i*l+e*u*l+o*i*f-e*a*f)*w,t[12]=E*w,t[13]=(c*_*n-p*u*n+p*i*d-e*_*d-c*i*g+e*u*g)*w,t[14]=(p*a*n-o*_*n-p*i*h+e*_*h+o*i*g-e*a*g)*w,t[15]=(o*u*n-c*a*n+c*i*h-e*u*h-o*i*d+e*a*d)*w,this}scale(t){const e=this.elements,i=t.x,n=t.y,s=t.z;return e[0]*=i,e[4]*=n,e[8]*=s,e[1]*=i,e[5]*=n,e[9]*=s,e[2]*=i,e[6]*=n,e[10]*=s,e[3]*=i,e[7]*=n,e[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),n=Math.sin(e),s=1-i,o=t.x,a=t.y,h=t.z,l=s*o,c=s*a;return this.set(l*o+i,l*a-n*h,l*h+n*a,0,l*a+n*h,c*a+i,c*h-n*o,0,l*h-n*a,c*h+n*o,s*h*h+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,n,s,o){return this.set(1,i,s,0,t,1,o,0,e,n,1,0,0,0,0,1),this}compose(t,e,i){const n=this.elements,s=e._x,o=e._y,a=e._z,h=e._w,l=s+s,c=o+o,u=a+a,d=s*l,f=s*c,p=s*u,_=o*c,g=o*u,m=a*u,x=h*l,y=h*c,v=h*u,E=i.x,b=i.y,w=i.z;return n[0]=(1-(_+m))*E,n[1]=(f+v)*E,n[2]=(p-y)*E,n[3]=0,n[4]=(f-v)*b,n[5]=(1-(d+m))*b,n[6]=(g+x)*b,n[7]=0,n[8]=(p+y)*w,n[9]=(g-x)*w,n[10]=(1-(d+_))*w,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,this}decompose(t,e,i){const n=this.elements;let s=to.set(n[0],n[1],n[2]).length();const o=to.set(n[4],n[5],n[6]).length(),a=to.set(n[8],n[9],n[10]).length();this.determinant()<0&&(s=-s),t.x=n[12],t.y=n[13],t.z=n[14],fn.copy(this);const l=1/s,c=1/o,u=1/a;return fn.elements[0]*=l,fn.elements[1]*=l,fn.elements[2]*=l,fn.elements[4]*=c,fn.elements[5]*=c,fn.elements[6]*=c,fn.elements[8]*=u,fn.elements[9]*=u,fn.elements[10]*=u,e.setFromRotationMatrix(fn),i.x=s,i.y=o,i.z=a,this}makePerspective(t,e,i,n,s,o,a=hl){const h=this.elements,l=2*s/(e-t),c=2*s/(i-n),u=(e+t)/(e-t),d=(i+n)/(i-n);let f,p;if(a===hl)f=-(o+s)/(o-s),p=-2*o*s/(o-s);else if(a===Jg)f=-o/(o-s),p=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return h[0]=l,h[4]=0,h[8]=u,h[12]=0,h[1]=0,h[5]=c,h[9]=d,h[13]=0,h[2]=0,h[6]=0,h[10]=f,h[14]=p,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,e,i,n,s,o,a=hl){const h=this.elements,l=1/(e-t),c=1/(i-n),u=1/(o-s),d=(e+t)*l,f=(i+n)*c;let p,_;if(a===hl)p=(o+s)*u,_=-2*u;else if(a===Jg)p=s*u,_=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return h[0]=2*l,h[4]=0,h[8]=0,h[12]=-d,h[1]=0,h[5]=2*c,h[9]=0,h[13]=-f,h[2]=0,h[6]=0,h[10]=_,h[14]=-p,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let n=0;n<16;n++)if(e[n]!==i[n])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}};const to=new J,fn=new qi,$M=new J(0,0,0),XM=new J(1,1,1),Ss=new J,pl=new J,Ui=new J,i_=new qi,n_=new Wh;let Qu=class xx{constructor(t=0,e=0,i=0,n=xx.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=n}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,n=this._order){return this._x=t,this._y=e,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const n=t.elements,s=n[0],o=n[4],a=n[8],h=n[1],l=n[5],c=n[9],u=n[2],d=n[6],f=n[10];switch(e){case"XYZ":this._y=Math.asin(Ri(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,f),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Ri(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(h,l)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(Ri(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(h,s));break;case"ZYX":this._y=Math.asin(-Ri(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(h,s)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(Ri(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Ri(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-c,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return i_.makeRotationFromQuaternion(t),this.setFromRotationMatrix(i_,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return n_.setFromEuler(this),this.setFromQuaternion(n_,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};Qu.DEFAULT_ORDER="XYZ";let qM=class{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}},YM=0;const s_=new J,eo=new Wh,Yn=new qi,ml=new J,Ea=new J,ZM=new J,JM=new Wh,r_=new J(1,0,0),o_=new J(0,1,0),a_=new J(0,0,1),h_={type:"added"},KM={type:"removed"},io={type:"childadded",child:null},nf={type:"childremoved",child:null};let fa=class eu extends ju{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:YM++}),this.uuid=Gh(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=eu.DEFAULT_UP.clone();const t=new J,e=new Qu,i=new Wh,n=new J(1,1,1);function s(){i.setFromEuler(e,!1)}function o(){e.setFromQuaternion(i,void 0,!1)}e._onChange(s),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new qi},normalMatrix:{value:new da}}),this.matrix=new qi,this.matrixWorld=new qi,this.matrixAutoUpdate=eu.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=eu.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new qM,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return eo.setFromAxisAngle(t,e),this.quaternion.multiply(eo),this}rotateOnWorldAxis(t,e){return eo.setFromAxisAngle(t,e),this.quaternion.premultiply(eo),this}rotateX(t){return this.rotateOnAxis(r_,t)}rotateY(t){return this.rotateOnAxis(o_,t)}rotateZ(t){return this.rotateOnAxis(a_,t)}translateOnAxis(t,e){return s_.copy(t).applyQuaternion(this.quaternion),this.position.add(s_.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(r_,t)}translateY(t){return this.translateOnAxis(o_,t)}translateZ(t){return this.translateOnAxis(a_,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Yn.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?ml.copy(t):ml.set(t,e,i);const n=this.parent;this.updateWorldMatrix(!0,!1),Ea.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Yn.lookAt(Ea,ml,this.up):Yn.lookAt(ml,Ea,this.up),this.quaternion.setFromRotationMatrix(Yn),n&&(Yn.extractRotation(n.matrixWorld),eo.setFromRotationMatrix(Yn),this.quaternion.premultiply(eo.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(h_),io.child=t,this.dispatchEvent(io),io.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(KM),nf.child=t,this.dispatchEvent(nf),nf.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Yn.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Yn.multiply(t.parent.matrixWorld)),t.applyMatrix4(Yn),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(h_),io.child=t,this.dispatchEvent(io),io.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,n=this.children.length;i<n;i++){const o=this.children[i].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const n=this.children;for(let s=0,o=n.length;s<o;s++)n[s].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ea,t,ZM),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(Ea,JM,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const i=this.parent;if(t===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const n=this.children;for(let s=0,o=n.length;s<o;s++)n[s].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(t),this._colorsTexture!==null&&(n.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),this.boundingBox!==null&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()}));function s(a,h){return a[h.uuid]===void 0&&(a[h.uuid]=h.toJSON(t)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=s(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const h=a.shapes;if(Array.isArray(h))for(let l=0,c=h.length;l<c;l++){const u=h[l];s(t.shapes,u)}else s(t.shapes,h)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(t.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let h=0,l=this.material.length;h<l;h++)a.push(s(t.materials,this.material[h]));n.material=a}else n.material=s(t.materials,this.material);if(this.children.length>0){n.children=[];for(let a=0;a<this.children.length;a++)n.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){n.animations=[];for(let a=0;a<this.animations.length;a++){const h=this.animations[a];n.animations.push(s(t.animations,h))}}if(e){const a=o(t.geometries),h=o(t.materials),l=o(t.textures),c=o(t.images),u=o(t.shapes),d=o(t.skeletons),f=o(t.animations),p=o(t.nodes);a.length>0&&(i.geometries=a),h.length>0&&(i.materials=h),l.length>0&&(i.textures=l),c.length>0&&(i.images=c),u.length>0&&(i.shapes=u),d.length>0&&(i.skeletons=d),f.length>0&&(i.animations=f),p.length>0&&(i.nodes=p)}return i.object=n,i;function o(a){const h=[];for(const l in a){const c=a[l];delete c.metadata,h.push(c)}return h}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){const n=t.children[i];this.add(n.clone())}return this}};fa.DEFAULT_UP=new J(0,1,0);fa.DEFAULT_MATRIX_AUTO_UPDATE=!0;fa.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const pn=new J,Zn=new J,sf=new J,Jn=new J,no=new J,so=new J,l_=new J,rf=new J,of=new J,af=new J;let gl=class qo{constructor(t=new J,e=new J,i=new J){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,n){n.subVectors(i,e),pn.subVectors(t,e),n.cross(pn);const s=n.lengthSq();return s>0?n.multiplyScalar(1/Math.sqrt(s)):n.set(0,0,0)}static getBarycoord(t,e,i,n,s){pn.subVectors(n,e),Zn.subVectors(i,e),sf.subVectors(t,e);const o=pn.dot(pn),a=pn.dot(Zn),h=pn.dot(sf),l=Zn.dot(Zn),c=Zn.dot(sf),u=o*l-a*a;if(u===0)return s.set(0,0,0),null;const d=1/u,f=(l*h-a*c)*d,p=(o*c-a*h)*d;return s.set(1-f-p,p,f)}static containsPoint(t,e,i,n){return this.getBarycoord(t,e,i,n,Jn)===null?!1:Jn.x>=0&&Jn.y>=0&&Jn.x+Jn.y<=1}static getInterpolation(t,e,i,n,s,o,a,h){return this.getBarycoord(t,e,i,n,Jn)===null?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(s,Jn.x),h.addScaledVector(o,Jn.y),h.addScaledVector(a,Jn.z),h)}static isFrontFacing(t,e,i,n){return pn.subVectors(i,e),Zn.subVectors(t,e),pn.cross(Zn).dot(n)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this}setFromAttributeAndIndices(t,e,i,n){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return pn.subVectors(this.c,this.b),Zn.subVectors(this.a,this.b),pn.cross(Zn).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return qo.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return qo.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,i,n,s){return qo.getInterpolation(t,this.a,this.b,this.c,e,i,n,s)}containsPoint(t){return qo.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return qo.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,n=this.b,s=this.c;let o,a;no.subVectors(n,i),so.subVectors(s,i),rf.subVectors(t,i);const h=no.dot(rf),l=so.dot(rf);if(h<=0&&l<=0)return e.copy(i);of.subVectors(t,n);const c=no.dot(of),u=so.dot(of);if(c>=0&&u<=c)return e.copy(n);const d=h*u-c*l;if(d<=0&&h>=0&&c<=0)return o=h/(h-c),e.copy(i).addScaledVector(no,o);af.subVectors(t,s);const f=no.dot(af),p=so.dot(af);if(p>=0&&f<=p)return e.copy(s);const _=f*l-h*p;if(_<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(i).addScaledVector(so,a);const g=c*p-f*u;if(g<=0&&u-c>=0&&f-p>=0)return l_.subVectors(s,n),a=(u-c)/(u-c+(f-p)),e.copy(n).addScaledVector(l_,a);const m=1/(g+_+d);return o=_*m,a=d*m,e.copy(i).addScaledVector(no,o).addScaledVector(so,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}};const vx={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},As={h:0,s:0,l:0},_l={h:0,s:0,l:0};function hf(r,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?r+(t-r)*6*e:e<1/2?t:e<2/3?r+(t-r)*6*(2/3-e):r}let Br=class{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){if(e===void 0&&i===void 0){const n=t;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(t,e,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=Bs){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,un.toWorkingColorSpace(this,e),this}setRGB(t,e,i,n=un.workingColorSpace){return this.r=t,this.g=e,this.b=i,un.toWorkingColorSpace(this,n),this}setHSL(t,e,i,n=un.workingColorSpace){if(t=zM(t,1),e=Ri(e,0,1),i=Ri(i,0,1),e===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+e):i+e-i*e,o=2*i-s;this.r=hf(o,s,t+1/3),this.g=hf(o,s,t),this.b=hf(o,s,t-1/3)}return un.toWorkingColorSpace(this,n),this}setStyle(t,e=Bs){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(t)){let s;const o=n[1],a=n[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,e);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,e);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const s=n[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(s,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=Bs){const i=vx[t.toLowerCase()];return i!==void 0?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=ta(t.r),this.g=ta(t.g),this.b=ta(t.b),this}copyLinearToSRGB(t){return this.r=Yd(t.r),this.g=Yd(t.g),this.b=Yd(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=Bs){return un.fromWorkingColorSpace(oi.copy(this),t),Math.round(Ri(oi.r*255,0,255))*65536+Math.round(Ri(oi.g*255,0,255))*256+Math.round(Ri(oi.b*255,0,255))}getHexString(t=Bs){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=un.workingColorSpace){un.fromWorkingColorSpace(oi.copy(this),e);const i=oi.r,n=oi.g,s=oi.b,o=Math.max(i,n,s),a=Math.min(i,n,s);let h,l;const c=(a+o)/2;if(a===o)h=0,l=0;else{const u=o-a;switch(l=c<=.5?u/(o+a):u/(2-o-a),o){case i:h=(n-s)/u+(n<s?6:0);break;case n:h=(s-i)/u+2;break;case s:h=(i-n)/u+4;break}h/=6}return t.h=h,t.s=l,t.l=c,t}getRGB(t,e=un.workingColorSpace){return un.fromWorkingColorSpace(oi.copy(this),e),t.r=oi.r,t.g=oi.g,t.b=oi.b,t}getStyle(t=Bs){un.fromWorkingColorSpace(oi.copy(this),t);const e=oi.r,i=oi.g,n=oi.b;return t!==Bs?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(t,e,i){return this.getHSL(As),this.setHSL(As.h+t,As.s+e,As.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(As),t.getHSL(_l);const i=Xd(As.h,_l.h,e),n=Xd(As.s,_l.s,e),s=Xd(As.l,_l.l,e);return this.setHSL(i,n,s),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,i=this.g,n=this.b,s=t.elements;return this.r=s[0]*e+s[3]*i+s[6]*n,this.g=s[1]*e+s[4]*i+s[7]*n,this.b=s[2]*e+s[5]*i+s[8]*n,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const oi=new Br;Br.NAMES=vx;let jM=0,_h=class extends ju{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:jM++}),this.uuid=Gh(),this.name="",this.type="Material",this.blending=Ng,this.side=Up,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=kg,this.blendDst=Vg,this.blendEquation=Bg,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new Br(0,0,0),this.blendAlpha=0,this.depthFunc=Hg,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=Yg,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Zr,this.stencilZFail=Zr,this.stencilZPass=Zr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const i=t[e];if(i===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const n=this[e];if(n===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[e]=i}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Ng&&(i.blending=this.blending),this.side!==Up&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==kg&&(i.blendSrc=this.blendSrc),this.blendDst!==Vg&&(i.blendDst=this.blendDst),this.blendEquation!==Bg&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==Hg&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==Yg&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Zr&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Zr&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Zr&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(s){const o=[];for(const a in s){const h=s[a];delete h.metadata,o.push(h)}return o}if(e){const s=n(t.textures),o=n(t.images);s.length>0&&(i.textures=s),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(e!==null){const n=e.length;i=new Array(n);for(let s=0;s!==n;++s)i[s]=e[s].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}},QM=class extends _h{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new Br(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Qu,this.combine=CM,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}};const Ue=new J,yl=new Xi;let ea=class{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i,this.usage=Zg,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=LM,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}get updateRange(){return NM("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let n=0,s=this.itemSize;n<s;n++)this.array[t+n]=e.array[i+n];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)yl.fromBufferAttribute(this,e),yl.applyMatrix3(t),this.setXY(e,yl.x,yl.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)Ue.fromBufferAttribute(this,e),Ue.applyMatrix3(t),this.setXYZ(e,Ue.x,Ue.y,Ue.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)Ue.fromBufferAttribute(this,e),Ue.applyMatrix4(t),this.setXYZ(e,Ue.x,Ue.y,Ue.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)Ue.fromBufferAttribute(this,e),Ue.applyNormalMatrix(t),this.setXYZ(e,Ue.x,Ue.y,Ue.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)Ue.fromBufferAttribute(this,e),Ue.transformDirection(t),this.setXYZ(e,Ue.x,Ue.y,Ue.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=Ma(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=Si(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Ma(e,this.array)),e}setX(t,e){return this.normalized&&(e=Si(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Ma(e,this.array)),e}setY(t,e){return this.normalized&&(e=Si(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Ma(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Si(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Ma(e,this.array)),e}setW(t,e){return this.normalized&&(e=Si(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=Si(e,this.array),i=Si(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,n){return t*=this.itemSize,this.normalized&&(e=Si(e,this.array),i=Si(i,this.array),n=Si(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this}setXYZW(t,e,i,n,s){return t*=this.itemSize,this.normalized&&(e=Si(e,this.array),i=Si(i,this.array),n=Si(n,this.array),s=Si(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=s,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Zg&&(t.usage=this.usage),t}},tw=class extends ea{constructor(t,e,i){super(new Uint16Array(t),e,i)}},ew=class extends ea{constructor(t,e,i){super(new Uint32Array(t),e,i)}},Zi=class extends ea{constructor(t,e,i){super(new Float32Array(t),e,i)}},iw=0;const Ki=new qi,lf=new fa,ro=new J,Ni=new $h,Ta=new $h,$e=new J;let an=class bx extends ju{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:iw++}),this.uuid=Gh(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(UM(t)?ew:tw)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new da().getNormalMatrix(t);i.applyNormalMatrix(s),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(t),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Ki.makeRotationFromQuaternion(t),this.applyMatrix4(Ki),this}rotateX(t){return Ki.makeRotationX(t),this.applyMatrix4(Ki),this}rotateY(t){return Ki.makeRotationY(t),this.applyMatrix4(Ki),this}rotateZ(t){return Ki.makeRotationZ(t),this.applyMatrix4(Ki),this}translate(t,e,i){return Ki.makeTranslation(t,e,i),this.applyMatrix4(Ki),this}scale(t,e,i){return Ki.makeScale(t,e,i),this.applyMatrix4(Ki),this}lookAt(t){return lf.lookAt(t),lf.updateMatrix(),this.applyMatrix4(lf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(ro).negate(),this.translate(ro.x,ro.y,ro.z),this}setFromPoints(t){const e=[];for(let i=0,n=t.length;i<n;i++){const s=t[i];e.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Zi(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new $h);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new J(-1/0,-1/0,-1/0),new J(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,n=e.length;i<n;i++){const s=e[i];Ni.setFromBufferAttribute(s),this.morphTargetsRelative?($e.addVectors(this.boundingBox.min,Ni.min),this.boundingBox.expandByPoint($e),$e.addVectors(this.boundingBox.max,Ni.max),this.boundingBox.expandByPoint($e)):(this.boundingBox.expandByPoint(Ni.min),this.boundingBox.expandByPoint(Ni.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new mm);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new J,1/0);return}if(t){const i=this.boundingSphere.center;if(Ni.setFromBufferAttribute(t),e)for(let s=0,o=e.length;s<o;s++){const a=e[s];Ta.setFromBufferAttribute(a),this.morphTargetsRelative?($e.addVectors(Ni.min,Ta.min),Ni.expandByPoint($e),$e.addVectors(Ni.max,Ta.max),Ni.expandByPoint($e)):(Ni.expandByPoint(Ta.min),Ni.expandByPoint(Ta.max))}Ni.getCenter(i);let n=0;for(let s=0,o=t.count;s<o;s++)$e.fromBufferAttribute(t,s),n=Math.max(n,i.distanceToSquared($e));if(e)for(let s=0,o=e.length;s<o;s++){const a=e[s],h=this.morphTargetsRelative;for(let l=0,c=a.count;l<c;l++)$e.fromBufferAttribute(a,l),h&&(ro.fromBufferAttribute(t,l),$e.add(ro)),n=Math.max(n,i.distanceToSquared($e))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.position,n=e.normal,s=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new ea(new Float32Array(4*i.count),4));const o=this.getAttribute("tangent"),a=[],h=[];for(let T=0;T<i.count;T++)a[T]=new J,h[T]=new J;const l=new J,c=new J,u=new J,d=new Xi,f=new Xi,p=new Xi,_=new J,g=new J;function m(T,S,M){l.fromBufferAttribute(i,T),c.fromBufferAttribute(i,S),u.fromBufferAttribute(i,M),d.fromBufferAttribute(s,T),f.fromBufferAttribute(s,S),p.fromBufferAttribute(s,M),c.sub(l),u.sub(l),f.sub(d),p.sub(d);const I=1/(f.x*p.y-p.x*f.y);isFinite(I)&&(_.copy(c).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(I),g.copy(u).multiplyScalar(f.x).addScaledVector(c,-p.x).multiplyScalar(I),a[T].add(_),a[S].add(_),a[M].add(_),h[T].add(g),h[S].add(g),h[M].add(g))}let x=this.groups;x.length===0&&(x=[{start:0,count:t.count}]);for(let T=0,S=x.length;T<S;++T){const M=x[T],I=M.start,N=M.count;for(let O=I,B=I+N;O<B;O+=3)m(t.getX(O+0),t.getX(O+1),t.getX(O+2))}const y=new J,v=new J,E=new J,b=new J;function w(T){E.fromBufferAttribute(n,T),b.copy(E);const S=a[T];y.copy(S),y.sub(E.multiplyScalar(E.dot(S))).normalize(),v.crossVectors(b,S);const I=v.dot(h[T])<0?-1:1;o.setXYZW(T,y.x,y.y,y.z,I)}for(let T=0,S=x.length;T<S;++T){const M=x[T],I=M.start,N=M.count;for(let O=I,B=I+N;O<B;O+=3)w(t.getX(O+0)),w(t.getX(O+1)),w(t.getX(O+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new ea(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let d=0,f=i.count;d<f;d++)i.setXYZ(d,0,0,0);const n=new J,s=new J,o=new J,a=new J,h=new J,l=new J,c=new J,u=new J;if(t)for(let d=0,f=t.count;d<f;d+=3){const p=t.getX(d+0),_=t.getX(d+1),g=t.getX(d+2);n.fromBufferAttribute(e,p),s.fromBufferAttribute(e,_),o.fromBufferAttribute(e,g),c.subVectors(o,s),u.subVectors(n,s),c.cross(u),a.fromBufferAttribute(i,p),h.fromBufferAttribute(i,_),l.fromBufferAttribute(i,g),a.add(c),h.add(c),l.add(c),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(_,h.x,h.y,h.z),i.setXYZ(g,l.x,l.y,l.z)}else for(let d=0,f=e.count;d<f;d+=3)n.fromBufferAttribute(e,d+0),s.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),c.subVectors(o,s),u.subVectors(n,s),c.cross(u),i.setXYZ(d+0,c.x,c.y,c.z),i.setXYZ(d+1,c.x,c.y,c.z),i.setXYZ(d+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)$e.fromBufferAttribute(t,e),$e.normalize(),t.setXYZ(e,$e.x,$e.y,$e.z)}toNonIndexed(){function t(a,h){const l=a.array,c=a.itemSize,u=a.normalized,d=new l.constructor(h.length*c);let f=0,p=0;for(let _=0,g=h.length;_<g;_++){a.isInterleavedBufferAttribute?f=h[_]*a.data.stride+a.offset:f=h[_]*c;for(let m=0;m<c;m++)d[p++]=l[f++]}return new ea(d,c,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new bx,i=this.index.array,n=this.attributes;for(const a in n){const h=n[a],l=t(h,i);e.setAttribute(a,l)}const s=this.morphAttributes;for(const a in s){const h=[],l=s[a];for(let c=0,u=l.length;c<u;c++){const d=l[c],f=t(d,i);h.push(f)}e.morphAttributes[a]=h}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,h=o.length;a<h;a++){const l=o[a];e.addGroup(l.start,l.count,l.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const l in h)h[l]!==void 0&&(t[l]=h[l]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const h in i){const l=i[h];t.data.attributes[h]=l.toJSON(t.data)}const n={};let s=!1;for(const h in this.morphAttributes){const l=this.morphAttributes[h],c=[];for(let u=0,d=l.length;u<d;u++){const f=l[u];c.push(f.toJSON(t.data))}c.length>0&&(n[h]=c,s=!0)}s&&(t.data.morphAttributes=n,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(e));const n=t.attributes;for(const l in n){const c=n[l];this.setAttribute(l,c.clone(e))}const s=t.morphAttributes;for(const l in s){const c=[],u=s[l];for(let d=0,f=u.length;d<f;d++)c.push(u[d].clone(e));this.morphAttributes[l]=c}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let l=0,c=o.length;l<c;l++){const u=o[l];this.addGroup(u.start,u.count,u.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}};const c_=new qi,nr=new yx,xl=new mm,u_=new J,oo=new J,ao=new J,ho=new J,cf=new J,vl=new J,bl=new Xi,Ml=new Xi,wl=new Xi,d_=new J,f_=new J,p_=new J,Sl=new J,Al=new J;let gm=class extends fa{constructor(t=new an,e=new QM){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const n=e[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(t,e){const i=this.geometry,n=i.attributes.position,s=i.morphAttributes.position,o=i.morphTargetsRelative;e.fromBufferAttribute(n,t);const a=this.morphTargetInfluences;if(s&&a){vl.set(0,0,0);for(let h=0,l=s.length;h<l;h++){const c=a[h],u=s[h];c!==0&&(cf.fromBufferAttribute(u,t),o?vl.addScaledVector(cf,c):vl.addScaledVector(cf.sub(e),c))}e.add(vl)}return e}raycast(t,e){const i=this.geometry,n=this.material,s=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),xl.copy(i.boundingSphere),xl.applyMatrix4(s),nr.copy(t.ray).recast(t.near),!(xl.containsPoint(nr.origin)===!1&&(nr.intersectSphere(xl,u_)===null||nr.origin.distanceToSquared(u_)>(t.far-t.near)**2))&&(c_.copy(s).invert(),nr.copy(t.ray).applyMatrix4(c_),!(i.boundingBox!==null&&nr.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(t,e,nr)))}_computeIntersections(t,e,i){let n;const s=this.geometry,o=this.material,a=s.index,h=s.attributes.position,l=s.attributes.uv,c=s.attributes.uv1,u=s.attributes.normal,d=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],x=Math.max(g.start,f.start),y=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let v=x,E=y;v<E;v+=3){const b=a.getX(v),w=a.getX(v+1),T=a.getX(v+2);n=El(this,m,t,i,l,c,u,b,w,T),n&&(n.faceIndex=Math.floor(v/3),n.face.materialIndex=g.materialIndex,e.push(n))}}else{const p=Math.max(0,f.start),_=Math.min(a.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const x=a.getX(g),y=a.getX(g+1),v=a.getX(g+2);n=El(this,o,t,i,l,c,u,x,y,v),n&&(n.faceIndex=Math.floor(g/3),e.push(n))}}else if(h!==void 0)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],x=Math.max(g.start,f.start),y=Math.min(h.count,Math.min(g.start+g.count,f.start+f.count));for(let v=x,E=y;v<E;v+=3){const b=v,w=v+1,T=v+2;n=El(this,m,t,i,l,c,u,b,w,T),n&&(n.faceIndex=Math.floor(v/3),n.face.materialIndex=g.materialIndex,e.push(n))}}else{const p=Math.max(0,f.start),_=Math.min(h.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const x=g,y=g+1,v=g+2;n=El(this,o,t,i,l,c,u,x,y,v),n&&(n.faceIndex=Math.floor(g/3),e.push(n))}}}};function nw(r,t,e,i,n,s,o,a){let h;if(t.side===EM?h=i.intersectTriangle(o,s,n,!0,a):h=i.intersectTriangle(n,s,o,t.side===Up,a),h===null)return null;Al.copy(a),Al.applyMatrix4(r.matrixWorld);const l=e.ray.origin.distanceTo(Al);return l<e.near||l>e.far?null:{distance:l,point:Al.clone(),object:r}}function El(r,t,e,i,n,s,o,a,h,l){r.getVertexPosition(a,oo),r.getVertexPosition(h,ao),r.getVertexPosition(l,ho);const c=nw(r,t,e,i,oo,ao,ho,Sl);if(c){n&&(bl.fromBufferAttribute(n,a),Ml.fromBufferAttribute(n,h),wl.fromBufferAttribute(n,l),c.uv=gl.getInterpolation(Sl,oo,ao,ho,bl,Ml,wl,new Xi)),s&&(bl.fromBufferAttribute(s,a),Ml.fromBufferAttribute(s,h),wl.fromBufferAttribute(s,l),c.uv1=gl.getInterpolation(Sl,oo,ao,ho,bl,Ml,wl,new Xi)),o&&(d_.fromBufferAttribute(o,a),f_.fromBufferAttribute(o,h),p_.fromBufferAttribute(o,l),c.normal=gl.getInterpolation(Sl,oo,ao,ho,d_,f_,p_,new J),c.normal.dot(i.direction)>0&&c.normal.multiplyScalar(-1));const u={a,b:h,c:l,normal:new J,materialIndex:0};gl.getNormal(oo,ao,ho,u.normal),c.face=u}return c}let mi=class extends _h{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new Br(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}};const uu=new J,du=new J,m_=new qi,Ca=new yx,Tl=new mm,uf=new J,g_=new J;let Xh=class extends fa{constructor(t=new an,e=new mi){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,i=[0];for(let n=1,s=e.count;n<s;n++)uu.fromBufferAttribute(e,n-1),du.fromBufferAttribute(e,n),i[n]=i[n-1],i[n]+=uu.distanceTo(du);t.setAttribute("lineDistance",new Zi(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const i=this.geometry,n=this.matrixWorld,s=t.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),Tl.copy(i.boundingSphere),Tl.applyMatrix4(n),Tl.radius+=s,t.ray.intersectsSphere(Tl)===!1)return;m_.copy(n).invert(),Ca.copy(t.ray).applyMatrix4(m_);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),h=a*a,l=this.isLineSegments?2:1,c=i.index,d=i.attributes.position;if(c!==null){const f=Math.max(0,o.start),p=Math.min(c.count,o.start+o.count);for(let _=f,g=p-1;_<g;_+=l){const m=c.getX(_),x=c.getX(_+1),y=Cl(this,t,Ca,h,m,x);y&&e.push(y)}if(this.isLineLoop){const _=c.getX(p-1),g=c.getX(f),m=Cl(this,t,Ca,h,_,g);m&&e.push(m)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let _=f,g=p-1;_<g;_+=l){const m=Cl(this,t,Ca,h,_,_+1);m&&e.push(m)}if(this.isLineLoop){const _=Cl(this,t,Ca,h,p-1,f);_&&e.push(_)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const n=e[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}};function Cl(r,t,e,i,n,s){const o=r.geometry.attributes.position;if(uu.fromBufferAttribute(o,n),du.fromBufferAttribute(o,s),e.distanceSqToSegment(uu,du,uf,g_)>i)return;uf.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(uf);if(!(h<t.near||h>t.far))return{distance:h,point:g_.clone().applyMatrix4(r.matrixWorld),index:n,face:null,faceIndex:null,object:r}}const __=new J,y_=new J;let _m=class extends Xh{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,i=[];for(let n=0,s=e.count;n<s;n+=2)__.fromBufferAttribute(e,n),y_.fromBufferAttribute(e,n+1),i[n]=n===0?0:i[n-1],i[n+1]=i[n]+__.distanceTo(y_);t.setAttribute("lineDistance",new Zi(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}},fu=class extends _h{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new Br(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new Br(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=OM,this.normalScale=new Xi(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Qu,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}};typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ux}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ux);new J;new qi;new qi;new J;new J;const sw="0.0.1";var ii=[];for(var df=0;df<256;++df)ii.push((df+256).toString(16).slice(1));function rw(r,t=0){return(ii[r[t+0]]+ii[r[t+1]]+ii[r[t+2]]+ii[r[t+3]]+"-"+ii[r[t+4]]+ii[r[t+5]]+"-"+ii[r[t+6]]+ii[r[t+7]]+"-"+ii[r[t+8]]+ii[r[t+9]]+"-"+ii[r[t+10]]+ii[r[t+11]]+ii[r[t+12]]+ii[r[t+13]]+ii[r[t+14]]+ii[r[t+15]]).toLowerCase()}var Rl,ow=new Uint8Array(16);function aw(){if(!Rl&&(Rl=typeof crypto<"u"&&crypto.getRandomValues&&crypto.getRandomValues.bind(crypto),!Rl))throw new Error("crypto.getRandomValues() not supported. See https://github.com/uuidjs/uuid#getrandomvalues-not-supported");return Rl(ow)}var hw=typeof crypto<"u"&&crypto.randomUUID&&crypto.randomUUID.bind(crypto),x_={randomUUID:hw};function lw(r,t,e){if(x_.randomUUID&&!r)return x_.randomUUID();r=r||{};var i=r.random||(r.rng||aw)();return i[6]=i[6]&15|64,i[8]=i[8]&63|128,rw(i)}function Wr(){return lw()}let Mx=class extends Xh{set color(t){this.options.color=t,this.material instanceof mi&&this.material.color.set(t)}constructor(t){var e;super(),this.options={start:new me(0,0,.5),end:new me(1,0,.5),color:0},this.ogid=(e=t==null?void 0:t.ogid)!==null&&e!==void 0?e:Wr(),this.line=new vM(this.ogid),this.options=Object.assign(Object.assign({},this.options),t),this.options.ogid=this.ogid,this.setConfig(this.options)}validateOptions(){if(!this.options)throw new Error("Options are not defined for Line")}setConfig(t){this.validateOptions();const{start:e,end:i}=t;this.line.set_config(e.clone(),i.clone()),this.generateGeometry()}discardGeometry(){this.geometry.dispose()}generateGeometry(){this.discardGeometry(),this.line.generate_geometry();const t=this.line.get_geometry_serialized(),e=JSON.parse(t),i=new an;i.setAttribute("position",new Zi(e,3)),this.geometry=i,this.material=new mi({color:this.options.color})}};var iu;class cw extends Xh{set color(t){sn(this,iu,t),this.material instanceof mi&&this.material.color.set(t)}constructor(t){var e;super(),this.options={points:[],color:65280},this.isClosed=!1,this.transformationMatrix=new qi,iu.set(this,65280),this.ogid=(e=t==null?void 0:t.ogid)!==null&&e!==void 0?e:Wr(),this.polyline=new cu(this.ogid),this.options=Object.assign(Object.assign({},this.options),t),this.options.ogid=this.ogid,this.setConfig(this.options)}validateOptions(){if(!this.options)throw new Error("Options are not defined for Polyline")}setConfig(t){this.validateOptions();const{points:e}=t;this.polyline.set_config(e.map(i=>i.clone())),this.generateGeometry()}addPoint(t){if(!this.polyline)return;const{points:e}=this.options;e.push(t),!(this.options.points.length<2)&&(console.log(this.options.points),this.setConfig(this.options))}discardGeometry(){this.geometry.dispose()}generateGeometry(){this.discardGeometry(),this.polyline.generate_geometry();const t=this.polyline.get_geometry_serialized(),e=JSON.parse(t),i=new an;i.setAttribute("position",new Zi(e,3)),this.geometry=i,this.material=new mi({color:jt(this,iu,"f")}),this.isClosed=this.polyline.is_closed()}}iu=new WeakMap;var nu;class uw extends Xh{set color(t){sn(this,nu,t),this.material instanceof mi&&this.material.color.set(t)}constructor(t){var e;super(),this.options={center:new me(0,0,0),radius:3.5,startAngle:0,endAngle:Math.PI*2,segments:32},nu.set(this,65280),this.ogid=(e=t==null?void 0:t.ogid)!==null&&e!==void 0?e:Wr(),this.arc=new _M(this.ogid),this.options=Object.assign(Object.assign({},this.options),t),this.options.ogid=this.ogid,this.setConfig(this.options)}validateOptions(){if(!this.options)throw new Error("Options are not defined for Circle Arc")}setConfig(t){this.validateOptions();const{center:e,radius:i,segments:n,startAngle:s,endAngle:o}=t;this.arc.set_config(e.clone(),i,s,o,n),this.generateGeometry()}getConfig(){return this.options}generateGeometry(){this.geometry&&this.geometry.dispose(),this.arc.generate_geometry();const t=this.arc.get_geometry_serialized(),e=JSON.parse(t),i=new an;i.setAttribute("position",new Zi(e,3)),this.geometry=i,this.material=new mi({color:jt(this,nu,"f")})}getBrep(){const t=this.arc.get_brep_serialized();if(!t)throw new Error("Brep data is not available for Arc");return JSON.parse(t)}discardGeometry(){this.geometry.dispose()}}nu=new WeakMap;class wx extends Xh{set color(t){this.options.color=t,this.material instanceof mi&&this.material.color.set(t)}constructor(t){var e;super(),this.options={center:new me(0,0,0),width:1,breadth:1,color:65280},this.ogid=(e=t==null?void 0:t.ogid)!==null&&e!==void 0?e:Wr(),this.polyLineRectangle=new MM(this.ogid),this.options=Object.assign(Object.assign({},this.options),t),this.options.ogid=this.ogid,this.setConfig(this.options)}validateOptions(){if(!this.options)throw new Error("Options are not defined for Rectangle")}setConfig(t){this.validateOptions();const{width:e,breadth:i,center:n}=t;this.polyLineRectangle.set_config(n.clone(),e,i),this.generateGeometry()}getConfig(){return console.log("Getting rectangle config",this.options),this.options}generateGeometry(){this.discardGeometry(),this.polyLineRectangle.generate_geometry();const t=this.polyLineRectangle.get_geometry_serialized(),e=JSON.parse(t),i=new an;i.setAttribute("position",new Zi(e,3)),this.geometry=i,this.material=new mi({color:this.options.color})}getBrep(){const t=this.polyLineRectangle.get_brep_serialized();if(!t)throw new Error("Brep data is not available for Rectangle");return JSON.parse(t)}discardGeometry(){this.geometry.dispose()}}var be,su;class td extends gm{set color(t){sn(this,su,t),this.material instanceof fu&&this.material.color.set(t)}constructor(t){super(),this.options={vertices:[]},be.set(this,null),su.set(this,65280),this.transformationMatrix=new qi,this._geometryCenterOffset=new J,this.ogid=Wr(),t&&(this.options=t),this.polygon=new bM(this.ogid),this.setConfig(),this.generateGeometry()}validateOptions(){if(!this.options)throw new Error("Options are not defined for Polygon")}setConfig(){this.validateOptions();const{vertices:t}=this.options;this.polygon.set_config(t)}generateGeometry(){this.polygon.generate_geometry();const t=this.polygon.get_geometry_serialized(),e=JSON.parse(t);if(e.length===0){console.warn("Geometry has no position attribute, skipping position adjustment.");return}if(e.length%3!==0)return;const i=new an;i.setAttribute("position",new Zi(e,3));const n=new fu({color:jt(this,su,"f"),transparent:!0,opacity:.6,side:TM});i.computeVertexNormals(),i.computeBoundingBox(),this.geometry=i,this.material=n}addVertices(t){this.polygon&&(this.disposeGeometryMaterial(),this.polygon.add_vertices(t),this.generateGeometry())}saveTransformationToBREP(){this.polygon}addHole(t){this.polygon&&(this.polygon.add_holes(t),this.disposeGeometryMaterial(),this.generateGeometry(),this.outline&&(this.outline=!0))}getBrepData(){return this.polygon?this.polygon.get_brep_serialized():null}set outlineColor(t){jt(this,be,"f")&&jt(this,be,"f").material instanceof mi&&jt(this,be,"f").material.color.set(t)}get outlineColor(){return jt(this,be,"f")&&jt(this,be,"f").material instanceof mi?jt(this,be,"f").material.color.getHex():0}set outline(t){if(jt(this,be,"f")&&(this.remove(jt(this,be,"f")),jt(this,be,"f").geometry.dispose(),sn(this,be,null)),t&&!jt(this,be,"f")){const e=this.polygon.get_outline_geometry_serialized(),i=JSON.parse(e),n=new an;n.setAttribute("position",new Zi(i,3));const s=new mi({color:0});sn(this,be,new _m(n,s)),this.add(jt(this,be,"f"))}!t&&jt(this,be,"f")&&(this.remove(jt(this,be,"f")),jt(this,be,"f").geometry.dispose(),sn(this,be,null))}get outline(){return!!jt(this,be,"f")}disposeGeometryMaterial(){this.geometry&&this.geometry.dispose(),this.material instanceof _h&&this.material.dispose(),jt(this,be,"f")&&(jt(this,be,"f").geometry.dispose(),jt(this,be,"f").material instanceof _h&&jt(this,be,"f").material.dispose())}dispose(){}}be=new WeakMap,su=new WeakMap;var Wi;class dw extends gm{set radius(t){this.options.radius=t,this.setConfig(this.options)}set color(t){this.options.color=t,this.material instanceof mi&&this.material.color.set(t)}constructor(t){var e;super(),this.options={center:new me(0,0,0),radius:1,height:1,segments:32,angle:2*Math.PI,color:65280},Wi.set(this,null),this.ogid=(e=t==null?void 0:t.ogid)!==null&&e!==void 0?e:Wr(),this.cylinder=new xM(this.ogid),this.options=Object.assign(Object.assign({},this.options),t),this.options.ogid=this.ogid,this.setConfig(this.options)}validateOptions(){if(!this.options)throw new Error("Options are not defined for Cylinder")}setConfig(t){this.validateOptions();const{radius:e,height:i,segments:n,angle:s,center:o}=t;this.cylinder.set_config(o==null?void 0:o.clone(),e,i,s,n),this.generateGeometry()}cleanGeometry(){this.geometry.dispose(),Array.isArray(this.material)?this.material.forEach(t=>t.dispose()):this.material.dispose()}generateGeometry(){this.cleanGeometry();const t=this.cylinder.get_geometry_serialized(),e=JSON.parse(t),i=new an;i.setAttribute("position",new Zi(e,3));const n=new fu({color:this.options.color,transparent:!0,opacity:.6});i.computeVertexNormals(),i.computeBoundingBox(),this.geometry=i,this.material=n,jt(this,Wi,"f")&&(this.outline=!0)}getBrep(){if(!this.cylinder)return null;const t=this.cylinder.get_brep_serialized();if(!t)throw new Error("Brep data is not available for this cylinder.");return JSON.parse(t)}set outline(t){if(jt(this,Wi,"f")&&(this.remove(jt(this,Wi,"f")),jt(this,Wi,"f").geometry.dispose(),sn(this,Wi,null)),t){const e=this.cylinder.get_outline_geometry_serialized(),i=JSON.parse(e),n=new an;n.setAttribute("position",new Zi(i,3));const s=new mi({color:0});sn(this,Wi,new _m(n,s)),this.add(jt(this,Wi,"f"))}!t&&jt(this,Wi,"f")&&(this.remove(jt(this,Wi,"f")),jt(this,Wi,"f").geometry.dispose(),sn(this,Wi,null))}discardGeometry(){this.geometry.dispose()}}Wi=new WeakMap;var Ti;class fw extends gm{set width(t){this.options.width=t,this.setConfig(this.options)}set color(t){this.options.color=t,this.material instanceof mi&&this.material.color.set(t)}constructor(t){var e;super(),this.options={center:new me(0,0,0),width:1,height:1,depth:1,color:65280},Ti.set(this,null),this._geometryCenterOffset=new J,this.ogid=(e=t==null?void 0:t.ogid)!==null&&e!==void 0?e:Wr(),this.cuboid=new yM(this.ogid),this.options=Object.assign(Object.assign({},this.options),t),this.options.ogid=this.ogid,this.setConfig(this.options)}validateOptions(){if(!this.options)throw new Error("Options are not defined for Cylinder")}setConfig(t){this.validateOptions();const{width:e,height:i,depth:n,center:s}=t;this.cuboid.set_config(s.clone(),e,i,n),this.generateGeometry()}cleanGeometry(){this.geometry.dispose(),Array.isArray(this.material)?this.material.forEach(t=>t.dispose()):this.material.dispose()}generateGeometry(){this.cleanGeometry();const t=this.cuboid.get_geometry_serialized(),e=JSON.parse(t),i=new an;i.setAttribute("position",new Zi(e,3));const n=new fu({color:this.options.color,transparent:!0,opacity:.6});i.computeVertexNormals(),i.computeBoundingBox(),this.geometry=i,this.material=n,jt(this,Ti,"f")&&(this.outline=!0)}getBrepData(){if(!this.cuboid)return null;const t=this.cuboid.get_brep_serialized();if(!t)throw new Error("Brep data is not available for this cuboid.");return JSON.parse(t)}set outline(t){if(jt(this,Ti,"f")&&(this.remove(jt(this,Ti,"f")),jt(this,Ti,"f").geometry.dispose(),sn(this,Ti,null)),t){const e=this.cuboid.get_outline_geometry_serialized(),i=JSON.parse(e),n=new an;n.setAttribute("position",new Zi(i,3));const s=new mi({color:0});sn(this,Ti,new _m(n,s)),this.add(jt(this,Ti,"f"))}!t&&jt(this,Ti,"f")&&(this.remove(jt(this,Ti,"f")),jt(this,Ti,"f").geometry.dispose(),sn(this,Ti,null))}get outlineMesh(){return jt(this,Ti,"f")}discardGeometry(){this.geometry.dispose()}}Ti=new WeakMap;class Ws{get enableDebug(){return this._enableDebug}set enableDebug(t){this._enableDebug=t,this._enableDebug&&console.log("OpenGeometry Debug Mode Enabled")}constructor(){this._enableDebug=!1}static create(t){return Pg(this,void 0,void 0,function*(){if(!Ws.instance){const e=new Ws;yield e.setup(t.wasmURL),Ws.instance=e}return Ws.instance})}setup(t){return Pg(this,void 0,void 0,function*(){yield cx(t)})}}Ws.version=sw;Ws.instance=null;/**
 * @license
 * Copyright 2010-2024 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const ed="168",pw={LEFT:0,MIDDLE:1,RIGHT:2,ROTATE:0,DOLLY:1,PAN:2},mw={ROTATE:0,PAN:1,DOLLY_PAN:2,DOLLY_ROTATE:3},Sx=0,kp=1,Ax=2,gw=3,_w=0,ym=1,Ex=2,Fn=3,ms=0,wi=1,fi=2,ds=0,Ir=1,Vp=2,Hp=3,Gp=4,Tx=5,Gs=100,Cx=101,Rx=102,Px=103,Ix=104,Lx=200,Dx=201,Ox=202,Fx=203,pu=204,mu=205,zx=206,Ux=207,Nx=208,Bx=209,kx=210,Vx=211,Hx=212,Gx=213,Wx=214,$x=0,Xx=1,qx=2,yh=3,Yx=4,Zx=5,Jx=6,Kx=7,qh=0,jx=1,Qx=2,fs=0,tv=1,ev=2,iv=3,nv=4,sv=5,rv=6,ov=7,Wp="attached",av="detached",id=300,gs=301,Ys=302,xh=303,vh=304,pa=306,bh=1e3,rn=1001,Mh=1002,Ze=1003,xm=1004,yw=1004,Zo=1005,xw=1005,ke=1006,oh=1007,vw=1007,Un=1008,bw=1008,Vn=1009,vm=1010,bm=1011,ha=1012,nd=1013,_s=1014,Pi=1015,ma=1016,sd=1017,rd=1018,kr=1020,Mm=35902,wm=1021,Sm=1022,Mi=1023,Am=1024,Em=1025,Lr=1026,Vr=1027,od=1028,Yh=1029,Tm=1030,ad=1031,Mw=1032,hd=1033,ah=33776,hh=33777,lh=33778,ch=33779,gu=35840,_u=35841,yu=35842,xu=35843,vu=36196,bu=37492,Mu=37496,wu=37808,Su=37809,Au=37810,Eu=37811,Tu=37812,Cu=37813,Ru=37814,Pu=37815,Iu=37816,Lu=37817,Du=37818,Ou=37819,Fu=37820,zu=37821,uh=36492,Uu=36494,Nu=36495,Cm=36283,Bu=36284,ku=36285,Vu=36286,hv=2200,lv=2201,cv=2202,wh=2300,Hu=2301,ru=2302,Er=2400,Tr=2401,Sh=2402,ld=2500,Rm=2501,ww=0,Sw=1,Aw=2,uv=3200,dv=3201,Ew=3202,Tw=3203,Zs=0,fv=1,ls="",nn="srgb",xs="srgb-linear",cd="display-p3",Zh="display-p3-linear",Ah="linear",ve="srgb",Eh="rec709",Th="p3",Cw=0,Mr=7680,Rw=7681,Pw=7682,Iw=7683,Lw=34055,Dw=34056,Ow=5386,Fw=512,zw=513,Uw=514,Nw=515,Bw=516,kw=517,Vw=518,$p=519,pv=512,mv=513,gv=514,Pm=515,_v=516,yv=517,xv=518,vv=519,Ch=35044,Hw=35048,Gw=35040,Ww=35045,$w=35049,Xw=35041,qw=35046,Yw=35050,Zw=35042,Jw="100",Xp="300 es",Nn=2e3,Rh=2001;let Gn=class{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){if(this._listeners===void 0)return!1;const i=this._listeners;return i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){if(this._listeners===void 0)return;const n=this._listeners[t];if(n!==void 0){const s=n.indexOf(e);s!==-1&&n.splice(s,1)}}dispatchEvent(t){if(this._listeners===void 0)return;const i=this._listeners[t.type];if(i!==void 0){t.target=this;const n=i.slice(0);for(let s=0,o=n.length;s<o;s++)n[s].call(this,t);t.target=null}}};const ai=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];let v_=1234567;const Dr=Math.PI/180,la=180/Math.PI;function Yi(){const r=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(ai[r&255]+ai[r>>8&255]+ai[r>>16&255]+ai[r>>24&255]+"-"+ai[t&255]+ai[t>>8&255]+"-"+ai[t>>16&15|64]+ai[t>>24&255]+"-"+ai[e&63|128]+ai[e>>8&255]+"-"+ai[e>>16&255]+ai[e>>24&255]+ai[i&255]+ai[i>>8&255]+ai[i>>16&255]+ai[i>>24&255]).toLowerCase()}function Ie(r,t,e){return Math.max(t,Math.min(e,r))}function Im(r,t){return(r%t+t)%t}function Kw(r,t,e,i,n){return i+(r-t)*(n-i)/(e-t)}function jw(r,t,e){return r!==t?(e-r)/(t-r):0}function dh(r,t,e){return(1-e)*r+e*t}function Qw(r,t,e,i){return dh(r,t,1-Math.exp(-e*i))}function t1(r,t=1){return t-Math.abs(Im(r,t*2)-t)}function e1(r,t,e){return r<=t?0:r>=e?1:(r=(r-t)/(e-t),r*r*(3-2*r))}function i1(r,t,e){return r<=t?0:r>=e?1:(r=(r-t)/(e-t),r*r*r*(r*(r*6-15)+10))}function n1(r,t){return r+Math.floor(Math.random()*(t-r+1))}function s1(r,t){return r+Math.random()*(t-r)}function r1(r){return r*(.5-Math.random())}function o1(r){r!==void 0&&(v_=r);let t=v_+=1831565813;return t=Math.imul(t^t>>>15,t|1),t^=t+Math.imul(t^t>>>7,t|61),((t^t>>>14)>>>0)/4294967296}function a1(r){return r*Dr}function h1(r){return r*la}function l1(r){return(r&r-1)===0&&r!==0}function c1(r){return Math.pow(2,Math.ceil(Math.log(r)/Math.LN2))}function u1(r){return Math.pow(2,Math.floor(Math.log(r)/Math.LN2))}function d1(r,t,e,i,n){const s=Math.cos,o=Math.sin,a=s(e/2),h=o(e/2),l=s((t+i)/2),c=o((t+i)/2),u=s((t-i)/2),d=o((t-i)/2),f=s((i-t)/2),p=o((i-t)/2);switch(n){case"XYX":r.set(a*c,h*u,h*d,a*l);break;case"YZY":r.set(h*d,a*c,h*u,a*l);break;case"ZXZ":r.set(h*u,h*d,a*c,a*l);break;case"XZX":r.set(a*c,h*p,h*f,a*l);break;case"YXY":r.set(h*f,a*c,h*p,a*l);break;case"ZYZ":r.set(h*p,h*f,a*c,a*l);break;default:console.warn("THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: "+n)}}function bi(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function $t(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}const bv={DEG2RAD:Dr,RAD2DEG:la,generateUUID:Yi,clamp:Ie,euclideanModulo:Im,mapLinear:Kw,inverseLerp:jw,lerp:dh,damp:Qw,pingpong:t1,smoothstep:e1,smootherstep:i1,randInt:n1,randFloat:s1,randFloatSpread:r1,seededRandom:o1,degToRad:a1,radToDeg:h1,isPowerOfTwo:l1,ceilPowerOfTwo:c1,floorPowerOfTwo:u1,setQuaternionFromProperEuler:d1,normalize:$t,denormalize:bi};let Q=class Mv{constructor(t=0,e=0){Mv.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6],this.y=n[1]*e+n[4]*i+n[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(Ie(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),n=Math.sin(e),s=this.x-t.x,o=this.y-t.y;return this.x=s*i-o*n+t.x,this.y=s*n+o*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}},Zt=class wv{constructor(t,e,i,n,s,o,a,h,l){wv.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,i,n,s,o,a,h,l)}set(t,e,i,n,s,o,a,h,l){const c=this.elements;return c[0]=t,c[1]=n,c[2]=a,c[3]=e,c[4]=s,c[5]=h,c[6]=i,c[7]=o,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,s=this.elements,o=i[0],a=i[3],h=i[6],l=i[1],c=i[4],u=i[7],d=i[2],f=i[5],p=i[8],_=n[0],g=n[3],m=n[6],x=n[1],y=n[4],v=n[7],E=n[2],b=n[5],w=n[8];return s[0]=o*_+a*x+h*E,s[3]=o*g+a*y+h*b,s[6]=o*m+a*v+h*w,s[1]=l*_+c*x+u*E,s[4]=l*g+c*y+u*b,s[7]=l*m+c*v+u*w,s[2]=d*_+f*x+p*E,s[5]=d*g+f*y+p*b,s[8]=d*m+f*v+p*w,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],n=t[2],s=t[3],o=t[4],a=t[5],h=t[6],l=t[7],c=t[8];return e*o*c-e*a*l-i*s*c+i*a*h+n*s*l-n*o*h}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],s=t[3],o=t[4],a=t[5],h=t[6],l=t[7],c=t[8],u=c*o-a*l,d=a*h-c*s,f=l*s-o*h,p=e*u+i*d+n*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/p;return t[0]=u*_,t[1]=(n*l-c*i)*_,t[2]=(a*i-n*o)*_,t[3]=d*_,t[4]=(c*e-n*h)*_,t[5]=(n*s-a*e)*_,t[6]=f*_,t[7]=(i*h-l*e)*_,t[8]=(o*e-i*s)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,n,s,o,a){const h=Math.cos(s),l=Math.sin(s);return this.set(i*h,i*l,-i*(h*o+l*a)+o+t,-n*l,n*h,-n*(-l*o+h*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(ff.makeScale(t,e)),this}rotate(t){return this.premultiply(ff.makeRotation(-t)),this}translate(t,e){return this.premultiply(ff.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let n=0;n<9;n++)if(e[n]!==i[n])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}};const ff=new Zt;function Sv(r){for(let t=r.length-1;t>=0;--t)if(r[t]>=65535)return!0;return!1}const f1={Int8Array,Uint8Array,Uint8ClampedArray,Int16Array,Uint16Array,Int32Array,Uint32Array,Float32Array,Float64Array};function Jo(r,t){return new f1[r](t)}function Ph(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}function Av(){const r=Ph("canvas");return r.style.display="block",r}const b_={};function ia(r){r in b_||(b_[r]=!0,console.warn(r))}function p1(r,t,e){return new Promise(function(i,n){function s(){switch(r.clientWaitSync(t,r.SYNC_FLUSH_COMMANDS_BIT,0)){case r.WAIT_FAILED:n();break;case r.TIMEOUT_EXPIRED:setTimeout(s,e);break;default:i()}}setTimeout(s,e)})}const M_=new Zt().set(.8224621,.177538,0,.0331941,.9668058,0,.0170827,.0723974,.9105199),w_=new Zt().set(1.2249401,-.2249404,0,-.0420569,1.0420571,0,-.0196376,-.0786361,1.0982735),Ra={[xs]:{transfer:Ah,primaries:Eh,luminanceCoefficients:[.2126,.7152,.0722],toReference:r=>r,fromReference:r=>r},[nn]:{transfer:ve,primaries:Eh,luminanceCoefficients:[.2126,.7152,.0722],toReference:r=>r.convertSRGBToLinear(),fromReference:r=>r.convertLinearToSRGB()},[Zh]:{transfer:Ah,primaries:Th,luminanceCoefficients:[.2289,.6917,.0793],toReference:r=>r.applyMatrix3(w_),fromReference:r=>r.applyMatrix3(M_)},[cd]:{transfer:ve,primaries:Th,luminanceCoefficients:[.2289,.6917,.0793],toReference:r=>r.convertSRGBToLinear().applyMatrix3(w_),fromReference:r=>r.applyMatrix3(M_).convertLinearToSRGB()}},m1=new Set([xs,Zh]),ae={enabled:!0,_workingColorSpace:xs,get workingColorSpace(){return this._workingColorSpace},set workingColorSpace(r){if(!m1.has(r))throw new Error(`Unsupported working color space, "${r}".`);this._workingColorSpace=r},convert:function(r,t,e){if(this.enabled===!1||t===e||!t||!e)return r;const i=Ra[t].toReference,n=Ra[e].fromReference;return n(i(r))},fromWorkingColorSpace:function(r,t){return this.convert(r,this._workingColorSpace,t)},toWorkingColorSpace:function(r,t){return this.convert(r,t,this._workingColorSpace)},getPrimaries:function(r){return Ra[r].primaries},getTransfer:function(r){return r===ls?Ah:Ra[r].transfer},getLuminanceCoefficients:function(r,t=this._workingColorSpace){return r.fromArray(Ra[t].luminanceCoefficients)}};function na(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function pf(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let lo,Ev=class{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{lo===void 0&&(lo=Ph("canvas")),lo.width=t.width,lo.height=t.height;const i=lo.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=lo}return e.width>2048||e.height>2048?(console.warn("THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons",t),e.toDataURL("image/jpeg",.6)):e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=Ph("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const n=i.getImageData(0,0,t.width,t.height),s=n.data;for(let o=0;o<s.length;o++)s[o]=na(s[o]/255)*255;return i.putImageData(n,0,0),e}else if(t.data){const e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(na(e[i]/255)*255):e[i]=na(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}},g1=0,Cr=class{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:g1++}),this.uuid=Yi(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let s;if(Array.isArray(n)){s=[];for(let o=0,a=n.length;o<a;o++)n[o].isDataTexture?s.push(mf(n[o].image)):s.push(mf(n[o]))}else s=mf(n);i.url=s}return e||(t.images[this.uuid]=i),i}};function mf(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?Ev.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let _1=0,Ke=class ou extends Gn{constructor(t=ou.DEFAULT_IMAGE,e=ou.DEFAULT_MAPPING,i=rn,n=rn,s=ke,o=Un,a=Mi,h=Vn,l=ou.DEFAULT_ANISOTROPY,c=ls){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:_1++}),this.uuid=Yi(),this.name="",this.source=new Cr(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=s,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=h,this.offset=new Q(0,0),this.repeat=new Q(1,1),this.center=new Q(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Zt,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.version=0,this.onUpdate=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==id)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case bh:t.x=t.x-Math.floor(t.x);break;case rn:t.x=t.x<0?0:1;break;case Mh:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case bh:t.y=t.y-Math.floor(t.y);break;case rn:t.y=t.y<0?0:1;break;case Mh:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}};Ke.DEFAULT_IMAGE=null;Ke.DEFAULT_MAPPING=id;Ke.DEFAULT_ANISOTROPY=1;let se=class Tv{constructor(t=0,e=0,i=0,n=1){Tv.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=n}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,s=this.w,o=t.elements;return this.x=o[0]*e+o[4]*i+o[8]*n+o[12]*s,this.y=o[1]*e+o[5]*i+o[9]*n+o[13]*s,this.z=o[2]*e+o[6]*i+o[10]*n+o[14]*s,this.w=o[3]*e+o[7]*i+o[11]*n+o[15]*s,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,n,s;const h=t.elements,l=h[0],c=h[4],u=h[8],d=h[1],f=h[5],p=h[9],_=h[2],g=h[6],m=h[10];if(Math.abs(c-d)<.01&&Math.abs(u-_)<.01&&Math.abs(p-g)<.01){if(Math.abs(c+d)<.1&&Math.abs(u+_)<.1&&Math.abs(p+g)<.1&&Math.abs(l+f+m-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const y=(l+1)/2,v=(f+1)/2,E=(m+1)/2,b=(c+d)/4,w=(u+_)/4,T=(p+g)/4;return y>v&&y>E?y<.01?(i=0,n=.707106781,s=.707106781):(i=Math.sqrt(y),n=b/i,s=w/i):v>E?v<.01?(i=.707106781,n=0,s=.707106781):(n=Math.sqrt(v),i=b/n,s=T/n):E<.01?(i=.707106781,n=.707106781,s=0):(s=Math.sqrt(E),i=w/s,n=T/s),this.set(i,n,s,e),this}let x=Math.sqrt((g-p)*(g-p)+(u-_)*(u-_)+(d-c)*(d-c));return Math.abs(x)<.001&&(x=1),this.x=(g-p)/x,this.y=(u-_)/x,this.z=(d-c)/x,this.w=Math.acos((l+f+m-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this.w=Math.max(t.w,Math.min(e.w,this.w)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this.w=Math.max(t,Math.min(e,this.w)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}};class Cv extends Gn{constructor(t=1,e=1,i={}){super(),this.isRenderTarget=!0,this.width=t,this.height=e,this.depth=1,this.scissor=new se(0,0,t,e),this.scissorTest=!1,this.viewport=new se(0,0,t,e);const n={width:t,height:e,depth:1};i=Object.assign({generateMipmaps:!1,internalFormat:null,minFilter:ke,depthBuffer:!0,stencilBuffer:!1,resolveDepthBuffer:!0,resolveStencilBuffer:!0,depthTexture:null,samples:0,count:1},i);const s=new Ke(n,i.mapping,i.wrapS,i.wrapT,i.magFilter,i.minFilter,i.format,i.type,i.anisotropy,i.colorSpace);s.flipY=!1,s.generateMipmaps=i.generateMipmaps,s.internalFormat=i.internalFormat,this.textures=[];const o=i.count;for(let a=0;a<o;a++)this.textures[a]=s.clone(),this.textures[a].isRenderTargetTexture=!0;this.depthBuffer=i.depthBuffer,this.stencilBuffer=i.stencilBuffer,this.resolveDepthBuffer=i.resolveDepthBuffer,this.resolveStencilBuffer=i.resolveStencilBuffer,this.depthTexture=i.depthTexture,this.samples=i.samples}get texture(){return this.textures[0]}set texture(t){this.textures[0]=t}setSize(t,e,i=1){if(this.width!==t||this.height!==e||this.depth!==i){this.width=t,this.height=e,this.depth=i;for(let n=0,s=this.textures.length;n<s;n++)this.textures[n].image.width=t,this.textures[n].image.height=e,this.textures[n].image.depth=i;this.dispose()}this.viewport.set(0,0,t,e),this.scissor.set(0,0,t,e)}clone(){return new this.constructor().copy(this)}copy(t){this.width=t.width,this.height=t.height,this.depth=t.depth,this.scissor.copy(t.scissor),this.scissorTest=t.scissorTest,this.viewport.copy(t.viewport),this.textures.length=0;for(let i=0,n=t.textures.length;i<n;i++)this.textures[i]=t.textures[i].clone(),this.textures[i].isRenderTargetTexture=!0;const e=Object.assign({},t.texture.image);return this.texture.source=new Cr(e),this.depthBuffer=t.depthBuffer,this.stencilBuffer=t.stencilBuffer,this.resolveDepthBuffer=t.resolveDepthBuffer,this.resolveStencilBuffer=t.resolveStencilBuffer,t.depthTexture!==null&&(this.depthTexture=t.depthTexture.clone()),this.samples=t.samples,this}dispose(){this.dispatchEvent({type:"dispose"})}}class En extends Cv{constructor(t=1,e=1,i={}){super(t,e,i),this.isWebGLRenderTarget=!0}}class ud extends Ke{constructor(t=null,e=1,i=1,n=1){super(null),this.isDataArrayTexture=!0,this.image={data:t,width:e,height:i,depth:n},this.magFilter=Ze,this.minFilter=Ze,this.wrapR=rn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class y1 extends En{constructor(t=1,e=1,i=1,n={}){super(t,e,n),this.isWebGLArrayRenderTarget=!0,this.depth=i,this.texture=new ud(null,t,e,i),this.texture.isRenderTargetTexture=!0}}class Lm extends Ke{constructor(t=null,e=1,i=1,n=1){super(null),this.isData3DTexture=!0,this.image={data:t,width:e,height:i,depth:n},this.magFilter=Ze,this.minFilter=Ze,this.wrapR=rn,this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}class x1 extends En{constructor(t=1,e=1,i=1,n={}){super(t,e,n),this.isWebGL3DRenderTarget=!0,this.depth=i,this.texture=new Lm(null,t,e,i),this.texture.isRenderTargetTexture=!0}}let Ii=class{constructor(t=0,e=0,i=0,n=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=n}static slerpFlat(t,e,i,n,s,o,a){let h=i[n+0],l=i[n+1],c=i[n+2],u=i[n+3];const d=s[o+0],f=s[o+1],p=s[o+2],_=s[o+3];if(a===0){t[e+0]=h,t[e+1]=l,t[e+2]=c,t[e+3]=u;return}if(a===1){t[e+0]=d,t[e+1]=f,t[e+2]=p,t[e+3]=_;return}if(u!==_||h!==d||l!==f||c!==p){let g=1-a;const m=h*d+l*f+c*p+u*_,x=m>=0?1:-1,y=1-m*m;if(y>Number.EPSILON){const E=Math.sqrt(y),b=Math.atan2(E,m*x);g=Math.sin(g*b)/E,a=Math.sin(a*b)/E}const v=a*x;if(h=h*g+d*v,l=l*g+f*v,c=c*g+p*v,u=u*g+_*v,g===1-a){const E=1/Math.sqrt(h*h+l*l+c*c+u*u);h*=E,l*=E,c*=E,u*=E}}t[e]=h,t[e+1]=l,t[e+2]=c,t[e+3]=u}static multiplyQuaternionsFlat(t,e,i,n,s,o){const a=i[n],h=i[n+1],l=i[n+2],c=i[n+3],u=s[o],d=s[o+1],f=s[o+2],p=s[o+3];return t[e]=a*p+c*u+h*f-l*d,t[e+1]=h*p+c*d+l*u-a*f,t[e+2]=l*p+c*f+a*d-h*u,t[e+3]=c*p-a*u-h*d-l*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,n=t._y,s=t._z,o=t._order,a=Math.cos,h=Math.sin,l=a(i/2),c=a(n/2),u=a(s/2),d=h(i/2),f=h(n/2),p=h(s/2);switch(o){case"XYZ":this._x=d*c*u+l*f*p,this._y=l*f*u-d*c*p,this._z=l*c*p+d*f*u,this._w=l*c*u-d*f*p;break;case"YXZ":this._x=d*c*u+l*f*p,this._y=l*f*u-d*c*p,this._z=l*c*p-d*f*u,this._w=l*c*u+d*f*p;break;case"ZXY":this._x=d*c*u-l*f*p,this._y=l*f*u+d*c*p,this._z=l*c*p+d*f*u,this._w=l*c*u-d*f*p;break;case"ZYX":this._x=d*c*u-l*f*p,this._y=l*f*u+d*c*p,this._z=l*c*p-d*f*u,this._w=l*c*u+d*f*p;break;case"YZX":this._x=d*c*u+l*f*p,this._y=l*f*u+d*c*p,this._z=l*c*p-d*f*u,this._w=l*c*u-d*f*p;break;case"XZY":this._x=d*c*u-l*f*p,this._y=l*f*u-d*c*p,this._z=l*c*p+d*f*u,this._w=l*c*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],n=e[4],s=e[8],o=e[1],a=e[5],h=e[9],l=e[2],c=e[6],u=e[10],d=i+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(c-h)*f,this._y=(s-l)*f,this._z=(o-n)*f}else if(i>a&&i>u){const f=2*Math.sqrt(1+i-a-u);this._w=(c-h)/f,this._x=.25*f,this._y=(n+o)/f,this._z=(s+l)/f}else if(a>u){const f=2*Math.sqrt(1+a-i-u);this._w=(s-l)/f,this._x=(n+o)/f,this._y=.25*f,this._z=(h+c)/f}else{const f=2*Math.sqrt(1+u-i-a);this._w=(o-n)/f,this._x=(s+l)/f,this._y=(h+c)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(Ie(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(i===0)return this;const n=Math.min(1,e/i);return this.slerp(t,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,n=t._y,s=t._z,o=t._w,a=e._x,h=e._y,l=e._z,c=e._w;return this._x=i*c+o*a+n*l-s*h,this._y=n*c+o*h+s*a-i*l,this._z=s*c+o*l+i*h-n*a,this._w=o*c-i*a-n*h-s*l,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const i=this._x,n=this._y,s=this._z,o=this._w;let a=o*t._w+i*t._x+n*t._y+s*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=i,this._y=n,this._z=s,this;const h=1-a*a;if(h<=Number.EPSILON){const f=1-e;return this._w=f*o+e*this._w,this._x=f*i+e*this._x,this._y=f*n+e*this._y,this._z=f*s+e*this._z,this.normalize(),this}const l=Math.sqrt(h),c=Math.atan2(l,a),u=Math.sin((1-e)*c)/l,d=Math.sin(e*c)/l;return this._w=o*u+this._w*d,this._x=i*u+this._x*d,this._y=n*u+this._y*d,this._z=s*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(n*Math.sin(t),n*Math.cos(t),s*Math.sin(e),s*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}},R=class Rv{constructor(t=0,e=0,i=0){Rv.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(S_.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(S_.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,n=this.z,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6]*n,this.y=s[1]*e+s[4]*i+s[7]*n,this.z=s[2]*e+s[5]*i+s[8]*n,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,s=t.elements,o=1/(s[3]*e+s[7]*i+s[11]*n+s[15]);return this.x=(s[0]*e+s[4]*i+s[8]*n+s[12])*o,this.y=(s[1]*e+s[5]*i+s[9]*n+s[13])*o,this.z=(s[2]*e+s[6]*i+s[10]*n+s[14])*o,this}applyQuaternion(t){const e=this.x,i=this.y,n=this.z,s=t.x,o=t.y,a=t.z,h=t.w,l=2*(o*n-a*i),c=2*(a*e-s*n),u=2*(s*i-o*e);return this.x=e+h*l+o*u-a*c,this.y=i+h*c+a*l-s*u,this.z=n+h*u+s*c-o*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,n=this.z,s=t.elements;return this.x=s[0]*e+s[4]*i+s[8]*n,this.y=s[1]*e+s[5]*i+s[9]*n,this.z=s[2]*e+s[6]*i+s[10]*n,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=Math.max(t.x,Math.min(e.x,this.x)),this.y=Math.max(t.y,Math.min(e.y,this.y)),this.z=Math.max(t.z,Math.min(e.z,this.z)),this}clampScalar(t,e){return this.x=Math.max(t,Math.min(e,this.x)),this.y=Math.max(t,Math.min(e,this.y)),this.z=Math.max(t,Math.min(e,this.z)),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(Math.max(t,Math.min(e,i)))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,n=t.y,s=t.z,o=e.x,a=e.y,h=e.z;return this.x=n*h-s*a,this.y=s*o-i*h,this.z=i*a-n*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return gf.copy(this).projectOnVector(t),this.sub(gf)}reflect(t){return this.sub(gf.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(Ie(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const n=Math.sin(e)*t;return this.x=n*Math.sin(i),this.y=Math.cos(e)*t,this.z=n*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,i=Math.sqrt(1-e*e);return this.x=i*Math.cos(t),this.y=e,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}};const gf=new R,S_=new Ii;let Le=class{constructor(t=new R(1/0,1/0,1/0),e=new R(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(mn.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(mn.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=mn.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0){const s=i.getAttribute("position");if(e===!0&&s!==void 0&&t.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)t.isMesh===!0?t.getVertexPosition(o,mn):mn.fromBufferAttribute(s,o),mn.applyMatrix4(t.matrixWorld),this.expandByPoint(mn);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),Pl.copy(t.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),Pl.copy(i.boundingBox)),Pl.applyMatrix4(t.matrixWorld),this.union(Pl)}const n=t.children;for(let s=0,o=n.length;s<o;s++)this.expandByObject(n[s],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,mn),mn.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Pa),Il.subVectors(this.max,Pa),co.subVectors(t.a,Pa),uo.subVectors(t.b,Pa),fo.subVectors(t.c,Pa),Es.subVectors(uo,co),Ts.subVectors(fo,uo),sr.subVectors(co,fo);let e=[0,-Es.z,Es.y,0,-Ts.z,Ts.y,0,-sr.z,sr.y,Es.z,0,-Es.x,Ts.z,0,-Ts.x,sr.z,0,-sr.x,-Es.y,Es.x,0,-Ts.y,Ts.x,0,-sr.y,sr.x,0];return!_f(e,co,uo,fo,Il)||(e=[1,0,0,0,1,0,0,0,1],!_f(e,co,uo,fo,Il))?!1:(Ll.crossVectors(Es,Ts),e=[Ll.x,Ll.y,Ll.z],_f(e,co,uo,fo,Il))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,mn).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(mn).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(Kn[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),Kn[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),Kn[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),Kn[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),Kn[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),Kn[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),Kn[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),Kn[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(Kn),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}};const Kn=[new R,new R,new R,new R,new R,new R,new R,new R],mn=new R,Pl=new Le,co=new R,uo=new R,fo=new R,Es=new R,Ts=new R,sr=new R,Pa=new R,Il=new R,Ll=new R,rr=new R;function _f(r,t,e,i,n){for(let s=0,o=r.length-3;s<=o;s+=3){rr.fromArray(r,s);const a=n.x*Math.abs(rr.x)+n.y*Math.abs(rr.y)+n.z*Math.abs(rr.z),h=t.dot(rr),l=e.dot(rr),c=i.dot(rr);if(Math.max(-Math.max(h,l,c),Math.min(h,l,c))>a)return!1}return!0}const v1=new Le,Ia=new R,yf=new R;let He=class{constructor(t=new R,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;e!==void 0?i.copy(e):v1.setFromPoints(t).getCenter(i);let n=0;for(let s=0,o=t.length;s<o;s++)n=Math.max(n,i.distanceToSquared(t[s]));return this.radius=Math.sqrt(n),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Ia.subVectors(t,this.center);const e=Ia.lengthSq();if(e>this.radius*this.radius){const i=Math.sqrt(e),n=(i-this.radius)*.5;this.center.addScaledVector(Ia,n/i),this.radius+=n}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(yf.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Ia.copy(t.center).add(yf)),this.expandByPoint(Ia.copy(t.center).sub(yf))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}};const jn=new R,xf=new R,Dl=new R,Cs=new R,vf=new R,Ol=new R,bf=new R;let ga=class{constructor(t=new R,e=new R(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,jn)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=jn.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(jn.copy(this.origin).addScaledVector(this.direction,e),jn.distanceToSquared(t))}distanceSqToSegment(t,e,i,n){xf.copy(t).add(e).multiplyScalar(.5),Dl.copy(e).sub(t).normalize(),Cs.copy(this.origin).sub(xf);const s=t.distanceTo(e)*.5,o=-this.direction.dot(Dl),a=Cs.dot(this.direction),h=-Cs.dot(Dl),l=Cs.lengthSq(),c=Math.abs(1-o*o);let u,d,f,p;if(c>0)if(u=o*h-a,d=o*a-h,p=s*c,u>=0)if(d>=-p)if(d<=p){const _=1/c;u*=_,d*=_,f=u*(u+o*d+2*a)+d*(o*u+d+2*h)+l}else d=s,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*h)+l;else d=-s,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*h)+l;else d<=-p?(u=Math.max(0,-(-o*s+a)),d=u>0?-s:Math.min(Math.max(-s,-h),s),f=-u*u+d*(d+2*h)+l):d<=p?(u=0,d=Math.min(Math.max(-s,-h),s),f=d*(d+2*h)+l):(u=Math.max(0,-(o*s+a)),d=u>0?s:Math.min(Math.max(-s,-h),s),f=-u*u+d*(d+2*h)+l);else d=o>0?-s:s,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*h)+l;return i&&i.copy(this.origin).addScaledVector(this.direction,u),n&&n.copy(xf).addScaledVector(Dl,d),f}intersectSphere(t,e){jn.subVectors(t.center,this.origin);const i=jn.dot(this.direction),n=jn.dot(jn)-i*i,s=t.radius*t.radius;if(n>s)return null;const o=Math.sqrt(s-n),a=i-o,h=i+o;return h<0?null:a<0?this.at(h,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return i===null?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,n,s,o,a,h;const l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,d=this.origin;return l>=0?(i=(t.min.x-d.x)*l,n=(t.max.x-d.x)*l):(i=(t.max.x-d.x)*l,n=(t.min.x-d.x)*l),c>=0?(s=(t.min.y-d.y)*c,o=(t.max.y-d.y)*c):(s=(t.max.y-d.y)*c,o=(t.min.y-d.y)*c),i>o||s>n||((s>i||isNaN(i))&&(i=s),(o<n||isNaN(n))&&(n=o),u>=0?(a=(t.min.z-d.z)*u,h=(t.max.z-d.z)*u):(a=(t.max.z-d.z)*u,h=(t.min.z-d.z)*u),i>h||a>n)||((a>i||i!==i)&&(i=a),(h<n||n!==n)&&(n=h),n<0)?null:this.at(i>=0?i:n,e)}intersectsBox(t){return this.intersectBox(t,jn)!==null}intersectTriangle(t,e,i,n,s){vf.subVectors(e,t),Ol.subVectors(i,t),bf.crossVectors(vf,Ol);let o=this.direction.dot(bf),a;if(o>0){if(n)return null;a=1}else if(o<0)a=-1,o=-o;else return null;Cs.subVectors(this.origin,t);const h=a*this.direction.dot(Ol.crossVectors(Cs,Ol));if(h<0)return null;const l=a*this.direction.dot(vf.cross(Cs));if(l<0||h+l>o)return null;const c=-a*Cs.dot(bf);return c<0?null:this.at(c/o,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}},Ft=class qp{constructor(t,e,i,n,s,o,a,h,l,c,u,d,f,p,_,g){qp.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,i,n,s,o,a,h,l,c,u,d,f,p,_,g)}set(t,e,i,n,s,o,a,h,l,c,u,d,f,p,_,g){const m=this.elements;return m[0]=t,m[4]=e,m[8]=i,m[12]=n,m[1]=s,m[5]=o,m[9]=a,m[13]=h,m[2]=l,m[6]=c,m[10]=u,m[14]=d,m[3]=f,m[7]=p,m[11]=_,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new qp().fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,n=1/po.setFromMatrixColumn(t,0).length(),s=1/po.setFromMatrixColumn(t,1).length(),o=1/po.setFromMatrixColumn(t,2).length();return e[0]=i[0]*n,e[1]=i[1]*n,e[2]=i[2]*n,e[3]=0,e[4]=i[4]*s,e[5]=i[5]*s,e[6]=i[6]*s,e[7]=0,e[8]=i[8]*o,e[9]=i[9]*o,e[10]=i[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,n=t.y,s=t.z,o=Math.cos(i),a=Math.sin(i),h=Math.cos(n),l=Math.sin(n),c=Math.cos(s),u=Math.sin(s);if(t.order==="XYZ"){const d=o*c,f=o*u,p=a*c,_=a*u;e[0]=h*c,e[4]=-h*u,e[8]=l,e[1]=f+p*l,e[5]=d-_*l,e[9]=-a*h,e[2]=_-d*l,e[6]=p+f*l,e[10]=o*h}else if(t.order==="YXZ"){const d=h*c,f=h*u,p=l*c,_=l*u;e[0]=d+_*a,e[4]=p*a-f,e[8]=o*l,e[1]=o*u,e[5]=o*c,e[9]=-a,e[2]=f*a-p,e[6]=_+d*a,e[10]=o*h}else if(t.order==="ZXY"){const d=h*c,f=h*u,p=l*c,_=l*u;e[0]=d-_*a,e[4]=-o*u,e[8]=p+f*a,e[1]=f+p*a,e[5]=o*c,e[9]=_-d*a,e[2]=-o*l,e[6]=a,e[10]=o*h}else if(t.order==="ZYX"){const d=o*c,f=o*u,p=a*c,_=a*u;e[0]=h*c,e[4]=p*l-f,e[8]=d*l+_,e[1]=h*u,e[5]=_*l+d,e[9]=f*l-p,e[2]=-l,e[6]=a*h,e[10]=o*h}else if(t.order==="YZX"){const d=o*h,f=o*l,p=a*h,_=a*l;e[0]=h*c,e[4]=_-d*u,e[8]=p*u+f,e[1]=u,e[5]=o*c,e[9]=-a*c,e[2]=-l*c,e[6]=f*u+p,e[10]=d-_*u}else if(t.order==="XZY"){const d=o*h,f=o*l,p=a*h,_=a*l;e[0]=h*c,e[4]=-u,e[8]=l*c,e[1]=d*u+_,e[5]=o*c,e[9]=f*u-p,e[2]=p*u-f,e[6]=a*c,e[10]=_*u+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(b1,t,M1)}lookAt(t,e,i){const n=this.elements;return Bi.subVectors(t,e),Bi.lengthSq()===0&&(Bi.z=1),Bi.normalize(),Rs.crossVectors(i,Bi),Rs.lengthSq()===0&&(Math.abs(i.z)===1?Bi.x+=1e-4:Bi.z+=1e-4,Bi.normalize(),Rs.crossVectors(i,Bi)),Rs.normalize(),Fl.crossVectors(Bi,Rs),n[0]=Rs.x,n[4]=Fl.x,n[8]=Bi.x,n[1]=Rs.y,n[5]=Fl.y,n[9]=Bi.y,n[2]=Rs.z,n[6]=Fl.z,n[10]=Bi.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,s=this.elements,o=i[0],a=i[4],h=i[8],l=i[12],c=i[1],u=i[5],d=i[9],f=i[13],p=i[2],_=i[6],g=i[10],m=i[14],x=i[3],y=i[7],v=i[11],E=i[15],b=n[0],w=n[4],T=n[8],S=n[12],M=n[1],I=n[5],N=n[9],O=n[13],B=n[2],Y=n[6],$=n[10],st=n[14],X=n[3],ut=n[7],pt=n[11],mt=n[15];return s[0]=o*b+a*M+h*B+l*X,s[4]=o*w+a*I+h*Y+l*ut,s[8]=o*T+a*N+h*$+l*pt,s[12]=o*S+a*O+h*st+l*mt,s[1]=c*b+u*M+d*B+f*X,s[5]=c*w+u*I+d*Y+f*ut,s[9]=c*T+u*N+d*$+f*pt,s[13]=c*S+u*O+d*st+f*mt,s[2]=p*b+_*M+g*B+m*X,s[6]=p*w+_*I+g*Y+m*ut,s[10]=p*T+_*N+g*$+m*pt,s[14]=p*S+_*O+g*st+m*mt,s[3]=x*b+y*M+v*B+E*X,s[7]=x*w+y*I+v*Y+E*ut,s[11]=x*T+y*N+v*$+E*pt,s[15]=x*S+y*O+v*st+E*mt,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],n=t[8],s=t[12],o=t[1],a=t[5],h=t[9],l=t[13],c=t[2],u=t[6],d=t[10],f=t[14],p=t[3],_=t[7],g=t[11],m=t[15];return p*(+s*h*u-n*l*u-s*a*d+i*l*d+n*a*f-i*h*f)+_*(+e*h*f-e*l*d+s*o*d-n*o*f+n*l*c-s*h*c)+g*(+e*l*u-e*a*f-s*o*u+i*o*f+s*a*c-i*l*c)+m*(-n*a*c-e*h*u+e*a*d+n*o*u-i*o*d+i*h*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const n=this.elements;return t.isVector3?(n[12]=t.x,n[13]=t.y,n[14]=t.z):(n[12]=t,n[13]=e,n[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],s=t[3],o=t[4],a=t[5],h=t[6],l=t[7],c=t[8],u=t[9],d=t[10],f=t[11],p=t[12],_=t[13],g=t[14],m=t[15],x=u*g*l-_*d*l+_*h*f-a*g*f-u*h*m+a*d*m,y=p*d*l-c*g*l-p*h*f+o*g*f+c*h*m-o*d*m,v=c*_*l-p*u*l+p*a*f-o*_*f-c*a*m+o*u*m,E=p*u*h-c*_*h-p*a*d+o*_*d+c*a*g-o*u*g,b=e*x+i*y+n*v+s*E;if(b===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/b;return t[0]=x*w,t[1]=(_*d*s-u*g*s-_*n*f+i*g*f+u*n*m-i*d*m)*w,t[2]=(a*g*s-_*h*s+_*n*l-i*g*l-a*n*m+i*h*m)*w,t[3]=(u*h*s-a*d*s-u*n*l+i*d*l+a*n*f-i*h*f)*w,t[4]=y*w,t[5]=(c*g*s-p*d*s+p*n*f-e*g*f-c*n*m+e*d*m)*w,t[6]=(p*h*s-o*g*s-p*n*l+e*g*l+o*n*m-e*h*m)*w,t[7]=(o*d*s-c*h*s+c*n*l-e*d*l-o*n*f+e*h*f)*w,t[8]=v*w,t[9]=(p*u*s-c*_*s-p*i*f+e*_*f+c*i*m-e*u*m)*w,t[10]=(o*_*s-p*a*s+p*i*l-e*_*l-o*i*m+e*a*m)*w,t[11]=(c*a*s-o*u*s-c*i*l+e*u*l+o*i*f-e*a*f)*w,t[12]=E*w,t[13]=(c*_*n-p*u*n+p*i*d-e*_*d-c*i*g+e*u*g)*w,t[14]=(p*a*n-o*_*n-p*i*h+e*_*h+o*i*g-e*a*g)*w,t[15]=(o*u*n-c*a*n+c*i*h-e*u*h-o*i*d+e*a*d)*w,this}scale(t){const e=this.elements,i=t.x,n=t.y,s=t.z;return e[0]*=i,e[4]*=n,e[8]*=s,e[1]*=i,e[5]*=n,e[9]*=s,e[2]*=i,e[6]*=n,e[10]*=s,e[3]*=i,e[7]*=n,e[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),n=Math.sin(e),s=1-i,o=t.x,a=t.y,h=t.z,l=s*o,c=s*a;return this.set(l*o+i,l*a-n*h,l*h+n*a,0,l*a+n*h,c*a+i,c*h-n*o,0,l*h-n*a,c*h+n*o,s*h*h+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,n,s,o){return this.set(1,i,s,0,t,1,o,0,e,n,1,0,0,0,0,1),this}compose(t,e,i){const n=this.elements,s=e._x,o=e._y,a=e._z,h=e._w,l=s+s,c=o+o,u=a+a,d=s*l,f=s*c,p=s*u,_=o*c,g=o*u,m=a*u,x=h*l,y=h*c,v=h*u,E=i.x,b=i.y,w=i.z;return n[0]=(1-(_+m))*E,n[1]=(f+v)*E,n[2]=(p-y)*E,n[3]=0,n[4]=(f-v)*b,n[5]=(1-(d+m))*b,n[6]=(g+x)*b,n[7]=0,n[8]=(p+y)*w,n[9]=(g-x)*w,n[10]=(1-(d+_))*w,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,this}decompose(t,e,i){const n=this.elements;let s=po.set(n[0],n[1],n[2]).length();const o=po.set(n[4],n[5],n[6]).length(),a=po.set(n[8],n[9],n[10]).length();this.determinant()<0&&(s=-s),t.x=n[12],t.y=n[13],t.z=n[14],gn.copy(this);const l=1/s,c=1/o,u=1/a;return gn.elements[0]*=l,gn.elements[1]*=l,gn.elements[2]*=l,gn.elements[4]*=c,gn.elements[5]*=c,gn.elements[6]*=c,gn.elements[8]*=u,gn.elements[9]*=u,gn.elements[10]*=u,e.setFromRotationMatrix(gn),i.x=s,i.y=o,i.z=a,this}makePerspective(t,e,i,n,s,o,a=Nn){const h=this.elements,l=2*s/(e-t),c=2*s/(i-n),u=(e+t)/(e-t),d=(i+n)/(i-n);let f,p;if(a===Nn)f=-(o+s)/(o-s),p=-2*o*s/(o-s);else if(a===Rh)f=-o/(o-s),p=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return h[0]=l,h[4]=0,h[8]=u,h[12]=0,h[1]=0,h[5]=c,h[9]=d,h[13]=0,h[2]=0,h[6]=0,h[10]=f,h[14]=p,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,e,i,n,s,o,a=Nn){const h=this.elements,l=1/(e-t),c=1/(i-n),u=1/(o-s),d=(e+t)*l,f=(i+n)*c;let p,_;if(a===Nn)p=(o+s)*u,_=-2*u;else if(a===Rh)p=s*u,_=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return h[0]=2*l,h[4]=0,h[8]=0,h[12]=-d,h[1]=0,h[5]=2*c,h[9]=0,h[13]=-f,h[2]=0,h[6]=0,h[10]=_,h[14]=-p,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let n=0;n<16;n++)if(e[n]!==i[n])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}};const po=new R,gn=new Ft,b1=new R(0,0,0),M1=new R(1,1,1),Rs=new R,Fl=new R,Bi=new R,A_=new Ft,E_=new Ii;let Tn=class Pv{constructor(t=0,e=0,i=0,n=Pv.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=n}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,n=this._order){return this._x=t,this._y=e,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const n=t.elements,s=n[0],o=n[4],a=n[8],h=n[1],l=n[5],c=n[9],u=n[2],d=n[6],f=n[10];switch(e){case"XYZ":this._y=Math.asin(Ie(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,f),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-Ie(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(h,l)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(Ie(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(h,s));break;case"ZYX":this._y=Math.asin(-Ie(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(h,s)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(Ie(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-Ie(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-c,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return A_.makeRotationFromQuaternion(t),this.setFromRotationMatrix(A_,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return E_.setFromEuler(this),this.setFromQuaternion(E_,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}};Tn.DEFAULT_ORDER="XYZ";let dd=class{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}},w1=0;const T_=new R,mo=new Ii,Qn=new Ft,zl=new R,La=new R,S1=new R,A1=new Ii,C_=new R(1,0,0),R_=new R(0,1,0),P_=new R(0,0,1),I_={type:"added"},E1={type:"removed"},go={type:"childadded",child:null},Mf={type:"childremoved",child:null};let pe=class au extends Gn{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:w1++}),this.uuid=Yi(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=au.DEFAULT_UP.clone();const t=new R,e=new Tn,i=new Ii,n=new R(1,1,1);function s(){i.setFromEuler(e,!1)}function o(){e.setFromQuaternion(i,void 0,!1)}e._onChange(s),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Ft},normalMatrix:{value:new Zt}}),this.matrix=new Ft,this.matrixWorld=new Ft,this.matrixAutoUpdate=au.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=au.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new dd,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return mo.setFromAxisAngle(t,e),this.quaternion.multiply(mo),this}rotateOnWorldAxis(t,e){return mo.setFromAxisAngle(t,e),this.quaternion.premultiply(mo),this}rotateX(t){return this.rotateOnAxis(C_,t)}rotateY(t){return this.rotateOnAxis(R_,t)}rotateZ(t){return this.rotateOnAxis(P_,t)}translateOnAxis(t,e){return T_.copy(t).applyQuaternion(this.quaternion),this.position.add(T_.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(C_,t)}translateY(t){return this.translateOnAxis(R_,t)}translateZ(t){return this.translateOnAxis(P_,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(Qn.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?zl.copy(t):zl.set(t,e,i);const n=this.parent;this.updateWorldMatrix(!0,!1),La.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?Qn.lookAt(La,zl,this.up):Qn.lookAt(zl,La,this.up),this.quaternion.setFromRotationMatrix(Qn),n&&(Qn.extractRotation(n.matrixWorld),mo.setFromRotationMatrix(Qn),this.quaternion.premultiply(mo.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(I_),go.child=t,this.dispatchEvent(go),go.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(E1),Mf.child=t,this.dispatchEvent(Mf),Mf.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),Qn.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),Qn.multiply(t.parent.matrixWorld)),t.applyMatrix4(Qn),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(I_),go.child=t,this.dispatchEvent(go),go.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,n=this.children.length;i<n;i++){const o=this.children[i].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const n=this.children;for(let s=0,o=n.length;s<o;s++)n[s].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(La,t,S1),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose(La,A1,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const i=this.parent;if(t===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const n=this.children;for(let s=0,o=n.length;s<o;s++)n[s].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(t),this._colorsTexture!==null&&(n.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),this.boundingBox!==null&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()}));function s(a,h){return a[h.uuid]===void 0&&(a[h.uuid]=h.toJSON(t)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=s(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const h=a.shapes;if(Array.isArray(h))for(let l=0,c=h.length;l<c;l++){const u=h[l];s(t.shapes,u)}else s(t.shapes,h)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(t.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let h=0,l=this.material.length;h<l;h++)a.push(s(t.materials,this.material[h]));n.material=a}else n.material=s(t.materials,this.material);if(this.children.length>0){n.children=[];for(let a=0;a<this.children.length;a++)n.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){n.animations=[];for(let a=0;a<this.animations.length;a++){const h=this.animations[a];n.animations.push(s(t.animations,h))}}if(e){const a=o(t.geometries),h=o(t.materials),l=o(t.textures),c=o(t.images),u=o(t.shapes),d=o(t.skeletons),f=o(t.animations),p=o(t.nodes);a.length>0&&(i.geometries=a),h.length>0&&(i.materials=h),l.length>0&&(i.textures=l),c.length>0&&(i.images=c),u.length>0&&(i.shapes=u),d.length>0&&(i.skeletons=d),f.length>0&&(i.animations=f),p.length>0&&(i.nodes=p)}return i.object=n,i;function o(a){const h=[];for(const l in a){const c=a[l];delete c.metadata,h.push(c)}return h}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){const n=t.children[i];this.add(n.clone())}return this}};pe.DEFAULT_UP=new R(0,1,0);pe.DEFAULT_MATRIX_AUTO_UPDATE=!0;pe.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const _n=new R,ts=new R,wf=new R,es=new R,_o=new R,yo=new R,L_=new R,Sf=new R,Af=new R,Ef=new R;let $s=class Yo{constructor(t=new R,e=new R,i=new R){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,n){n.subVectors(i,e),_n.subVectors(t,e),n.cross(_n);const s=n.lengthSq();return s>0?n.multiplyScalar(1/Math.sqrt(s)):n.set(0,0,0)}static getBarycoord(t,e,i,n,s){_n.subVectors(n,e),ts.subVectors(i,e),wf.subVectors(t,e);const o=_n.dot(_n),a=_n.dot(ts),h=_n.dot(wf),l=ts.dot(ts),c=ts.dot(wf),u=o*l-a*a;if(u===0)return s.set(0,0,0),null;const d=1/u,f=(l*h-a*c)*d,p=(o*c-a*h)*d;return s.set(1-f-p,p,f)}static containsPoint(t,e,i,n){return this.getBarycoord(t,e,i,n,es)===null?!1:es.x>=0&&es.y>=0&&es.x+es.y<=1}static getInterpolation(t,e,i,n,s,o,a,h){return this.getBarycoord(t,e,i,n,es)===null?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(s,es.x),h.addScaledVector(o,es.y),h.addScaledVector(a,es.z),h)}static isFrontFacing(t,e,i,n){return _n.subVectors(i,e),ts.subVectors(t,e),_n.cross(ts).dot(n)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this}setFromAttributeAndIndices(t,e,i,n){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return _n.subVectors(this.c,this.b),ts.subVectors(this.a,this.b),_n.cross(ts).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Yo.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Yo.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,i,n,s){return Yo.getInterpolation(t,this.a,this.b,this.c,e,i,n,s)}containsPoint(t){return Yo.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Yo.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,n=this.b,s=this.c;let o,a;_o.subVectors(n,i),yo.subVectors(s,i),Sf.subVectors(t,i);const h=_o.dot(Sf),l=yo.dot(Sf);if(h<=0&&l<=0)return e.copy(i);Af.subVectors(t,n);const c=_o.dot(Af),u=yo.dot(Af);if(c>=0&&u<=c)return e.copy(n);const d=h*u-c*l;if(d<=0&&h>=0&&c<=0)return o=h/(h-c),e.copy(i).addScaledVector(_o,o);Ef.subVectors(t,s);const f=_o.dot(Ef),p=yo.dot(Ef);if(p>=0&&f<=p)return e.copy(s);const _=f*l-h*p;if(_<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(i).addScaledVector(yo,a);const g=c*p-f*u;if(g<=0&&u-c>=0&&f-p>=0)return L_.subVectors(s,n),a=(u-c)/(u-c+(f-p)),e.copy(n).addScaledVector(L_,a);const m=1/(g+_+d);return o=_*m,a=d*m,e.copy(i).addScaledVector(_o,o).addScaledVector(yo,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}};const Iv={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ps={h:0,s:0,l:0},Ul={h:0,s:0,l:0};function Tf(r,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?r+(t-r)*6*e:e<1/2?t:e<2/3?r+(t-r)*6*(2/3-e):r}let vt=class{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){if(e===void 0&&i===void 0){const n=t;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(t,e,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=nn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,ae.toWorkingColorSpace(this,e),this}setRGB(t,e,i,n=ae.workingColorSpace){return this.r=t,this.g=e,this.b=i,ae.toWorkingColorSpace(this,n),this}setHSL(t,e,i,n=ae.workingColorSpace){if(t=Im(t,1),e=Ie(e,0,1),i=Ie(i,0,1),e===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+e):i+e-i*e,o=2*i-s;this.r=Tf(o,s,t+1/3),this.g=Tf(o,s,t),this.b=Tf(o,s,t-1/3)}return ae.toWorkingColorSpace(this,n),this}setStyle(t,e=nn){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(t)){let s;const o=n[1],a=n[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,e);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,e);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const s=n[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(s,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=nn){const i=Iv[t.toLowerCase()];return i!==void 0?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=na(t.r),this.g=na(t.g),this.b=na(t.b),this}copyLinearToSRGB(t){return this.r=pf(t.r),this.g=pf(t.g),this.b=pf(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=nn){return ae.fromWorkingColorSpace(hi.copy(this),t),Math.round(Ie(hi.r*255,0,255))*65536+Math.round(Ie(hi.g*255,0,255))*256+Math.round(Ie(hi.b*255,0,255))}getHexString(t=nn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=ae.workingColorSpace){ae.fromWorkingColorSpace(hi.copy(this),e);const i=hi.r,n=hi.g,s=hi.b,o=Math.max(i,n,s),a=Math.min(i,n,s);let h,l;const c=(a+o)/2;if(a===o)h=0,l=0;else{const u=o-a;switch(l=c<=.5?u/(o+a):u/(2-o-a),o){case i:h=(n-s)/u+(n<s?6:0);break;case n:h=(s-i)/u+2;break;case s:h=(i-n)/u+4;break}h/=6}return t.h=h,t.s=l,t.l=c,t}getRGB(t,e=ae.workingColorSpace){return ae.fromWorkingColorSpace(hi.copy(this),e),t.r=hi.r,t.g=hi.g,t.b=hi.b,t}getStyle(t=nn){ae.fromWorkingColorSpace(hi.copy(this),t);const e=hi.r,i=hi.g,n=hi.b;return t!==nn?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(t,e,i){return this.getHSL(Ps),this.setHSL(Ps.h+t,Ps.s+e,Ps.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(Ps),t.getHSL(Ul);const i=dh(Ps.h,Ul.h,e),n=dh(Ps.s,Ul.s,e),s=dh(Ps.l,Ul.l,e);return this.setHSL(i,n,s),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,i=this.g,n=this.b,s=t.elements;return this.r=s[0]*e+s[3]*i+s[6]*n,this.g=s[1]*e+s[4]*i+s[7]*n,this.b=s[2]*e+s[5]*i+s[8]*n,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}};const hi=new vt;vt.NAMES=Iv;let T1=0,si=class extends Gn{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:T1++}),this.uuid=Yi(),this.name="",this.type="Material",this.blending=Ir,this.side=ms,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=pu,this.blendDst=mu,this.blendEquation=Gs,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new vt(0,0,0),this.blendAlpha=0,this.depthFunc=yh,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=$p,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Mr,this.stencilZFail=Mr,this.stencilZPass=Mr,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const i=t[e];if(i===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const n=this[e];if(n===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[e]=i}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Ir&&(i.blending=this.blending),this.side!==ms&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==pu&&(i.blendSrc=this.blendSrc),this.blendDst!==mu&&(i.blendDst=this.blendDst),this.blendEquation!==Gs&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==yh&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==$p&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Mr&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Mr&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Mr&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(s){const o=[];for(const a in s){const h=s[a];delete h.metadata,o.push(h)}return o}if(e){const s=n(t.textures),o=n(t.images);s.length>0&&(i.textures=s),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(e!==null){const n=e.length;i=new Array(n);for(let s=0;s!==n;++s)i[s]=e[s].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}},Oe=class extends si{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new vt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Tn,this.combine=qh,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}};const cs=C1();function C1(){const r=new ArrayBuffer(4),t=new Float32Array(r),e=new Uint32Array(r),i=new Uint32Array(512),n=new Uint32Array(512);for(let h=0;h<256;++h){const l=h-127;l<-27?(i[h]=0,i[h|256]=32768,n[h]=24,n[h|256]=24):l<-14?(i[h]=1024>>-l-14,i[h|256]=1024>>-l-14|32768,n[h]=-l-1,n[h|256]=-l-1):l<=15?(i[h]=l+15<<10,i[h|256]=l+15<<10|32768,n[h]=13,n[h|256]=13):l<128?(i[h]=31744,i[h|256]=64512,n[h]=24,n[h|256]=24):(i[h]=31744,i[h|256]=64512,n[h]=13,n[h|256]=13)}const s=new Uint32Array(2048),o=new Uint32Array(64),a=new Uint32Array(64);for(let h=1;h<1024;++h){let l=h<<13,c=0;for(;!(l&8388608);)l<<=1,c-=8388608;l&=-8388609,c+=947912704,s[h]=l|c}for(let h=1024;h<2048;++h)s[h]=939524096+(h-1024<<13);for(let h=1;h<31;++h)o[h]=h<<23;o[31]=1199570944,o[32]=2147483648;for(let h=33;h<63;++h)o[h]=2147483648+(h-32<<23);o[63]=3347054592;for(let h=1;h<64;++h)h!==32&&(a[h]=1024);return{floatView:t,uint32View:e,baseTable:i,shiftTable:n,mantissaTable:s,exponentTable:o,offsetTable:a}}function Ci(r){Math.abs(r)>65504&&console.warn("THREE.DataUtils.toHalfFloat(): Value out of range."),r=Ie(r,-65504,65504),cs.floatView[0]=r;const t=cs.uint32View[0],e=t>>23&511;return cs.baseTable[e]+((t&8388607)>>cs.shiftTable[e])}function eh(r){const t=r>>10;return cs.uint32View[0]=cs.mantissaTable[cs.offsetTable[t]+(r&1023)]+cs.exponentTable[t],cs.floatView[0]}const R1={toHalfFloat:Ci,fromHalfFloat:eh},Ne=new R,Nl=new Q;let _e=class{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i,this.usage=Ch,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.gpuType=Pi,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}get updateRange(){return ia("THREE.BufferAttribute: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let n=0,s=this.itemSize;n<s;n++)this.array[t+n]=e.array[i+n];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)Nl.fromBufferAttribute(this,e),Nl.applyMatrix3(t),this.setXY(e,Nl.x,Nl.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)Ne.fromBufferAttribute(this,e),Ne.applyMatrix3(t),this.setXYZ(e,Ne.x,Ne.y,Ne.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)Ne.fromBufferAttribute(this,e),Ne.applyMatrix4(t),this.setXYZ(e,Ne.x,Ne.y,Ne.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)Ne.fromBufferAttribute(this,e),Ne.applyNormalMatrix(t),this.setXYZ(e,Ne.x,Ne.y,Ne.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)Ne.fromBufferAttribute(this,e),Ne.transformDirection(t),this.setXYZ(e,Ne.x,Ne.y,Ne.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=bi(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=$t(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=bi(e,this.array)),e}setX(t,e){return this.normalized&&(e=$t(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=bi(e,this.array)),e}setY(t,e){return this.normalized&&(e=$t(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=bi(e,this.array)),e}setZ(t,e){return this.normalized&&(e=$t(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=bi(e,this.array)),e}setW(t,e){return this.normalized&&(e=$t(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=$t(e,this.array),i=$t(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,n){return t*=this.itemSize,this.normalized&&(e=$t(e,this.array),i=$t(i,this.array),n=$t(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this}setXYZW(t,e,i,n,s){return t*=this.itemSize,this.normalized&&(e=$t(e,this.array),i=$t(i,this.array),n=$t(n,this.array),s=$t(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=s,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==Ch&&(t.usage=this.usage),t}};class P1 extends _e{constructor(t,e,i){super(new Int8Array(t),e,i)}}class I1 extends _e{constructor(t,e,i){super(new Uint8Array(t),e,i)}}class L1 extends _e{constructor(t,e,i){super(new Uint8ClampedArray(t),e,i)}}class D1 extends _e{constructor(t,e,i){super(new Int16Array(t),e,i)}}let Dm=class extends _e{constructor(t,e,i){super(new Uint16Array(t),e,i)}};class O1 extends _e{constructor(t,e,i){super(new Int32Array(t),e,i)}}let Om=class extends _e{constructor(t,e,i){super(new Uint32Array(t),e,i)}};class F1 extends _e{constructor(t,e,i){super(new Uint16Array(t),e,i),this.isFloat16BufferAttribute=!0}getX(t){let e=eh(this.array[t*this.itemSize]);return this.normalized&&(e=bi(e,this.array)),e}setX(t,e){return this.normalized&&(e=$t(e,this.array)),this.array[t*this.itemSize]=Ci(e),this}getY(t){let e=eh(this.array[t*this.itemSize+1]);return this.normalized&&(e=bi(e,this.array)),e}setY(t,e){return this.normalized&&(e=$t(e,this.array)),this.array[t*this.itemSize+1]=Ci(e),this}getZ(t){let e=eh(this.array[t*this.itemSize+2]);return this.normalized&&(e=bi(e,this.array)),e}setZ(t,e){return this.normalized&&(e=$t(e,this.array)),this.array[t*this.itemSize+2]=Ci(e),this}getW(t){let e=eh(this.array[t*this.itemSize+3]);return this.normalized&&(e=bi(e,this.array)),e}setW(t,e){return this.normalized&&(e=$t(e,this.array)),this.array[t*this.itemSize+3]=Ci(e),this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=$t(e,this.array),i=$t(i,this.array)),this.array[t+0]=Ci(e),this.array[t+1]=Ci(i),this}setXYZ(t,e,i,n){return t*=this.itemSize,this.normalized&&(e=$t(e,this.array),i=$t(i,this.array),n=$t(n,this.array)),this.array[t+0]=Ci(e),this.array[t+1]=Ci(i),this.array[t+2]=Ci(n),this}setXYZW(t,e,i,n,s){return t*=this.itemSize,this.normalized&&(e=$t(e,this.array),i=$t(i,this.array),n=$t(n,this.array),s=$t(s,this.array)),this.array[t+0]=Ci(e),this.array[t+1]=Ci(i),this.array[t+2]=Ci(n),this.array[t+3]=Ci(s),this}}let Tt=class extends _e{constructor(t,e,i){super(new Float32Array(t),e,i)}},z1=0;const ji=new Ft,Cf=new pe,xo=new R,ki=new Le,Da=new Le,Xe=new R;let Xt=class Lv extends Gn{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:z1++}),this.uuid=Yi(),this.name="",this.type="BufferGeometry",this.index=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(Sv(t)?Om:Dm)(t,1):this.index=t,this}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new Zt().getNormalMatrix(t);i.applyNormalMatrix(s),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(t),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return ji.makeRotationFromQuaternion(t),this.applyMatrix4(ji),this}rotateX(t){return ji.makeRotationX(t),this.applyMatrix4(ji),this}rotateY(t){return ji.makeRotationY(t),this.applyMatrix4(ji),this}rotateZ(t){return ji.makeRotationZ(t),this.applyMatrix4(ji),this}translate(t,e,i){return ji.makeTranslation(t,e,i),this.applyMatrix4(ji),this}scale(t,e,i){return ji.makeScale(t,e,i),this.applyMatrix4(ji),this}lookAt(t){return Cf.lookAt(t),Cf.updateMatrix(),this.applyMatrix4(Cf.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(xo).negate(),this.translate(xo.x,xo.y,xo.z),this}setFromPoints(t){const e=[];for(let i=0,n=t.length;i<n;i++){const s=t[i];e.push(s.x,s.y,s.z||0)}return this.setAttribute("position",new Tt(e,3)),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Le);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new R(-1/0,-1/0,-1/0),new R(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,n=e.length;i<n;i++){const s=e[i];ki.setFromBufferAttribute(s),this.morphTargetsRelative?(Xe.addVectors(this.boundingBox.min,ki.min),this.boundingBox.expandByPoint(Xe),Xe.addVectors(this.boundingBox.max,ki.max),this.boundingBox.expandByPoint(Xe)):(this.boundingBox.expandByPoint(ki.min),this.boundingBox.expandByPoint(ki.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new He);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new R,1/0);return}if(t){const i=this.boundingSphere.center;if(ki.setFromBufferAttribute(t),e)for(let s=0,o=e.length;s<o;s++){const a=e[s];Da.setFromBufferAttribute(a),this.morphTargetsRelative?(Xe.addVectors(ki.min,Da.min),ki.expandByPoint(Xe),Xe.addVectors(ki.max,Da.max),ki.expandByPoint(Xe)):(ki.expandByPoint(Da.min),ki.expandByPoint(Da.max))}ki.getCenter(i);let n=0;for(let s=0,o=t.count;s<o;s++)Xe.fromBufferAttribute(t,s),n=Math.max(n,i.distanceToSquared(Xe));if(e)for(let s=0,o=e.length;s<o;s++){const a=e[s],h=this.morphTargetsRelative;for(let l=0,c=a.count;l<c;l++)Xe.fromBufferAttribute(a,l),h&&(xo.fromBufferAttribute(t,l),Xe.add(xo)),n=Math.max(n,i.distanceToSquared(Xe))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.position,n=e.normal,s=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new _e(new Float32Array(4*i.count),4));const o=this.getAttribute("tangent"),a=[],h=[];for(let T=0;T<i.count;T++)a[T]=new R,h[T]=new R;const l=new R,c=new R,u=new R,d=new Q,f=new Q,p=new Q,_=new R,g=new R;function m(T,S,M){l.fromBufferAttribute(i,T),c.fromBufferAttribute(i,S),u.fromBufferAttribute(i,M),d.fromBufferAttribute(s,T),f.fromBufferAttribute(s,S),p.fromBufferAttribute(s,M),c.sub(l),u.sub(l),f.sub(d),p.sub(d);const I=1/(f.x*p.y-p.x*f.y);isFinite(I)&&(_.copy(c).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(I),g.copy(u).multiplyScalar(f.x).addScaledVector(c,-p.x).multiplyScalar(I),a[T].add(_),a[S].add(_),a[M].add(_),h[T].add(g),h[S].add(g),h[M].add(g))}let x=this.groups;x.length===0&&(x=[{start:0,count:t.count}]);for(let T=0,S=x.length;T<S;++T){const M=x[T],I=M.start,N=M.count;for(let O=I,B=I+N;O<B;O+=3)m(t.getX(O+0),t.getX(O+1),t.getX(O+2))}const y=new R,v=new R,E=new R,b=new R;function w(T){E.fromBufferAttribute(n,T),b.copy(E);const S=a[T];y.copy(S),y.sub(E.multiplyScalar(E.dot(S))).normalize(),v.crossVectors(b,S);const I=v.dot(h[T])<0?-1:1;o.setXYZW(T,y.x,y.y,y.z,I)}for(let T=0,S=x.length;T<S;++T){const M=x[T],I=M.start,N=M.count;for(let O=I,B=I+N;O<B;O+=3)w(t.getX(O+0)),w(t.getX(O+1)),w(t.getX(O+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new _e(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let d=0,f=i.count;d<f;d++)i.setXYZ(d,0,0,0);const n=new R,s=new R,o=new R,a=new R,h=new R,l=new R,c=new R,u=new R;if(t)for(let d=0,f=t.count;d<f;d+=3){const p=t.getX(d+0),_=t.getX(d+1),g=t.getX(d+2);n.fromBufferAttribute(e,p),s.fromBufferAttribute(e,_),o.fromBufferAttribute(e,g),c.subVectors(o,s),u.subVectors(n,s),c.cross(u),a.fromBufferAttribute(i,p),h.fromBufferAttribute(i,_),l.fromBufferAttribute(i,g),a.add(c),h.add(c),l.add(c),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(_,h.x,h.y,h.z),i.setXYZ(g,l.x,l.y,l.z)}else for(let d=0,f=e.count;d<f;d+=3)n.fromBufferAttribute(e,d+0),s.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),c.subVectors(o,s),u.subVectors(n,s),c.cross(u),i.setXYZ(d+0,c.x,c.y,c.z),i.setXYZ(d+1,c.x,c.y,c.z),i.setXYZ(d+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)Xe.fromBufferAttribute(t,e),Xe.normalize(),t.setXYZ(e,Xe.x,Xe.y,Xe.z)}toNonIndexed(){function t(a,h){const l=a.array,c=a.itemSize,u=a.normalized,d=new l.constructor(h.length*c);let f=0,p=0;for(let _=0,g=h.length;_<g;_++){a.isInterleavedBufferAttribute?f=h[_]*a.data.stride+a.offset:f=h[_]*c;for(let m=0;m<c;m++)d[p++]=l[f++]}return new _e(d,c,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new Lv,i=this.index.array,n=this.attributes;for(const a in n){const h=n[a],l=t(h,i);e.setAttribute(a,l)}const s=this.morphAttributes;for(const a in s){const h=[],l=s[a];for(let c=0,u=l.length;c<u;c++){const d=l[c],f=t(d,i);h.push(f)}e.morphAttributes[a]=h}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,h=o.length;a<h;a++){const l=o[a];e.addGroup(l.start,l.count,l.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const l in h)h[l]!==void 0&&(t[l]=h[l]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const h in i){const l=i[h];t.data.attributes[h]=l.toJSON(t.data)}const n={};let s=!1;for(const h in this.morphAttributes){const l=this.morphAttributes[h],c=[];for(let u=0,d=l.length;u<d;u++){const f=l[u];c.push(f.toJSON(t.data))}c.length>0&&(n[h]=c,s=!0)}s&&(t.data.morphAttributes=n,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(e));const n=t.attributes;for(const l in n){const c=n[l];this.setAttribute(l,c.clone(e))}const s=t.morphAttributes;for(const l in s){const c=[],u=s[l];for(let d=0,f=u.length;d<f;d++)c.push(u[d].clone(e));this.morphAttributes[l]=c}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let l=0,c=o.length;l<c;l++){const u=o[l];this.addGroup(u.start,u.count,u.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}};const D_=new Ft,or=new ga,Bl=new He,O_=new R,vo=new R,bo=new R,Mo=new R,Rf=new R,kl=new R,Vl=new Q,Hl=new Q,Gl=new Q,F_=new R,z_=new R,U_=new R,Wl=new R,$l=new R;let ge=class extends pe{constructor(t=new Xt,e=new Oe){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const n=e[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(t,e){const i=this.geometry,n=i.attributes.position,s=i.morphAttributes.position,o=i.morphTargetsRelative;e.fromBufferAttribute(n,t);const a=this.morphTargetInfluences;if(s&&a){kl.set(0,0,0);for(let h=0,l=s.length;h<l;h++){const c=a[h],u=s[h];c!==0&&(Rf.fromBufferAttribute(u,t),o?kl.addScaledVector(Rf,c):kl.addScaledVector(Rf.sub(e),c))}e.add(kl)}return e}raycast(t,e){const i=this.geometry,n=this.material,s=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Bl.copy(i.boundingSphere),Bl.applyMatrix4(s),or.copy(t.ray).recast(t.near),!(Bl.containsPoint(or.origin)===!1&&(or.intersectSphere(Bl,O_)===null||or.origin.distanceToSquared(O_)>(t.far-t.near)**2))&&(D_.copy(s).invert(),or.copy(t.ray).applyMatrix4(D_),!(i.boundingBox!==null&&or.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(t,e,or)))}_computeIntersections(t,e,i){let n;const s=this.geometry,o=this.material,a=s.index,h=s.attributes.position,l=s.attributes.uv,c=s.attributes.uv1,u=s.attributes.normal,d=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],x=Math.max(g.start,f.start),y=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let v=x,E=y;v<E;v+=3){const b=a.getX(v),w=a.getX(v+1),T=a.getX(v+2);n=Xl(this,m,t,i,l,c,u,b,w,T),n&&(n.faceIndex=Math.floor(v/3),n.face.materialIndex=g.materialIndex,e.push(n))}}else{const p=Math.max(0,f.start),_=Math.min(a.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const x=a.getX(g),y=a.getX(g+1),v=a.getX(g+2);n=Xl(this,o,t,i,l,c,u,x,y,v),n&&(n.faceIndex=Math.floor(g/3),e.push(n))}}else if(h!==void 0)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],x=Math.max(g.start,f.start),y=Math.min(h.count,Math.min(g.start+g.count,f.start+f.count));for(let v=x,E=y;v<E;v+=3){const b=v,w=v+1,T=v+2;n=Xl(this,m,t,i,l,c,u,b,w,T),n&&(n.faceIndex=Math.floor(v/3),n.face.materialIndex=g.materialIndex,e.push(n))}}else{const p=Math.max(0,f.start),_=Math.min(h.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const x=g,y=g+1,v=g+2;n=Xl(this,o,t,i,l,c,u,x,y,v),n&&(n.faceIndex=Math.floor(g/3),e.push(n))}}}};function U1(r,t,e,i,n,s,o,a){let h;if(t.side===wi?h=i.intersectTriangle(o,s,n,!0,a):h=i.intersectTriangle(n,s,o,t.side===ms,a),h===null)return null;$l.copy(a),$l.applyMatrix4(r.matrixWorld);const l=e.ray.origin.distanceTo($l);return l<e.near||l>e.far?null:{distance:l,point:$l.clone(),object:r}}function Xl(r,t,e,i,n,s,o,a,h,l){r.getVertexPosition(a,vo),r.getVertexPosition(h,bo),r.getVertexPosition(l,Mo);const c=U1(r,t,e,i,vo,bo,Mo,Wl);if(c){n&&(Vl.fromBufferAttribute(n,a),Hl.fromBufferAttribute(n,h),Gl.fromBufferAttribute(n,l),c.uv=$s.getInterpolation(Wl,vo,bo,Mo,Vl,Hl,Gl,new Q)),s&&(Vl.fromBufferAttribute(s,a),Hl.fromBufferAttribute(s,h),Gl.fromBufferAttribute(s,l),c.uv1=$s.getInterpolation(Wl,vo,bo,Mo,Vl,Hl,Gl,new Q)),o&&(F_.fromBufferAttribute(o,a),z_.fromBufferAttribute(o,h),U_.fromBufferAttribute(o,l),c.normal=$s.getInterpolation(Wl,vo,bo,Mo,F_,z_,U_,new R),c.normal.dot(i.direction)>0&&c.normal.multiplyScalar(-1));const u={a,b:h,c:l,normal:new R,materialIndex:0};$s.getNormal(vo,bo,Mo,u.normal),c.face=u}return c}class Js extends Xt{constructor(t=1,e=1,i=1,n=1,s=1,o=1){super(),this.type="BoxGeometry",this.parameters={width:t,height:e,depth:i,widthSegments:n,heightSegments:s,depthSegments:o};const a=this;n=Math.floor(n),s=Math.floor(s),o=Math.floor(o);const h=[],l=[],c=[],u=[];let d=0,f=0;p("z","y","x",-1,-1,i,e,t,o,s,0),p("z","y","x",1,-1,i,e,-t,o,s,1),p("x","z","y",1,1,t,i,e,n,o,2),p("x","z","y",1,-1,t,i,-e,n,o,3),p("x","y","z",1,-1,t,e,i,n,s,4),p("x","y","z",-1,-1,t,e,-i,n,s,5),this.setIndex(h),this.setAttribute("position",new Tt(l,3)),this.setAttribute("normal",new Tt(c,3)),this.setAttribute("uv",new Tt(u,2));function p(_,g,m,x,y,v,E,b,w,T,S){const M=v/w,I=E/T,N=v/2,O=E/2,B=b/2,Y=w+1,$=T+1;let st=0,X=0;const ut=new R;for(let pt=0;pt<$;pt++){const mt=pt*I-O;for(let Kt=0;Kt<Y;Kt++){const he=Kt*M-N;ut[_]=he*x,ut[g]=mt*y,ut[m]=B,l.push(ut.x,ut.y,ut.z),ut[_]=0,ut[g]=0,ut[m]=b>0?1:-1,c.push(ut.x,ut.y,ut.z),u.push(Kt/w),u.push(1-pt/T),st+=1}}for(let pt=0;pt<T;pt++)for(let mt=0;mt<w;mt++){const Kt=d+mt+Y*pt,he=d+mt+Y*(pt+1),Z=d+(mt+1)+Y*(pt+1),ot=d+(mt+1)+Y*pt;h.push(Kt,he,ot),h.push(he,Z,ot),X+=6}a.addGroup(f,X,S),f+=X,d+=st}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Js(t.width,t.height,t.depth,t.widthSegments,t.heightSegments,t.depthSegments)}}function ca(r){const t={};for(const e in r){t[e]={};for(const i in r[e]){const n=r[e][i];n&&(n.isColor||n.isMatrix3||n.isMatrix4||n.isVector2||n.isVector3||n.isVector4||n.isTexture||n.isQuaternion)?n.isRenderTargetTexture?(console.warn("UniformsUtils: Textures of render targets cannot be cloned via cloneUniforms() or mergeUniforms()."),t[e][i]=null):t[e][i]=n.clone():Array.isArray(n)?t[e][i]=n.slice():t[e][i]=n}}return t}function _i(r){const t={};for(let e=0;e<r.length;e++){const i=ca(r[e]);for(const n in i)t[n]=i[n]}return t}function N1(r){const t=[];for(let e=0;e<r.length;e++)t.push(r[e].clone());return t}function Dv(r){const t=r.getRenderTarget();return t===null?r.outputColorSpace:t.isXRRenderTarget===!0?t.texture.colorSpace:ae.workingColorSpace}const fd={clone:ca,merge:_i};var B1=`void main() {
	gl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );
}`,k1=`void main() {
	gl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );
}`;class hn extends si{constructor(t){super(),this.isShaderMaterial=!0,this.type="ShaderMaterial",this.defines={},this.uniforms={},this.uniformsGroups=[],this.vertexShader=B1,this.fragmentShader=k1,this.linewidth=1,this.wireframe=!1,this.wireframeLinewidth=1,this.fog=!1,this.lights=!1,this.clipping=!1,this.forceSinglePass=!0,this.extensions={clipCullDistance:!1,multiDraw:!1},this.defaultAttributeValues={color:[1,1,1],uv:[0,0],uv1:[0,0]},this.index0AttributeName=void 0,this.uniformsNeedUpdate=!1,this.glslVersion=null,t!==void 0&&this.setValues(t)}copy(t){return super.copy(t),this.fragmentShader=t.fragmentShader,this.vertexShader=t.vertexShader,this.uniforms=ca(t.uniforms),this.uniformsGroups=N1(t.uniformsGroups),this.defines=Object.assign({},t.defines),this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.fog=t.fog,this.lights=t.lights,this.clipping=t.clipping,this.extensions=Object.assign({},t.extensions),this.glslVersion=t.glslVersion,this}toJSON(t){const e=super.toJSON(t);e.glslVersion=this.glslVersion,e.uniforms={};for(const n in this.uniforms){const o=this.uniforms[n].value;o&&o.isTexture?e.uniforms[n]={type:"t",value:o.toJSON(t).uuid}:o&&o.isColor?e.uniforms[n]={type:"c",value:o.getHex()}:o&&o.isVector2?e.uniforms[n]={type:"v2",value:o.toArray()}:o&&o.isVector3?e.uniforms[n]={type:"v3",value:o.toArray()}:o&&o.isVector4?e.uniforms[n]={type:"v4",value:o.toArray()}:o&&o.isMatrix3?e.uniforms[n]={type:"m3",value:o.toArray()}:o&&o.isMatrix4?e.uniforms[n]={type:"m4",value:o.toArray()}:e.uniforms[n]={value:o}}Object.keys(this.defines).length>0&&(e.defines=this.defines),e.vertexShader=this.vertexShader,e.fragmentShader=this.fragmentShader,e.lights=this.lights,e.clipping=this.clipping;const i={};for(const n in this.extensions)this.extensions[n]===!0&&(i[n]=!0);return Object.keys(i).length>0&&(e.extensions=i),e}}class pd extends pe{constructor(){super(),this.isCamera=!0,this.type="Camera",this.matrixWorldInverse=new Ft,this.projectionMatrix=new Ft,this.projectionMatrixInverse=new Ft,this.coordinateSystem=Nn}copy(t,e){return super.copy(t,e),this.matrixWorldInverse.copy(t.matrixWorldInverse),this.projectionMatrix.copy(t.projectionMatrix),this.projectionMatrixInverse.copy(t.projectionMatrixInverse),this.coordinateSystem=t.coordinateSystem,this}getWorldDirection(t){return super.getWorldDirection(t).negate()}updateMatrixWorld(t){super.updateMatrixWorld(t),this.matrixWorldInverse.copy(this.matrixWorld).invert()}updateWorldMatrix(t,e){super.updateWorldMatrix(t,e),this.matrixWorldInverse.copy(this.matrixWorld).invert()}clone(){return new this.constructor().copy(this)}}const Is=new R,N_=new Q,B_=new Q;class Ye extends pd{constructor(t=50,e=1,i=.1,n=2e3){super(),this.isPerspectiveCamera=!0,this.type="PerspectiveCamera",this.fov=t,this.zoom=1,this.near=i,this.far=n,this.focus=10,this.aspect=e,this.view=null,this.filmGauge=35,this.filmOffset=0,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.fov=t.fov,this.zoom=t.zoom,this.near=t.near,this.far=t.far,this.focus=t.focus,this.aspect=t.aspect,this.view=t.view===null?null:Object.assign({},t.view),this.filmGauge=t.filmGauge,this.filmOffset=t.filmOffset,this}setFocalLength(t){const e=.5*this.getFilmHeight()/t;this.fov=la*2*Math.atan(e),this.updateProjectionMatrix()}getFocalLength(){const t=Math.tan(Dr*.5*this.fov);return .5*this.getFilmHeight()/t}getEffectiveFOV(){return la*2*Math.atan(Math.tan(Dr*.5*this.fov)/this.zoom)}getFilmWidth(){return this.filmGauge*Math.min(this.aspect,1)}getFilmHeight(){return this.filmGauge/Math.max(this.aspect,1)}getViewBounds(t,e,i){Is.set(-1,-1,.5).applyMatrix4(this.projectionMatrixInverse),e.set(Is.x,Is.y).multiplyScalar(-t/Is.z),Is.set(1,1,.5).applyMatrix4(this.projectionMatrixInverse),i.set(Is.x,Is.y).multiplyScalar(-t/Is.z)}getViewSize(t,e){return this.getViewBounds(t,N_,B_),e.subVectors(B_,N_)}setViewOffset(t,e,i,n,s,o){this.aspect=t/e,this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=this.near;let e=t*Math.tan(Dr*.5*this.fov)/this.zoom,i=2*e,n=this.aspect*i,s=-.5*n;const o=this.view;if(this.view!==null&&this.view.enabled){const h=o.fullWidth,l=o.fullHeight;s+=o.offsetX*n/h,e-=o.offsetY*i/l,n*=o.width/h,i*=o.height/l}const a=this.filmOffset;a!==0&&(s+=t*a/this.getFilmWidth()),this.projectionMatrix.makePerspective(s,s+n,e,e-i,t,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.fov=this.fov,e.object.zoom=this.zoom,e.object.near=this.near,e.object.far=this.far,e.object.focus=this.focus,e.object.aspect=this.aspect,this.view!==null&&(e.object.view=Object.assign({},this.view)),e.object.filmGauge=this.filmGauge,e.object.filmOffset=this.filmOffset,e}}const wo=-90,So=1;class Ov extends pe{constructor(t,e,i){super(),this.type="CubeCamera",this.renderTarget=i,this.coordinateSystem=null,this.activeMipmapLevel=0;const n=new Ye(wo,So,t,e);n.layers=this.layers,this.add(n);const s=new Ye(wo,So,t,e);s.layers=this.layers,this.add(s);const o=new Ye(wo,So,t,e);o.layers=this.layers,this.add(o);const a=new Ye(wo,So,t,e);a.layers=this.layers,this.add(a);const h=new Ye(wo,So,t,e);h.layers=this.layers,this.add(h);const l=new Ye(wo,So,t,e);l.layers=this.layers,this.add(l)}updateCoordinateSystem(){const t=this.coordinateSystem,e=this.children.concat(),[i,n,s,o,a,h]=e;for(const l of e)this.remove(l);if(t===Nn)i.up.set(0,1,0),i.lookAt(1,0,0),n.up.set(0,1,0),n.lookAt(-1,0,0),s.up.set(0,0,-1),s.lookAt(0,1,0),o.up.set(0,0,1),o.lookAt(0,-1,0),a.up.set(0,1,0),a.lookAt(0,0,1),h.up.set(0,1,0),h.lookAt(0,0,-1);else if(t===Rh)i.up.set(0,-1,0),i.lookAt(-1,0,0),n.up.set(0,-1,0),n.lookAt(1,0,0),s.up.set(0,0,1),s.lookAt(0,1,0),o.up.set(0,0,-1),o.lookAt(0,-1,0),a.up.set(0,-1,0),a.lookAt(0,0,1),h.up.set(0,-1,0),h.lookAt(0,0,-1);else throw new Error("THREE.CubeCamera.updateCoordinateSystem(): Invalid coordinate system: "+t);for(const l of e)this.add(l),l.updateMatrixWorld()}update(t,e){this.parent===null&&this.updateMatrixWorld();const{renderTarget:i,activeMipmapLevel:n}=this;this.coordinateSystem!==t.coordinateSystem&&(this.coordinateSystem=t.coordinateSystem,this.updateCoordinateSystem());const[s,o,a,h,l,c]=this.children,u=t.getRenderTarget(),d=t.getActiveCubeFace(),f=t.getActiveMipmapLevel(),p=t.xr.enabled;t.xr.enabled=!1;const _=i.texture.generateMipmaps;i.texture.generateMipmaps=!1,t.setRenderTarget(i,0,n),t.render(e,s),t.setRenderTarget(i,1,n),t.render(e,o),t.setRenderTarget(i,2,n),t.render(e,a),t.setRenderTarget(i,3,n),t.render(e,h),t.setRenderTarget(i,4,n),t.render(e,l),i.texture.generateMipmaps=_,t.setRenderTarget(i,5,n),t.render(e,c),t.setRenderTarget(u,d,f),t.xr.enabled=p,i.texture.needsPMREMUpdate=!0}}class Jh extends Ke{constructor(t,e,i,n,s,o,a,h,l,c){t=t!==void 0?t:[],e=e!==void 0?e:gs,super(t,e,i,n,s,o,a,h,l,c),this.isCubeTexture=!0,this.flipY=!1}get images(){return this.image}set images(t){this.image=t}}class Fv extends En{constructor(t=1,e={}){super(t,t,e),this.isWebGLCubeRenderTarget=!0;const i={width:t,height:t,depth:1},n=[i,i,i,i,i,i];this.texture=new Jh(n,e.mapping,e.wrapS,e.wrapT,e.magFilter,e.minFilter,e.format,e.type,e.anisotropy,e.colorSpace),this.texture.isRenderTargetTexture=!0,this.texture.generateMipmaps=e.generateMipmaps!==void 0?e.generateMipmaps:!1,this.texture.minFilter=e.minFilter!==void 0?e.minFilter:ke}fromEquirectangularTexture(t,e){this.texture.type=e.type,this.texture.colorSpace=e.colorSpace,this.texture.generateMipmaps=e.generateMipmaps,this.texture.minFilter=e.minFilter,this.texture.magFilter=e.magFilter;const i={uniforms:{tEquirect:{value:null}},vertexShader:`

				varying vec3 vWorldDirection;

				vec3 transformDirection( in vec3 dir, in mat4 matrix ) {

					return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );

				}

				void main() {

					vWorldDirection = transformDirection( position, modelMatrix );

					#include <begin_vertex>
					#include <project_vertex>

				}
			`,fragmentShader:`

				uniform sampler2D tEquirect;

				varying vec3 vWorldDirection;

				#include <common>

				void main() {

					vec3 direction = normalize( vWorldDirection );

					vec2 sampleUV = equirectUv( direction );

					gl_FragColor = texture2D( tEquirect, sampleUV );

				}
			`},n=new Js(5,5,5),s=new hn({name:"CubemapFromEquirect",uniforms:ca(i.uniforms),vertexShader:i.vertexShader,fragmentShader:i.fragmentShader,side:wi,blending:ds});s.uniforms.tEquirect.value=e;const o=new ge(n,s),a=e.minFilter;return e.minFilter===Un&&(e.minFilter=ke),new Ov(1,10,this).update(t,o),e.minFilter=a,o.geometry.dispose(),o.material.dispose(),this}clear(t,e,i,n){const s=t.getRenderTarget();for(let o=0;o<6;o++)t.setRenderTarget(this,o),t.clear(e,i,n);t.setRenderTarget(s)}}const Pf=new R,V1=new R,H1=new Zt;class Vs{constructor(t=new R(1,0,0),e=0){this.isPlane=!0,this.normal=t,this.constant=e}set(t,e){return this.normal.copy(t),this.constant=e,this}setComponents(t,e,i,n){return this.normal.set(t,e,i),this.constant=n,this}setFromNormalAndCoplanarPoint(t,e){return this.normal.copy(t),this.constant=-e.dot(this.normal),this}setFromCoplanarPoints(t,e,i){const n=Pf.subVectors(i,e).cross(V1.subVectors(t,e)).normalize();return this.setFromNormalAndCoplanarPoint(n,t),this}copy(t){return this.normal.copy(t.normal),this.constant=t.constant,this}normalize(){const t=1/this.normal.length();return this.normal.multiplyScalar(t),this.constant*=t,this}negate(){return this.constant*=-1,this.normal.negate(),this}distanceToPoint(t){return this.normal.dot(t)+this.constant}distanceToSphere(t){return this.distanceToPoint(t.center)-t.radius}projectPoint(t,e){return e.copy(t).addScaledVector(this.normal,-this.distanceToPoint(t))}intersectLine(t,e){const i=t.delta(Pf),n=this.normal.dot(i);if(n===0)return this.distanceToPoint(t.start)===0?e.copy(t.start):null;const s=-(t.start.dot(this.normal)+this.constant)/n;return s<0||s>1?null:e.copy(t.start).addScaledVector(i,s)}intersectsLine(t){const e=this.distanceToPoint(t.start),i=this.distanceToPoint(t.end);return e<0&&i>0||i<0&&e>0}intersectsBox(t){return t.intersectsPlane(this)}intersectsSphere(t){return t.intersectsPlane(this)}coplanarPoint(t){return t.copy(this.normal).multiplyScalar(-this.constant)}applyMatrix4(t,e){const i=e||H1.getNormalMatrix(t),n=this.coplanarPoint(Pf).applyMatrix4(t),s=this.normal.applyMatrix3(i).normalize();return this.constant=-n.dot(s),this}translate(t){return this.constant-=t.dot(this.normal),this}equals(t){return t.normal.equals(this.normal)&&t.constant===this.constant}clone(){return new this.constructor().copy(this)}}const ar=new He,ql=new R;class Kh{constructor(t=new Vs,e=new Vs,i=new Vs,n=new Vs,s=new Vs,o=new Vs){this.planes=[t,e,i,n,s,o]}set(t,e,i,n,s,o){const a=this.planes;return a[0].copy(t),a[1].copy(e),a[2].copy(i),a[3].copy(n),a[4].copy(s),a[5].copy(o),this}copy(t){const e=this.planes;for(let i=0;i<6;i++)e[i].copy(t.planes[i]);return this}setFromProjectionMatrix(t,e=Nn){const i=this.planes,n=t.elements,s=n[0],o=n[1],a=n[2],h=n[3],l=n[4],c=n[5],u=n[6],d=n[7],f=n[8],p=n[9],_=n[10],g=n[11],m=n[12],x=n[13],y=n[14],v=n[15];if(i[0].setComponents(h-s,d-l,g-f,v-m).normalize(),i[1].setComponents(h+s,d+l,g+f,v+m).normalize(),i[2].setComponents(h+o,d+c,g+p,v+x).normalize(),i[3].setComponents(h-o,d-c,g-p,v-x).normalize(),i[4].setComponents(h-a,d-u,g-_,v-y).normalize(),e===Nn)i[5].setComponents(h+a,d+u,g+_,v+y).normalize();else if(e===Rh)i[5].setComponents(a,u,_,y).normalize();else throw new Error("THREE.Frustum.setFromProjectionMatrix(): Invalid coordinate system: "+e);return this}intersectsObject(t){if(t.boundingSphere!==void 0)t.boundingSphere===null&&t.computeBoundingSphere(),ar.copy(t.boundingSphere).applyMatrix4(t.matrixWorld);else{const e=t.geometry;e.boundingSphere===null&&e.computeBoundingSphere(),ar.copy(e.boundingSphere).applyMatrix4(t.matrixWorld)}return this.intersectsSphere(ar)}intersectsSprite(t){return ar.center.set(0,0,0),ar.radius=.7071067811865476,ar.applyMatrix4(t.matrixWorld),this.intersectsSphere(ar)}intersectsSphere(t){const e=this.planes,i=t.center,n=-t.radius;for(let s=0;s<6;s++)if(e[s].distanceToPoint(i)<n)return!1;return!0}intersectsBox(t){const e=this.planes;for(let i=0;i<6;i++){const n=e[i];if(ql.x=n.normal.x>0?t.max.x:t.min.x,ql.y=n.normal.y>0?t.max.y:t.min.y,ql.z=n.normal.z>0?t.max.z:t.min.z,n.distanceToPoint(ql)<0)return!1}return!0}containsPoint(t){const e=this.planes;for(let i=0;i<6;i++)if(e[i].distanceToPoint(t)<0)return!1;return!0}clone(){return new this.constructor().copy(this)}}function zv(){let r=null,t=!1,e=null,i=null;function n(s,o){e(s,o),i=r.requestAnimationFrame(n)}return{start:function(){t!==!0&&e!==null&&(i=r.requestAnimationFrame(n),t=!0)},stop:function(){r.cancelAnimationFrame(i),t=!1},setAnimationLoop:function(s){e=s},setContext:function(s){r=s}}}function G1(r){const t=new WeakMap;function e(a,h){const l=a.array,c=a.usage,u=l.byteLength,d=r.createBuffer();r.bindBuffer(h,d),r.bufferData(h,l,c),a.onUploadCallback();let f;if(l instanceof Float32Array)f=r.FLOAT;else if(l instanceof Uint16Array)a.isFloat16BufferAttribute?f=r.HALF_FLOAT:f=r.UNSIGNED_SHORT;else if(l instanceof Int16Array)f=r.SHORT;else if(l instanceof Uint32Array)f=r.UNSIGNED_INT;else if(l instanceof Int32Array)f=r.INT;else if(l instanceof Int8Array)f=r.BYTE;else if(l instanceof Uint8Array)f=r.UNSIGNED_BYTE;else if(l instanceof Uint8ClampedArray)f=r.UNSIGNED_BYTE;else throw new Error("THREE.WebGLAttributes: Unsupported buffer data format: "+l);return{buffer:d,type:f,bytesPerElement:l.BYTES_PER_ELEMENT,version:a.version,size:u}}function i(a,h,l){const c=h.array,u=h._updateRange,d=h.updateRanges;if(r.bindBuffer(l,a),u.count===-1&&d.length===0&&r.bufferSubData(l,0,c),d.length!==0){for(let f=0,p=d.length;f<p;f++){const _=d[f];r.bufferSubData(l,_.start*c.BYTES_PER_ELEMENT,c,_.start,_.count)}h.clearUpdateRanges()}u.count!==-1&&(r.bufferSubData(l,u.offset*c.BYTES_PER_ELEMENT,c,u.offset,u.count),u.count=-1),h.onUploadCallback()}function n(a){return a.isInterleavedBufferAttribute&&(a=a.data),t.get(a)}function s(a){a.isInterleavedBufferAttribute&&(a=a.data);const h=t.get(a);h&&(r.deleteBuffer(h.buffer),t.delete(a))}function o(a,h){if(a.isInterleavedBufferAttribute&&(a=a.data),a.isGLBufferAttribute){const c=t.get(a);(!c||c.version<a.version)&&t.set(a,{buffer:a.buffer,type:a.type,bytesPerElement:a.elementSize,version:a.version});return}const l=t.get(a);if(l===void 0)t.set(a,e(a,h));else if(l.version<a.version){if(l.size!==a.array.byteLength)throw new Error("THREE.WebGLAttributes: The size of the buffer attribute's array buffer does not match the original size. Resizing buffer attributes is not supported.");i(l.buffer,a,h),l.version=a.version}}return{get:n,remove:s,update:o}}let _a=class Uv extends Xt{constructor(t=1,e=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n};const s=t/2,o=e/2,a=Math.floor(i),h=Math.floor(n),l=a+1,c=h+1,u=t/a,d=e/h,f=[],p=[],_=[],g=[];for(let m=0;m<c;m++){const x=m*d-o;for(let y=0;y<l;y++){const v=y*u-s;p.push(v,-x,0),_.push(0,0,1),g.push(y/a),g.push(1-m/h)}}for(let m=0;m<h;m++)for(let x=0;x<a;x++){const y=x+l*m,v=x+l*(m+1),E=x+1+l*(m+1),b=x+1+l*m;f.push(y,v,b),f.push(v,E,b)}this.setIndex(f),this.setAttribute("position",new Tt(p,3)),this.setAttribute("normal",new Tt(_,3)),this.setAttribute("uv",new Tt(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Uv(t.width,t.height,t.widthSegments,t.heightSegments)}};var W1=`#ifdef USE_ALPHAHASH
	if ( diffuseColor.a < getAlphaHashThreshold( vPosition ) ) discard;
#endif`,$1=`#ifdef USE_ALPHAHASH
	const float ALPHA_HASH_SCALE = 0.05;
	float hash2D( vec2 value ) {
		return fract( 1.0e4 * sin( 17.0 * value.x + 0.1 * value.y ) * ( 0.1 + abs( sin( 13.0 * value.y + value.x ) ) ) );
	}
	float hash3D( vec3 value ) {
		return hash2D( vec2( hash2D( value.xy ), value.z ) );
	}
	float getAlphaHashThreshold( vec3 position ) {
		float maxDeriv = max(
			length( dFdx( position.xyz ) ),
			length( dFdy( position.xyz ) )
		);
		float pixScale = 1.0 / ( ALPHA_HASH_SCALE * maxDeriv );
		vec2 pixScales = vec2(
			exp2( floor( log2( pixScale ) ) ),
			exp2( ceil( log2( pixScale ) ) )
		);
		vec2 alpha = vec2(
			hash3D( floor( pixScales.x * position.xyz ) ),
			hash3D( floor( pixScales.y * position.xyz ) )
		);
		float lerpFactor = fract( log2( pixScale ) );
		float x = ( 1.0 - lerpFactor ) * alpha.x + lerpFactor * alpha.y;
		float a = min( lerpFactor, 1.0 - lerpFactor );
		vec3 cases = vec3(
			x * x / ( 2.0 * a * ( 1.0 - a ) ),
			( x - 0.5 * a ) / ( 1.0 - a ),
			1.0 - ( ( 1.0 - x ) * ( 1.0 - x ) / ( 2.0 * a * ( 1.0 - a ) ) )
		);
		float threshold = ( x < ( 1.0 - a ) )
			? ( ( x < a ) ? cases.x : cases.y )
			: cases.z;
		return clamp( threshold , 1.0e-6, 1.0 );
	}
#endif`,X1=`#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, vAlphaMapUv ).g;
#endif`,q1=`#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,Y1=`#ifdef USE_ALPHATEST
	#ifdef ALPHA_TO_COVERAGE
	diffuseColor.a = smoothstep( alphaTest, alphaTest + fwidth( diffuseColor.a ), diffuseColor.a );
	if ( diffuseColor.a == 0.0 ) discard;
	#else
	if ( diffuseColor.a < alphaTest ) discard;
	#endif
#endif`,Z1=`#ifdef USE_ALPHATEST
	uniform float alphaTest;
#endif`,J1=`#ifdef USE_AOMAP
	float ambientOcclusion = ( texture2D( aoMap, vAoMapUv ).r - 1.0 ) * aoMapIntensity + 1.0;
	reflectedLight.indirectDiffuse *= ambientOcclusion;
	#if defined( USE_CLEARCOAT ) 
		clearcoatSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_SHEEN ) 
		sheenSpecularIndirect *= ambientOcclusion;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD )
		float dotNV = saturate( dot( geometryNormal, geometryViewDir ) );
		reflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.roughness );
	#endif
#endif`,K1=`#ifdef USE_AOMAP
	uniform sampler2D aoMap;
	uniform float aoMapIntensity;
#endif`,j1=`#ifdef USE_BATCHING
	#if ! defined( GL_ANGLE_multi_draw )
	#define gl_DrawID _gl_DrawID
	uniform int _gl_DrawID;
	#endif
	uniform highp sampler2D batchingTexture;
	uniform highp usampler2D batchingIdTexture;
	mat4 getBatchingMatrix( const in float i ) {
		int size = textureSize( batchingTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( batchingTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( batchingTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( batchingTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( batchingTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
	float getIndirectIndex( const in int i ) {
		int size = textureSize( batchingIdTexture, 0 ).x;
		int x = i % size;
		int y = i / size;
		return float( texelFetch( batchingIdTexture, ivec2( x, y ), 0 ).r );
	}
#endif
#ifdef USE_BATCHING_COLOR
	uniform sampler2D batchingColorTexture;
	vec3 getBatchingColor( const in float i ) {
		int size = textureSize( batchingColorTexture, 0 ).x;
		int j = int( i );
		int x = j % size;
		int y = j / size;
		return texelFetch( batchingColorTexture, ivec2( x, y ), 0 ).rgb;
	}
#endif`,Q1=`#ifdef USE_BATCHING
	mat4 batchingMatrix = getBatchingMatrix( getIndirectIndex( gl_DrawID ) );
#endif`,tS=`vec3 transformed = vec3( position );
#ifdef USE_ALPHAHASH
	vPosition = vec3( position );
#endif`,eS=`vec3 objectNormal = vec3( normal );
#ifdef USE_TANGENT
	vec3 objectTangent = vec3( tangent.xyz );
#endif`,iS=`float G_BlinnPhong_Implicit( ) {
	return 0.25;
}
float D_BlinnPhong( const in float shininess, const in float dotNH ) {
	return RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );
}
vec3 BRDF_BlinnPhong( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float shininess ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( specularColor, 1.0, dotVH );
	float G = G_BlinnPhong_Implicit( );
	float D = D_BlinnPhong( shininess, dotNH );
	return F * ( G * D );
} // validated`,nS=`#ifdef USE_IRIDESCENCE
	const mat3 XYZ_TO_REC709 = mat3(
		 3.2404542, -0.9692660,  0.0556434,
		-1.5371385,  1.8760108, -0.2040259,
		-0.4985314,  0.0415560,  1.0572252
	);
	vec3 Fresnel0ToIor( vec3 fresnel0 ) {
		vec3 sqrtF0 = sqrt( fresnel0 );
		return ( vec3( 1.0 ) + sqrtF0 ) / ( vec3( 1.0 ) - sqrtF0 );
	}
	vec3 IorToFresnel0( vec3 transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - vec3( incidentIor ) ) / ( transmittedIor + vec3( incidentIor ) ) );
	}
	float IorToFresnel0( float transmittedIor, float incidentIor ) {
		return pow2( ( transmittedIor - incidentIor ) / ( transmittedIor + incidentIor ));
	}
	vec3 evalSensitivity( float OPD, vec3 shift ) {
		float phase = 2.0 * PI * OPD * 1.0e-9;
		vec3 val = vec3( 5.4856e-13, 4.4201e-13, 5.2481e-13 );
		vec3 pos = vec3( 1.6810e+06, 1.7953e+06, 2.2084e+06 );
		vec3 var = vec3( 4.3278e+09, 9.3046e+09, 6.6121e+09 );
		vec3 xyz = val * sqrt( 2.0 * PI * var ) * cos( pos * phase + shift ) * exp( - pow2( phase ) * var );
		xyz.x += 9.7470e-14 * sqrt( 2.0 * PI * 4.5282e+09 ) * cos( 2.2399e+06 * phase + shift[ 0 ] ) * exp( - 4.5282e+09 * pow2( phase ) );
		xyz /= 1.0685e-7;
		vec3 rgb = XYZ_TO_REC709 * xyz;
		return rgb;
	}
	vec3 evalIridescence( float outsideIOR, float eta2, float cosTheta1, float thinFilmThickness, vec3 baseF0 ) {
		vec3 I;
		float iridescenceIOR = mix( outsideIOR, eta2, smoothstep( 0.0, 0.03, thinFilmThickness ) );
		float sinTheta2Sq = pow2( outsideIOR / iridescenceIOR ) * ( 1.0 - pow2( cosTheta1 ) );
		float cosTheta2Sq = 1.0 - sinTheta2Sq;
		if ( cosTheta2Sq < 0.0 ) {
			return vec3( 1.0 );
		}
		float cosTheta2 = sqrt( cosTheta2Sq );
		float R0 = IorToFresnel0( iridescenceIOR, outsideIOR );
		float R12 = F_Schlick( R0, 1.0, cosTheta1 );
		float T121 = 1.0 - R12;
		float phi12 = 0.0;
		if ( iridescenceIOR < outsideIOR ) phi12 = PI;
		float phi21 = PI - phi12;
		vec3 baseIOR = Fresnel0ToIor( clamp( baseF0, 0.0, 0.9999 ) );		vec3 R1 = IorToFresnel0( baseIOR, iridescenceIOR );
		vec3 R23 = F_Schlick( R1, 1.0, cosTheta2 );
		vec3 phi23 = vec3( 0.0 );
		if ( baseIOR[ 0 ] < iridescenceIOR ) phi23[ 0 ] = PI;
		if ( baseIOR[ 1 ] < iridescenceIOR ) phi23[ 1 ] = PI;
		if ( baseIOR[ 2 ] < iridescenceIOR ) phi23[ 2 ] = PI;
		float OPD = 2.0 * iridescenceIOR * thinFilmThickness * cosTheta2;
		vec3 phi = vec3( phi21 ) + phi23;
		vec3 R123 = clamp( R12 * R23, 1e-5, 0.9999 );
		vec3 r123 = sqrt( R123 );
		vec3 Rs = pow2( T121 ) * R23 / ( vec3( 1.0 ) - R123 );
		vec3 C0 = R12 + Rs;
		I = C0;
		vec3 Cm = Rs - T121;
		for ( int m = 1; m <= 2; ++ m ) {
			Cm *= r123;
			vec3 Sm = 2.0 * evalSensitivity( float( m ) * OPD, float( m ) * phi );
			I += Cm * Sm;
		}
		return max( I, vec3( 0.0 ) );
	}
#endif`,sS=`#ifdef USE_BUMPMAP
	uniform sampler2D bumpMap;
	uniform float bumpScale;
	vec2 dHdxy_fwd() {
		vec2 dSTdx = dFdx( vBumpMapUv );
		vec2 dSTdy = dFdy( vBumpMapUv );
		float Hll = bumpScale * texture2D( bumpMap, vBumpMapUv ).x;
		float dBx = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdx ).x - Hll;
		float dBy = bumpScale * texture2D( bumpMap, vBumpMapUv + dSTdy ).x - Hll;
		return vec2( dBx, dBy );
	}
	vec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {
		vec3 vSigmaX = normalize( dFdx( surf_pos.xyz ) );
		vec3 vSigmaY = normalize( dFdy( surf_pos.xyz ) );
		vec3 vN = surf_norm;
		vec3 R1 = cross( vSigmaY, vN );
		vec3 R2 = cross( vN, vSigmaX );
		float fDet = dot( vSigmaX, R1 ) * faceDirection;
		vec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );
		return normalize( abs( fDet ) * surf_norm - vGrad );
	}
#endif`,rS=`#if NUM_CLIPPING_PLANES > 0
	vec4 plane;
	#ifdef ALPHA_TO_COVERAGE
		float distanceToPlane, distanceGradient;
		float clipOpacity = 1.0;
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
			distanceGradient = fwidth( distanceToPlane ) / 2.0;
			clipOpacity *= smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			if ( clipOpacity == 0.0 ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			float unionClipOpacity = 1.0;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				distanceToPlane = - dot( vClipPosition, plane.xyz ) + plane.w;
				distanceGradient = fwidth( distanceToPlane ) / 2.0;
				unionClipOpacity *= 1.0 - smoothstep( - distanceGradient, distanceGradient, distanceToPlane );
			}
			#pragma unroll_loop_end
			clipOpacity *= 1.0 - unionClipOpacity;
		#endif
		diffuseColor.a *= clipOpacity;
		if ( diffuseColor.a == 0.0 ) discard;
	#else
		#pragma unroll_loop_start
		for ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {
			plane = clippingPlanes[ i ];
			if ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;
		}
		#pragma unroll_loop_end
		#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES
			bool clipped = true;
			#pragma unroll_loop_start
			for ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {
				plane = clippingPlanes[ i ];
				clipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;
			}
			#pragma unroll_loop_end
			if ( clipped ) discard;
		#endif
	#endif
#endif`,oS=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
	uniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];
#endif`,aS=`#if NUM_CLIPPING_PLANES > 0
	varying vec3 vClipPosition;
#endif`,hS=`#if NUM_CLIPPING_PLANES > 0
	vClipPosition = - mvPosition.xyz;
#endif`,lS=`#if defined( USE_COLOR_ALPHA )
	diffuseColor *= vColor;
#elif defined( USE_COLOR )
	diffuseColor.rgb *= vColor;
#endif`,cS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR )
	varying vec3 vColor;
#endif`,uS=`#if defined( USE_COLOR_ALPHA )
	varying vec4 vColor;
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	varying vec3 vColor;
#endif`,dS=`#if defined( USE_COLOR_ALPHA )
	vColor = vec4( 1.0 );
#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR ) || defined( USE_BATCHING_COLOR )
	vColor = vec3( 1.0 );
#endif
#ifdef USE_COLOR
	vColor *= color;
#endif
#ifdef USE_INSTANCING_COLOR
	vColor.xyz *= instanceColor.xyz;
#endif
#ifdef USE_BATCHING_COLOR
	vec3 batchingColor = getBatchingColor( getIndirectIndex( gl_DrawID ) );
	vColor.xyz *= batchingColor.xyz;
#endif`,fS=`#define PI 3.141592653589793
#define PI2 6.283185307179586
#define PI_HALF 1.5707963267948966
#define RECIPROCAL_PI 0.3183098861837907
#define RECIPROCAL_PI2 0.15915494309189535
#define EPSILON 1e-6
#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
#define whiteComplement( a ) ( 1.0 - saturate( a ) )
float pow2( const in float x ) { return x*x; }
vec3 pow2( const in vec3 x ) { return x*x; }
float pow3( const in float x ) { return x*x*x; }
float pow4( const in float x ) { float x2 = x*x; return x2*x2; }
float max3( const in vec3 v ) { return max( max( v.x, v.y ), v.z ); }
float average( const in vec3 v ) { return dot( v, vec3( 0.3333333 ) ); }
highp float rand( const in vec2 uv ) {
	const highp float a = 12.9898, b = 78.233, c = 43758.5453;
	highp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );
	return fract( sin( sn ) * c );
}
#ifdef HIGH_PRECISION
	float precisionSafeLength( vec3 v ) { return length( v ); }
#else
	float precisionSafeLength( vec3 v ) {
		float maxComponent = max3( abs( v ) );
		return length( v / maxComponent ) * maxComponent;
	}
#endif
struct IncidentLight {
	vec3 color;
	vec3 direction;
	bool visible;
};
struct ReflectedLight {
	vec3 directDiffuse;
	vec3 directSpecular;
	vec3 indirectDiffuse;
	vec3 indirectSpecular;
};
#ifdef USE_ALPHAHASH
	varying vec3 vPosition;
#endif
vec3 transformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );
}
vec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {
	return normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );
}
mat3 transposeMat3( const in mat3 m ) {
	mat3 tmp;
	tmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );
	tmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );
	tmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );
	return tmp;
}
bool isPerspectiveMatrix( mat4 m ) {
	return m[ 2 ][ 3 ] == - 1.0;
}
vec2 equirectUv( in vec3 dir ) {
	float u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;
	float v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;
	return vec2( u, v );
}
vec3 BRDF_Lambert( const in vec3 diffuseColor ) {
	return RECIPROCAL_PI * diffuseColor;
}
vec3 F_Schlick( const in vec3 f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
}
float F_Schlick( const in float f0, const in float f90, const in float dotVH ) {
	float fresnel = exp2( ( - 5.55473 * dotVH - 6.98316 ) * dotVH );
	return f0 * ( 1.0 - fresnel ) + ( f90 * fresnel );
} // validated`,pS=`#ifdef ENVMAP_TYPE_CUBE_UV
	#define cubeUV_minMipLevel 4.0
	#define cubeUV_minTileSize 16.0
	float getFace( vec3 direction ) {
		vec3 absDirection = abs( direction );
		float face = - 1.0;
		if ( absDirection.x > absDirection.z ) {
			if ( absDirection.x > absDirection.y )
				face = direction.x > 0.0 ? 0.0 : 3.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		} else {
			if ( absDirection.z > absDirection.y )
				face = direction.z > 0.0 ? 2.0 : 5.0;
			else
				face = direction.y > 0.0 ? 1.0 : 4.0;
		}
		return face;
	}
	vec2 getUV( vec3 direction, float face ) {
		vec2 uv;
		if ( face == 0.0 ) {
			uv = vec2( direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 1.0 ) {
			uv = vec2( - direction.x, - direction.z ) / abs( direction.y );
		} else if ( face == 2.0 ) {
			uv = vec2( - direction.x, direction.y ) / abs( direction.z );
		} else if ( face == 3.0 ) {
			uv = vec2( - direction.z, direction.y ) / abs( direction.x );
		} else if ( face == 4.0 ) {
			uv = vec2( - direction.x, direction.z ) / abs( direction.y );
		} else {
			uv = vec2( direction.x, direction.y ) / abs( direction.z );
		}
		return 0.5 * ( uv + 1.0 );
	}
	vec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {
		float face = getFace( direction );
		float filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );
		mipInt = max( mipInt, cubeUV_minMipLevel );
		float faceSize = exp2( mipInt );
		highp vec2 uv = getUV( direction, face ) * ( faceSize - 2.0 ) + 1.0;
		if ( face > 2.0 ) {
			uv.y += faceSize;
			face -= 3.0;
		}
		uv.x += face * faceSize;
		uv.x += filterInt * 3.0 * cubeUV_minTileSize;
		uv.y += 4.0 * ( exp2( CUBEUV_MAX_MIP ) - faceSize );
		uv.x *= CUBEUV_TEXEL_WIDTH;
		uv.y *= CUBEUV_TEXEL_HEIGHT;
		#ifdef texture2DGradEXT
			return texture2DGradEXT( envMap, uv, vec2( 0.0 ), vec2( 0.0 ) ).rgb;
		#else
			return texture2D( envMap, uv ).rgb;
		#endif
	}
	#define cubeUV_r0 1.0
	#define cubeUV_m0 - 2.0
	#define cubeUV_r1 0.8
	#define cubeUV_m1 - 1.0
	#define cubeUV_r4 0.4
	#define cubeUV_m4 2.0
	#define cubeUV_r5 0.305
	#define cubeUV_m5 3.0
	#define cubeUV_r6 0.21
	#define cubeUV_m6 4.0
	float roughnessToMip( float roughness ) {
		float mip = 0.0;
		if ( roughness >= cubeUV_r1 ) {
			mip = ( cubeUV_r0 - roughness ) * ( cubeUV_m1 - cubeUV_m0 ) / ( cubeUV_r0 - cubeUV_r1 ) + cubeUV_m0;
		} else if ( roughness >= cubeUV_r4 ) {
			mip = ( cubeUV_r1 - roughness ) * ( cubeUV_m4 - cubeUV_m1 ) / ( cubeUV_r1 - cubeUV_r4 ) + cubeUV_m1;
		} else if ( roughness >= cubeUV_r5 ) {
			mip = ( cubeUV_r4 - roughness ) * ( cubeUV_m5 - cubeUV_m4 ) / ( cubeUV_r4 - cubeUV_r5 ) + cubeUV_m4;
		} else if ( roughness >= cubeUV_r6 ) {
			mip = ( cubeUV_r5 - roughness ) * ( cubeUV_m6 - cubeUV_m5 ) / ( cubeUV_r5 - cubeUV_r6 ) + cubeUV_m5;
		} else {
			mip = - 2.0 * log2( 1.16 * roughness );		}
		return mip;
	}
	vec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {
		float mip = clamp( roughnessToMip( roughness ), cubeUV_m0, CUBEUV_MAX_MIP );
		float mipF = fract( mip );
		float mipInt = floor( mip );
		vec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );
		if ( mipF == 0.0 ) {
			return vec4( color0, 1.0 );
		} else {
			vec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );
			return vec4( mix( color0, color1, mipF ), 1.0 );
		}
	}
#endif`,mS=`vec3 transformedNormal = objectNormal;
#ifdef USE_TANGENT
	vec3 transformedTangent = objectTangent;
#endif
#ifdef USE_BATCHING
	mat3 bm = mat3( batchingMatrix );
	transformedNormal /= vec3( dot( bm[ 0 ], bm[ 0 ] ), dot( bm[ 1 ], bm[ 1 ] ), dot( bm[ 2 ], bm[ 2 ] ) );
	transformedNormal = bm * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = bm * transformedTangent;
	#endif
#endif
#ifdef USE_INSTANCING
	mat3 im = mat3( instanceMatrix );
	transformedNormal /= vec3( dot( im[ 0 ], im[ 0 ] ), dot( im[ 1 ], im[ 1 ] ), dot( im[ 2 ], im[ 2 ] ) );
	transformedNormal = im * transformedNormal;
	#ifdef USE_TANGENT
		transformedTangent = im * transformedTangent;
	#endif
#endif
transformedNormal = normalMatrix * transformedNormal;
#ifdef FLIP_SIDED
	transformedNormal = - transformedNormal;
#endif
#ifdef USE_TANGENT
	transformedTangent = ( modelViewMatrix * vec4( transformedTangent, 0.0 ) ).xyz;
	#ifdef FLIP_SIDED
		transformedTangent = - transformedTangent;
	#endif
#endif`,gS=`#ifdef USE_DISPLACEMENTMAP
	uniform sampler2D displacementMap;
	uniform float displacementScale;
	uniform float displacementBias;
#endif`,_S=`#ifdef USE_DISPLACEMENTMAP
	transformed += normalize( objectNormal ) * ( texture2D( displacementMap, vDisplacementMapUv ).x * displacementScale + displacementBias );
#endif`,yS=`#ifdef USE_EMISSIVEMAP
	vec4 emissiveColor = texture2D( emissiveMap, vEmissiveMapUv );
	totalEmissiveRadiance *= emissiveColor.rgb;
#endif`,xS=`#ifdef USE_EMISSIVEMAP
	uniform sampler2D emissiveMap;
#endif`,vS="gl_FragColor = linearToOutputTexel( gl_FragColor );",bS=`
const mat3 LINEAR_SRGB_TO_LINEAR_DISPLAY_P3 = mat3(
	vec3( 0.8224621, 0.177538, 0.0 ),
	vec3( 0.0331941, 0.9668058, 0.0 ),
	vec3( 0.0170827, 0.0723974, 0.9105199 )
);
const mat3 LINEAR_DISPLAY_P3_TO_LINEAR_SRGB = mat3(
	vec3( 1.2249401, - 0.2249404, 0.0 ),
	vec3( - 0.0420569, 1.0420571, 0.0 ),
	vec3( - 0.0196376, - 0.0786361, 1.0982735 )
);
vec4 LinearSRGBToLinearDisplayP3( in vec4 value ) {
	return vec4( value.rgb * LINEAR_SRGB_TO_LINEAR_DISPLAY_P3, value.a );
}
vec4 LinearDisplayP3ToLinearSRGB( in vec4 value ) {
	return vec4( value.rgb * LINEAR_DISPLAY_P3_TO_LINEAR_SRGB, value.a );
}
vec4 LinearTransferOETF( in vec4 value ) {
	return value;
}
vec4 sRGBTransferOETF( in vec4 value ) {
	return vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );
}`,MS=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vec3 cameraToFrag;
		if ( isOrthographic ) {
			cameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToFrag = normalize( vWorldPosition - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vec3 reflectVec = reflect( cameraToFrag, worldNormal );
		#else
			vec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );
		#endif
	#else
		vec3 reflectVec = vReflect;
	#endif
	#ifdef ENVMAP_TYPE_CUBE
		vec4 envColor = textureCube( envMap, envMapRotation * vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );
	#else
		vec4 envColor = vec4( 0.0 );
	#endif
	#ifdef ENVMAP_BLENDING_MULTIPLY
		outgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_MIX )
		outgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );
	#elif defined( ENVMAP_BLENDING_ADD )
		outgoingLight += envColor.xyz * specularStrength * reflectivity;
	#endif
#endif`,wS=`#ifdef USE_ENVMAP
	uniform float envMapIntensity;
	uniform float flipEnvMap;
	uniform mat3 envMapRotation;
	#ifdef ENVMAP_TYPE_CUBE
		uniform samplerCube envMap;
	#else
		uniform sampler2D envMap;
	#endif
	
#endif`,SS=`#ifdef USE_ENVMAP
	uniform float reflectivity;
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		varying vec3 vWorldPosition;
		uniform float refractionRatio;
	#else
		varying vec3 vReflect;
	#endif
#endif`,AS=`#ifdef USE_ENVMAP
	#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG ) || defined( LAMBERT )
		#define ENV_WORLDPOS
	#endif
	#ifdef ENV_WORLDPOS
		
		varying vec3 vWorldPosition;
	#else
		varying vec3 vReflect;
		uniform float refractionRatio;
	#endif
#endif`,ES=`#ifdef USE_ENVMAP
	#ifdef ENV_WORLDPOS
		vWorldPosition = worldPosition.xyz;
	#else
		vec3 cameraToVertex;
		if ( isOrthographic ) {
			cameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );
		} else {
			cameraToVertex = normalize( worldPosition.xyz - cameraPosition );
		}
		vec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
		#ifdef ENVMAP_MODE_REFLECTION
			vReflect = reflect( cameraToVertex, worldNormal );
		#else
			vReflect = refract( cameraToVertex, worldNormal, refractionRatio );
		#endif
	#endif
#endif`,TS=`#ifdef USE_FOG
	vFogDepth = - mvPosition.z;
#endif`,CS=`#ifdef USE_FOG
	varying float vFogDepth;
#endif`,RS=`#ifdef USE_FOG
	#ifdef FOG_EXP2
		float fogFactor = 1.0 - exp( - fogDensity * fogDensity * vFogDepth * vFogDepth );
	#else
		float fogFactor = smoothstep( fogNear, fogFar, vFogDepth );
	#endif
	gl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );
#endif`,PS=`#ifdef USE_FOG
	uniform vec3 fogColor;
	varying float vFogDepth;
	#ifdef FOG_EXP2
		uniform float fogDensity;
	#else
		uniform float fogNear;
		uniform float fogFar;
	#endif
#endif`,IS=`#ifdef USE_GRADIENTMAP
	uniform sampler2D gradientMap;
#endif
vec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {
	float dotNL = dot( normal, lightDirection );
	vec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );
	#ifdef USE_GRADIENTMAP
		return vec3( texture2D( gradientMap, coord ).r );
	#else
		vec2 fw = fwidth( coord ) * 0.5;
		return mix( vec3( 0.7 ), vec3( 1.0 ), smoothstep( 0.7 - fw.x, 0.7 + fw.x, coord.x ) );
	#endif
}`,LS=`#ifdef USE_LIGHTMAP
	uniform sampler2D lightMap;
	uniform float lightMapIntensity;
#endif`,DS=`LambertMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularStrength = specularStrength;`,OS=`varying vec3 vViewPosition;
struct LambertMaterial {
	vec3 diffuseColor;
	float specularStrength;
};
void RE_Direct_Lambert( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Lambert( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in LambertMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Lambert
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Lambert`,FS=`uniform bool receiveShadow;
uniform vec3 ambientLightColor;
#if defined( USE_LIGHT_PROBES )
	uniform vec3 lightProbe[ 9 ];
#endif
vec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {
	float x = normal.x, y = normal.y, z = normal.z;
	vec3 result = shCoefficients[ 0 ] * 0.886227;
	result += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;
	result += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;
	result += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;
	result += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;
	result += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;
	result += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );
	result += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;
	result += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );
	return result;
}
vec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in vec3 normal ) {
	vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
	vec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );
	return irradiance;
}
vec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {
	vec3 irradiance = ambientLightColor;
	return irradiance;
}
float getDistanceAttenuation( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {
	float distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );
	if ( cutoffDistance > 0.0 ) {
		distanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );
	}
	return distanceFalloff;
}
float getSpotAttenuation( const in float coneCosine, const in float penumbraCosine, const in float angleCosine ) {
	return smoothstep( coneCosine, penumbraCosine, angleCosine );
}
#if NUM_DIR_LIGHTS > 0
	struct DirectionalLight {
		vec3 direction;
		vec3 color;
	};
	uniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];
	void getDirectionalLightInfo( const in DirectionalLight directionalLight, out IncidentLight light ) {
		light.color = directionalLight.color;
		light.direction = directionalLight.direction;
		light.visible = true;
	}
#endif
#if NUM_POINT_LIGHTS > 0
	struct PointLight {
		vec3 position;
		vec3 color;
		float distance;
		float decay;
	};
	uniform PointLight pointLights[ NUM_POINT_LIGHTS ];
	void getPointLightInfo( const in PointLight pointLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = pointLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float lightDistance = length( lVector );
		light.color = pointLight.color;
		light.color *= getDistanceAttenuation( lightDistance, pointLight.distance, pointLight.decay );
		light.visible = ( light.color != vec3( 0.0 ) );
	}
#endif
#if NUM_SPOT_LIGHTS > 0
	struct SpotLight {
		vec3 position;
		vec3 direction;
		vec3 color;
		float distance;
		float decay;
		float coneCos;
		float penumbraCos;
	};
	uniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];
	void getSpotLightInfo( const in SpotLight spotLight, const in vec3 geometryPosition, out IncidentLight light ) {
		vec3 lVector = spotLight.position - geometryPosition;
		light.direction = normalize( lVector );
		float angleCos = dot( light.direction, spotLight.direction );
		float spotAttenuation = getSpotAttenuation( spotLight.coneCos, spotLight.penumbraCos, angleCos );
		if ( spotAttenuation > 0.0 ) {
			float lightDistance = length( lVector );
			light.color = spotLight.color * spotAttenuation;
			light.color *= getDistanceAttenuation( lightDistance, spotLight.distance, spotLight.decay );
			light.visible = ( light.color != vec3( 0.0 ) );
		} else {
			light.color = vec3( 0.0 );
			light.visible = false;
		}
	}
#endif
#if NUM_RECT_AREA_LIGHTS > 0
	struct RectAreaLight {
		vec3 color;
		vec3 position;
		vec3 halfWidth;
		vec3 halfHeight;
	};
	uniform sampler2D ltc_1;	uniform sampler2D ltc_2;
	uniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];
#endif
#if NUM_HEMI_LIGHTS > 0
	struct HemisphereLight {
		vec3 direction;
		vec3 skyColor;
		vec3 groundColor;
	};
	uniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];
	vec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in vec3 normal ) {
		float dotNL = dot( normal, hemiLight.direction );
		float hemiDiffuseWeight = 0.5 * dotNL + 0.5;
		vec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );
		return irradiance;
	}
#endif`,zS=`#ifdef USE_ENVMAP
	vec3 getIBLIrradiance( const in vec3 normal ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 worldNormal = inverseTransformDirection( normal, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * worldNormal, 1.0 );
			return PI * envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	vec3 getIBLRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness ) {
		#ifdef ENVMAP_TYPE_CUBE_UV
			vec3 reflectVec = reflect( - viewDir, normal );
			reflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );
			reflectVec = inverseTransformDirection( reflectVec, viewMatrix );
			vec4 envMapColor = textureCubeUV( envMap, envMapRotation * reflectVec, roughness );
			return envMapColor.rgb * envMapIntensity;
		#else
			return vec3( 0.0 );
		#endif
	}
	#ifdef USE_ANISOTROPY
		vec3 getIBLAnisotropyRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in vec3 bitangent, const in float anisotropy ) {
			#ifdef ENVMAP_TYPE_CUBE_UV
				vec3 bentNormal = cross( bitangent, viewDir );
				bentNormal = normalize( cross( bentNormal, bitangent ) );
				bentNormal = normalize( mix( bentNormal, normal, pow2( pow2( 1.0 - anisotropy * ( 1.0 - roughness ) ) ) ) );
				return getIBLRadiance( viewDir, bentNormal, roughness );
			#else
				return vec3( 0.0 );
			#endif
		}
	#endif
#endif`,US=`ToonMaterial material;
material.diffuseColor = diffuseColor.rgb;`,NS=`varying vec3 vViewPosition;
struct ToonMaterial {
	vec3 diffuseColor;
};
void RE_Direct_Toon( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	vec3 irradiance = getGradientIrradiance( geometryNormal, directLight.direction ) * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_Toon
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Toon`,BS=`BlinnPhongMaterial material;
material.diffuseColor = diffuseColor.rgb;
material.specularColor = specular;
material.specularShininess = shininess;
material.specularStrength = specularStrength;`,kS=`varying vec3 vViewPosition;
struct BlinnPhongMaterial {
	vec3 diffuseColor;
	vec3 specularColor;
	float specularShininess;
	float specularStrength;
};
void RE_Direct_BlinnPhong( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
	reflectedLight.directSpecular += irradiance * BRDF_BlinnPhong( directLight.direction, geometryViewDir, geometryNormal, material.specularColor, material.specularShininess ) * material.specularStrength;
}
void RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
#define RE_Direct				RE_Direct_BlinnPhong
#define RE_IndirectDiffuse		RE_IndirectDiffuse_BlinnPhong`,VS=`PhysicalMaterial material;
material.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );
vec3 dxy = max( abs( dFdx( nonPerturbedNormal ) ), abs( dFdy( nonPerturbedNormal ) ) );
float geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );
material.roughness = max( roughnessFactor, 0.0525 );material.roughness += geometryRoughness;
material.roughness = min( material.roughness, 1.0 );
#ifdef IOR
	material.ior = ior;
	#ifdef USE_SPECULAR
		float specularIntensityFactor = specularIntensity;
		vec3 specularColorFactor = specularColor;
		#ifdef USE_SPECULAR_COLORMAP
			specularColorFactor *= texture2D( specularColorMap, vSpecularColorMapUv ).rgb;
		#endif
		#ifdef USE_SPECULAR_INTENSITYMAP
			specularIntensityFactor *= texture2D( specularIntensityMap, vSpecularIntensityMapUv ).a;
		#endif
		material.specularF90 = mix( specularIntensityFactor, 1.0, metalnessFactor );
	#else
		float specularIntensityFactor = 1.0;
		vec3 specularColorFactor = vec3( 1.0 );
		material.specularF90 = 1.0;
	#endif
	material.specularColor = mix( min( pow2( ( material.ior - 1.0 ) / ( material.ior + 1.0 ) ) * specularColorFactor, vec3( 1.0 ) ) * specularIntensityFactor, diffuseColor.rgb, metalnessFactor );
#else
	material.specularColor = mix( vec3( 0.04 ), diffuseColor.rgb, metalnessFactor );
	material.specularF90 = 1.0;
#endif
#ifdef USE_CLEARCOAT
	material.clearcoat = clearcoat;
	material.clearcoatRoughness = clearcoatRoughness;
	material.clearcoatF0 = vec3( 0.04 );
	material.clearcoatF90 = 1.0;
	#ifdef USE_CLEARCOATMAP
		material.clearcoat *= texture2D( clearcoatMap, vClearcoatMapUv ).x;
	#endif
	#ifdef USE_CLEARCOAT_ROUGHNESSMAP
		material.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vClearcoatRoughnessMapUv ).y;
	#endif
	material.clearcoat = saturate( material.clearcoat );	material.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );
	material.clearcoatRoughness += geometryRoughness;
	material.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );
#endif
#ifdef USE_DISPERSION
	material.dispersion = dispersion;
#endif
#ifdef USE_IRIDESCENCE
	material.iridescence = iridescence;
	material.iridescenceIOR = iridescenceIOR;
	#ifdef USE_IRIDESCENCEMAP
		material.iridescence *= texture2D( iridescenceMap, vIridescenceMapUv ).r;
	#endif
	#ifdef USE_IRIDESCENCE_THICKNESSMAP
		material.iridescenceThickness = (iridescenceThicknessMaximum - iridescenceThicknessMinimum) * texture2D( iridescenceThicknessMap, vIridescenceThicknessMapUv ).g + iridescenceThicknessMinimum;
	#else
		material.iridescenceThickness = iridescenceThicknessMaximum;
	#endif
#endif
#ifdef USE_SHEEN
	material.sheenColor = sheenColor;
	#ifdef USE_SHEEN_COLORMAP
		material.sheenColor *= texture2D( sheenColorMap, vSheenColorMapUv ).rgb;
	#endif
	material.sheenRoughness = clamp( sheenRoughness, 0.07, 1.0 );
	#ifdef USE_SHEEN_ROUGHNESSMAP
		material.sheenRoughness *= texture2D( sheenRoughnessMap, vSheenRoughnessMapUv ).a;
	#endif
#endif
#ifdef USE_ANISOTROPY
	#ifdef USE_ANISOTROPYMAP
		mat2 anisotropyMat = mat2( anisotropyVector.x, anisotropyVector.y, - anisotropyVector.y, anisotropyVector.x );
		vec3 anisotropyPolar = texture2D( anisotropyMap, vAnisotropyMapUv ).rgb;
		vec2 anisotropyV = anisotropyMat * normalize( 2.0 * anisotropyPolar.rg - vec2( 1.0 ) ) * anisotropyPolar.b;
	#else
		vec2 anisotropyV = anisotropyVector;
	#endif
	material.anisotropy = length( anisotropyV );
	if( material.anisotropy == 0.0 ) {
		anisotropyV = vec2( 1.0, 0.0 );
	} else {
		anisotropyV /= material.anisotropy;
		material.anisotropy = saturate( material.anisotropy );
	}
	material.alphaT = mix( pow2( material.roughness ), 1.0, pow2( material.anisotropy ) );
	material.anisotropyT = tbn[ 0 ] * anisotropyV.x + tbn[ 1 ] * anisotropyV.y;
	material.anisotropyB = tbn[ 1 ] * anisotropyV.x - tbn[ 0 ] * anisotropyV.y;
#endif`,HS=`struct PhysicalMaterial {
	vec3 diffuseColor;
	float roughness;
	vec3 specularColor;
	float specularF90;
	float dispersion;
	#ifdef USE_CLEARCOAT
		float clearcoat;
		float clearcoatRoughness;
		vec3 clearcoatF0;
		float clearcoatF90;
	#endif
	#ifdef USE_IRIDESCENCE
		float iridescence;
		float iridescenceIOR;
		float iridescenceThickness;
		vec3 iridescenceFresnel;
		vec3 iridescenceF0;
	#endif
	#ifdef USE_SHEEN
		vec3 sheenColor;
		float sheenRoughness;
	#endif
	#ifdef IOR
		float ior;
	#endif
	#ifdef USE_TRANSMISSION
		float transmission;
		float transmissionAlpha;
		float thickness;
		float attenuationDistance;
		vec3 attenuationColor;
	#endif
	#ifdef USE_ANISOTROPY
		float anisotropy;
		float alphaT;
		vec3 anisotropyT;
		vec3 anisotropyB;
	#endif
};
vec3 clearcoatSpecularDirect = vec3( 0.0 );
vec3 clearcoatSpecularIndirect = vec3( 0.0 );
vec3 sheenSpecularDirect = vec3( 0.0 );
vec3 sheenSpecularIndirect = vec3(0.0 );
vec3 Schlick_to_F0( const in vec3 f, const in float f90, const in float dotVH ) {
    float x = clamp( 1.0 - dotVH, 0.0, 1.0 );
    float x2 = x * x;
    float x5 = clamp( x * x2 * x2, 0.0, 0.9999 );
    return ( f - vec3( f90 ) * x5 ) / ( 1.0 - x5 );
}
float V_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {
	float a2 = pow2( alpha );
	float gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );
	float gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );
	return 0.5 / max( gv + gl, EPSILON );
}
float D_GGX( const in float alpha, const in float dotNH ) {
	float a2 = pow2( alpha );
	float denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;
	return RECIPROCAL_PI * a2 / pow2( denom );
}
#ifdef USE_ANISOTROPY
	float V_GGX_SmithCorrelated_Anisotropic( const in float alphaT, const in float alphaB, const in float dotTV, const in float dotBV, const in float dotTL, const in float dotBL, const in float dotNV, const in float dotNL ) {
		float gv = dotNL * length( vec3( alphaT * dotTV, alphaB * dotBV, dotNV ) );
		float gl = dotNV * length( vec3( alphaT * dotTL, alphaB * dotBL, dotNL ) );
		float v = 0.5 / ( gv + gl );
		return saturate(v);
	}
	float D_GGX_Anisotropic( const in float alphaT, const in float alphaB, const in float dotNH, const in float dotTH, const in float dotBH ) {
		float a2 = alphaT * alphaB;
		highp vec3 v = vec3( alphaB * dotTH, alphaT * dotBH, a2 * dotNH );
		highp float v2 = dot( v, v );
		float w2 = a2 / v2;
		return RECIPROCAL_PI * a2 * pow2 ( w2 );
	}
#endif
#ifdef USE_CLEARCOAT
	vec3 BRDF_GGX_Clearcoat( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material) {
		vec3 f0 = material.clearcoatF0;
		float f90 = material.clearcoatF90;
		float roughness = material.clearcoatRoughness;
		float alpha = pow2( roughness );
		vec3 halfDir = normalize( lightDir + viewDir );
		float dotNL = saturate( dot( normal, lightDir ) );
		float dotNV = saturate( dot( normal, viewDir ) );
		float dotNH = saturate( dot( normal, halfDir ) );
		float dotVH = saturate( dot( viewDir, halfDir ) );
		vec3 F = F_Schlick( f0, f90, dotVH );
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
		return F * ( V * D );
	}
#endif
vec3 BRDF_GGX( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, const in PhysicalMaterial material ) {
	vec3 f0 = material.specularColor;
	float f90 = material.specularF90;
	float roughness = material.roughness;
	float alpha = pow2( roughness );
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float dotVH = saturate( dot( viewDir, halfDir ) );
	vec3 F = F_Schlick( f0, f90, dotVH );
	#ifdef USE_IRIDESCENCE
		F = mix( F, material.iridescenceFresnel, material.iridescence );
	#endif
	#ifdef USE_ANISOTROPY
		float dotTL = dot( material.anisotropyT, lightDir );
		float dotTV = dot( material.anisotropyT, viewDir );
		float dotTH = dot( material.anisotropyT, halfDir );
		float dotBL = dot( material.anisotropyB, lightDir );
		float dotBV = dot( material.anisotropyB, viewDir );
		float dotBH = dot( material.anisotropyB, halfDir );
		float V = V_GGX_SmithCorrelated_Anisotropic( material.alphaT, alpha, dotTV, dotBV, dotTL, dotBL, dotNV, dotNL );
		float D = D_GGX_Anisotropic( material.alphaT, alpha, dotNH, dotTH, dotBH );
	#else
		float V = V_GGX_SmithCorrelated( alpha, dotNL, dotNV );
		float D = D_GGX( alpha, dotNH );
	#endif
	return F * ( V * D );
}
vec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {
	const float LUT_SIZE = 64.0;
	const float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;
	const float LUT_BIAS = 0.5 / LUT_SIZE;
	float dotNV = saturate( dot( N, V ) );
	vec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );
	uv = uv * LUT_SCALE + LUT_BIAS;
	return uv;
}
float LTC_ClippedSphereFormFactor( const in vec3 f ) {
	float l = length( f );
	return max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );
}
vec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {
	float x = dot( v1, v2 );
	float y = abs( x );
	float a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;
	float b = 3.4175940 + ( 4.1616724 + y ) * y;
	float v = a / b;
	float theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;
	return cross( v1, v2 ) * theta_sintheta;
}
vec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {
	vec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];
	vec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];
	vec3 lightNormal = cross( v1, v2 );
	if( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );
	vec3 T1, T2;
	T1 = normalize( V - N * dot( V, N ) );
	T2 = - cross( N, T1 );
	mat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );
	vec3 coords[ 4 ];
	coords[ 0 ] = mat * ( rectCoords[ 0 ] - P );
	coords[ 1 ] = mat * ( rectCoords[ 1 ] - P );
	coords[ 2 ] = mat * ( rectCoords[ 2 ] - P );
	coords[ 3 ] = mat * ( rectCoords[ 3 ] - P );
	coords[ 0 ] = normalize( coords[ 0 ] );
	coords[ 1 ] = normalize( coords[ 1 ] );
	coords[ 2 ] = normalize( coords[ 2 ] );
	coords[ 3 ] = normalize( coords[ 3 ] );
	vec3 vectorFormFactor = vec3( 0.0 );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );
	vectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );
	float result = LTC_ClippedSphereFormFactor( vectorFormFactor );
	return vec3( result );
}
#if defined( USE_SHEEN )
float D_Charlie( float roughness, float dotNH ) {
	float alpha = pow2( roughness );
	float invAlpha = 1.0 / alpha;
	float cos2h = dotNH * dotNH;
	float sin2h = max( 1.0 - cos2h, 0.0078125 );
	return ( 2.0 + invAlpha ) * pow( sin2h, invAlpha * 0.5 ) / ( 2.0 * PI );
}
float V_Neubelt( float dotNV, float dotNL ) {
	return saturate( 1.0 / ( 4.0 * ( dotNL + dotNV - dotNL * dotNV ) ) );
}
vec3 BRDF_Sheen( const in vec3 lightDir, const in vec3 viewDir, const in vec3 normal, vec3 sheenColor, const in float sheenRoughness ) {
	vec3 halfDir = normalize( lightDir + viewDir );
	float dotNL = saturate( dot( normal, lightDir ) );
	float dotNV = saturate( dot( normal, viewDir ) );
	float dotNH = saturate( dot( normal, halfDir ) );
	float D = D_Charlie( sheenRoughness, dotNH );
	float V = V_Neubelt( dotNV, dotNL );
	return sheenColor * ( D * V );
}
#endif
float IBLSheenBRDF( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	float r2 = roughness * roughness;
	float a = roughness < 0.25 ? -339.2 * r2 + 161.4 * roughness - 25.9 : -8.48 * r2 + 14.3 * roughness - 9.95;
	float b = roughness < 0.25 ? 44.0 * r2 - 23.7 * roughness + 3.26 : 1.97 * r2 - 3.27 * roughness + 0.72;
	float DG = exp( a * dotNV + b ) + ( roughness < 0.25 ? 0.0 : 0.1 * ( roughness - 0.25 ) );
	return saturate( DG * RECIPROCAL_PI );
}
vec2 DFGApprox( const in vec3 normal, const in vec3 viewDir, const in float roughness ) {
	float dotNV = saturate( dot( normal, viewDir ) );
	const vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );
	const vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );
	vec4 r = roughness * c0 + c1;
	float a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;
	vec2 fab = vec2( - 1.04, 1.04 ) * a004 + r.zw;
	return fab;
}
vec3 EnvironmentBRDF( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness ) {
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	return specularColor * fab.x + specularF90 * fab.y;
}
#ifdef USE_IRIDESCENCE
void computeMultiscatteringIridescence( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float iridescence, const in vec3 iridescenceF0, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#else
void computeMultiscattering( const in vec3 normal, const in vec3 viewDir, const in vec3 specularColor, const in float specularF90, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {
#endif
	vec2 fab = DFGApprox( normal, viewDir, roughness );
	#ifdef USE_IRIDESCENCE
		vec3 Fr = mix( specularColor, iridescenceF0, iridescence );
	#else
		vec3 Fr = specularColor;
	#endif
	vec3 FssEss = Fr * fab.x + specularF90 * fab.y;
	float Ess = fab.x + fab.y;
	float Ems = 1.0 - Ess;
	vec3 Favg = Fr + ( 1.0 - Fr ) * 0.047619;	vec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );
	singleScatter += FssEss;
	multiScatter += Fms * Ems;
}
#if NUM_RECT_AREA_LIGHTS > 0
	void RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
		vec3 normal = geometryNormal;
		vec3 viewDir = geometryViewDir;
		vec3 position = geometryPosition;
		vec3 lightPos = rectAreaLight.position;
		vec3 halfWidth = rectAreaLight.halfWidth;
		vec3 halfHeight = rectAreaLight.halfHeight;
		vec3 lightColor = rectAreaLight.color;
		float roughness = material.roughness;
		vec3 rectCoords[ 4 ];
		rectCoords[ 0 ] = lightPos + halfWidth - halfHeight;		rectCoords[ 1 ] = lightPos - halfWidth - halfHeight;
		rectCoords[ 2 ] = lightPos - halfWidth + halfHeight;
		rectCoords[ 3 ] = lightPos + halfWidth + halfHeight;
		vec2 uv = LTC_Uv( normal, viewDir, roughness );
		vec4 t1 = texture2D( ltc_1, uv );
		vec4 t2 = texture2D( ltc_2, uv );
		mat3 mInv = mat3(
			vec3( t1.x, 0, t1.y ),
			vec3(    0, 1,    0 ),
			vec3( t1.z, 0, t1.w )
		);
		vec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );
		reflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );
		reflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );
	}
#endif
void RE_Direct_Physical( const in IncidentLight directLight, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	float dotNL = saturate( dot( geometryNormal, directLight.direction ) );
	vec3 irradiance = dotNL * directLight.color;
	#ifdef USE_CLEARCOAT
		float dotNLcc = saturate( dot( geometryClearcoatNormal, directLight.direction ) );
		vec3 ccIrradiance = dotNLcc * directLight.color;
		clearcoatSpecularDirect += ccIrradiance * BRDF_GGX_Clearcoat( directLight.direction, geometryViewDir, geometryClearcoatNormal, material );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularDirect += irradiance * BRDF_Sheen( directLight.direction, geometryViewDir, geometryNormal, material.sheenColor, material.sheenRoughness );
	#endif
	reflectedLight.directSpecular += irradiance * BRDF_GGX( directLight.direction, geometryViewDir, geometryNormal, material );
	reflectedLight.directDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {
	reflectedLight.indirectDiffuse += irradiance * BRDF_Lambert( material.diffuseColor );
}
void RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in vec3 geometryPosition, const in vec3 geometryNormal, const in vec3 geometryViewDir, const in vec3 geometryClearcoatNormal, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {
	#ifdef USE_CLEARCOAT
		clearcoatSpecularIndirect += clearcoatRadiance * EnvironmentBRDF( geometryClearcoatNormal, geometryViewDir, material.clearcoatF0, material.clearcoatF90, material.clearcoatRoughness );
	#endif
	#ifdef USE_SHEEN
		sheenSpecularIndirect += irradiance * material.sheenColor * IBLSheenBRDF( geometryNormal, geometryViewDir, material.sheenRoughness );
	#endif
	vec3 singleScattering = vec3( 0.0 );
	vec3 multiScattering = vec3( 0.0 );
	vec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;
	#ifdef USE_IRIDESCENCE
		computeMultiscatteringIridescence( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.iridescence, material.iridescenceFresnel, material.roughness, singleScattering, multiScattering );
	#else
		computeMultiscattering( geometryNormal, geometryViewDir, material.specularColor, material.specularF90, material.roughness, singleScattering, multiScattering );
	#endif
	vec3 totalScattering = singleScattering + multiScattering;
	vec3 diffuse = material.diffuseColor * ( 1.0 - max( max( totalScattering.r, totalScattering.g ), totalScattering.b ) );
	reflectedLight.indirectSpecular += radiance * singleScattering;
	reflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;
	reflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;
}
#define RE_Direct				RE_Direct_Physical
#define RE_Direct_RectArea		RE_Direct_RectArea_Physical
#define RE_IndirectDiffuse		RE_IndirectDiffuse_Physical
#define RE_IndirectSpecular		RE_IndirectSpecular_Physical
float computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {
	return saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );
}`,GS=`
vec3 geometryPosition = - vViewPosition;
vec3 geometryNormal = normal;
vec3 geometryViewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );
vec3 geometryClearcoatNormal = vec3( 0.0 );
#ifdef USE_CLEARCOAT
	geometryClearcoatNormal = clearcoatNormal;
#endif
#ifdef USE_IRIDESCENCE
	float dotNVi = saturate( dot( normal, geometryViewDir ) );
	if ( material.iridescenceThickness == 0.0 ) {
		material.iridescence = 0.0;
	} else {
		material.iridescence = saturate( material.iridescence );
	}
	if ( material.iridescence > 0.0 ) {
		material.iridescenceFresnel = evalIridescence( 1.0, material.iridescenceIOR, dotNVi, material.iridescenceThickness, material.specularColor );
		material.iridescenceF0 = Schlick_to_F0( material.iridescenceFresnel, 1.0, dotNVi );
	}
#endif
IncidentLight directLight;
#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )
	PointLight pointLight;
	#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {
		pointLight = pointLights[ i ];
		getPointLightInfo( pointLight, geometryPosition, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )
		pointLightShadow = pointLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowIntensity, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )
	SpotLight spotLight;
	vec4 spotColor;
	vec3 spotLightCoord;
	bool inSpotLightMap;
	#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {
		spotLight = spotLights[ i ];
		getSpotLightInfo( spotLight, geometryPosition, directLight );
		#if ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#define SPOT_LIGHT_MAP_INDEX UNROLLED_LOOP_INDEX
		#elif ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		#define SPOT_LIGHT_MAP_INDEX NUM_SPOT_LIGHT_MAPS
		#else
		#define SPOT_LIGHT_MAP_INDEX ( UNROLLED_LOOP_INDEX - NUM_SPOT_LIGHT_SHADOWS + NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS )
		#endif
		#if ( SPOT_LIGHT_MAP_INDEX < NUM_SPOT_LIGHT_MAPS )
			spotLightCoord = vSpotLightCoord[ i ].xyz / vSpotLightCoord[ i ].w;
			inSpotLightMap = all( lessThan( abs( spotLightCoord * 2. - 1. ), vec3( 1.0 ) ) );
			spotColor = texture2D( spotLightMap[ SPOT_LIGHT_MAP_INDEX ], spotLightCoord.xy );
			directLight.color = inSpotLightMap ? directLight.color * spotColor.rgb : directLight.color;
		#endif
		#undef SPOT_LIGHT_MAP_INDEX
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
		spotLightShadow = spotLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowIntensity, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )
	DirectionalLight directionalLight;
	#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLightShadow;
	#endif
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {
		directionalLight = directionalLights[ i ];
		getDirectionalLightInfo( directionalLight, directLight );
		#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )
		directionalLightShadow = directionalLightShadows[ i ];
		directLight.color *= ( directLight.visible && receiveShadow ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowIntensity, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
		#endif
		RE_Direct( directLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )
	RectAreaLight rectAreaLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {
		rectAreaLight = rectAreaLights[ i ];
		RE_Direct_RectArea( rectAreaLight, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
	}
	#pragma unroll_loop_end
#endif
#if defined( RE_IndirectDiffuse )
	vec3 iblIrradiance = vec3( 0.0 );
	vec3 irradiance = getAmbientLightIrradiance( ambientLightColor );
	#if defined( USE_LIGHT_PROBES )
		irradiance += getLightProbeIrradiance( lightProbe, geometryNormal );
	#endif
	#if ( NUM_HEMI_LIGHTS > 0 )
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {
			irradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometryNormal );
		}
		#pragma unroll_loop_end
	#endif
#endif
#if defined( RE_IndirectSpecular )
	vec3 radiance = vec3( 0.0 );
	vec3 clearcoatRadiance = vec3( 0.0 );
#endif`,WS=`#if defined( RE_IndirectDiffuse )
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		vec3 lightMapIrradiance = lightMapTexel.rgb * lightMapIntensity;
		irradiance += lightMapIrradiance;
	#endif
	#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )
		iblIrradiance += getIBLIrradiance( geometryNormal );
	#endif
#endif
#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )
	#ifdef USE_ANISOTROPY
		radiance += getIBLAnisotropyRadiance( geometryViewDir, geometryNormal, material.roughness, material.anisotropyB, material.anisotropy );
	#else
		radiance += getIBLRadiance( geometryViewDir, geometryNormal, material.roughness );
	#endif
	#ifdef USE_CLEARCOAT
		clearcoatRadiance += getIBLRadiance( geometryViewDir, geometryClearcoatNormal, material.clearcoatRoughness );
	#endif
#endif`,$S=`#if defined( RE_IndirectDiffuse )
	RE_IndirectDiffuse( irradiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif
#if defined( RE_IndirectSpecular )
	RE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometryPosition, geometryNormal, geometryViewDir, geometryClearcoatNormal, material, reflectedLight );
#endif`,XS=`#if defined( USE_LOGDEPTHBUF )
	gl_FragDepth = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;
#endif`,qS=`#if defined( USE_LOGDEPTHBUF )
	uniform float logDepthBufFC;
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,YS=`#ifdef USE_LOGDEPTHBUF
	varying float vFragDepth;
	varying float vIsPerspective;
#endif`,ZS=`#ifdef USE_LOGDEPTHBUF
	vFragDepth = 1.0 + gl_Position.w;
	vIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );
#endif`,JS=`#ifdef USE_MAP
	vec4 sampledDiffuseColor = texture2D( map, vMapUv );
	#ifdef DECODE_VIDEO_TEXTURE
		sampledDiffuseColor = vec4( mix( pow( sampledDiffuseColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), sampledDiffuseColor.rgb * 0.0773993808, vec3( lessThanEqual( sampledDiffuseColor.rgb, vec3( 0.04045 ) ) ) ), sampledDiffuseColor.w );
	
	#endif
	diffuseColor *= sampledDiffuseColor;
#endif`,KS=`#ifdef USE_MAP
	uniform sampler2D map;
#endif`,jS=`#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
	#if defined( USE_POINTS_UV )
		vec2 uv = vUv;
	#else
		vec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;
	#endif
#endif
#ifdef USE_MAP
	diffuseColor *= texture2D( map, uv );
#endif
#ifdef USE_ALPHAMAP
	diffuseColor.a *= texture2D( alphaMap, uv ).g;
#endif`,QS=`#if defined( USE_POINTS_UV )
	varying vec2 vUv;
#else
	#if defined( USE_MAP ) || defined( USE_ALPHAMAP )
		uniform mat3 uvTransform;
	#endif
#endif
#ifdef USE_MAP
	uniform sampler2D map;
#endif
#ifdef USE_ALPHAMAP
	uniform sampler2D alphaMap;
#endif`,tA=`float metalnessFactor = metalness;
#ifdef USE_METALNESSMAP
	vec4 texelMetalness = texture2D( metalnessMap, vMetalnessMapUv );
	metalnessFactor *= texelMetalness.b;
#endif`,eA=`#ifdef USE_METALNESSMAP
	uniform sampler2D metalnessMap;
#endif`,iA=`#ifdef USE_INSTANCING_MORPH
	float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	float morphTargetBaseInfluence = texelFetch( morphTexture, ivec2( 0, gl_InstanceID ), 0 ).r;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		morphTargetInfluences[i] =  texelFetch( morphTexture, ivec2( i + 1, gl_InstanceID ), 0 ).r;
	}
#endif`,nA=`#if defined( USE_MORPHCOLORS )
	vColor *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		#if defined( USE_COLOR_ALPHA )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ) * morphTargetInfluences[ i ];
		#elif defined( USE_COLOR )
			if ( morphTargetInfluences[ i ] != 0.0 ) vColor += getMorph( gl_VertexID, i, 2 ).rgb * morphTargetInfluences[ i ];
		#endif
	}
#endif`,sA=`#ifdef USE_MORPHNORMALS
	objectNormal *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) objectNormal += getMorph( gl_VertexID, i, 1 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,rA=`#ifdef USE_MORPHTARGETS
	#ifndef USE_INSTANCING_MORPH
		uniform float morphTargetBaseInfluence;
		uniform float morphTargetInfluences[ MORPHTARGETS_COUNT ];
	#endif
	uniform sampler2DArray morphTargetsTexture;
	uniform ivec2 morphTargetsTextureSize;
	vec4 getMorph( const in int vertexIndex, const in int morphTargetIndex, const in int offset ) {
		int texelIndex = vertexIndex * MORPHTARGETS_TEXTURE_STRIDE + offset;
		int y = texelIndex / morphTargetsTextureSize.x;
		int x = texelIndex - y * morphTargetsTextureSize.x;
		ivec3 morphUV = ivec3( x, y, morphTargetIndex );
		return texelFetch( morphTargetsTexture, morphUV, 0 );
	}
#endif`,oA=`#ifdef USE_MORPHTARGETS
	transformed *= morphTargetBaseInfluence;
	for ( int i = 0; i < MORPHTARGETS_COUNT; i ++ ) {
		if ( morphTargetInfluences[ i ] != 0.0 ) transformed += getMorph( gl_VertexID, i, 0 ).xyz * morphTargetInfluences[ i ];
	}
#endif`,aA=`float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;
#ifdef FLAT_SHADED
	vec3 fdx = dFdx( vViewPosition );
	vec3 fdy = dFdy( vViewPosition );
	vec3 normal = normalize( cross( fdx, fdy ) );
#else
	vec3 normal = normalize( vNormal );
	#ifdef DOUBLE_SIDED
		normal *= faceDirection;
	#endif
#endif
#if defined( USE_NORMALMAP_TANGENTSPACE ) || defined( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY )
	#ifdef USE_TANGENT
		mat3 tbn = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn = getTangentFrame( - vViewPosition, normal,
		#if defined( USE_NORMALMAP )
			vNormalMapUv
		#elif defined( USE_CLEARCOAT_NORMALMAP )
			vClearcoatNormalMapUv
		#else
			vUv
		#endif
		);
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn[0] *= faceDirection;
		tbn[1] *= faceDirection;
	#endif
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	#ifdef USE_TANGENT
		mat3 tbn2 = mat3( normalize( vTangent ), normalize( vBitangent ), normal );
	#else
		mat3 tbn2 = getTangentFrame( - vViewPosition, normal, vClearcoatNormalMapUv );
	#endif
	#if defined( DOUBLE_SIDED ) && ! defined( FLAT_SHADED )
		tbn2[0] *= faceDirection;
		tbn2[1] *= faceDirection;
	#endif
#endif
vec3 nonPerturbedNormal = normal;`,hA=`#ifdef USE_NORMALMAP_OBJECTSPACE
	normal = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	#ifdef FLIP_SIDED
		normal = - normal;
	#endif
	#ifdef DOUBLE_SIDED
		normal = normal * faceDirection;
	#endif
	normal = normalize( normalMatrix * normal );
#elif defined( USE_NORMALMAP_TANGENTSPACE )
	vec3 mapN = texture2D( normalMap, vNormalMapUv ).xyz * 2.0 - 1.0;
	mapN.xy *= normalScale;
	normal = normalize( tbn * mapN );
#elif defined( USE_BUMPMAP )
	normal = perturbNormalArb( - vViewPosition, normal, dHdxy_fwd(), faceDirection );
#endif`,lA=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,cA=`#ifndef FLAT_SHADED
	varying vec3 vNormal;
	#ifdef USE_TANGENT
		varying vec3 vTangent;
		varying vec3 vBitangent;
	#endif
#endif`,uA=`#ifndef FLAT_SHADED
	vNormal = normalize( transformedNormal );
	#ifdef USE_TANGENT
		vTangent = normalize( transformedTangent );
		vBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );
	#endif
#endif`,dA=`#ifdef USE_NORMALMAP
	uniform sampler2D normalMap;
	uniform vec2 normalScale;
#endif
#ifdef USE_NORMALMAP_OBJECTSPACE
	uniform mat3 normalMatrix;
#endif
#if ! defined ( USE_TANGENT ) && ( defined ( USE_NORMALMAP_TANGENTSPACE ) || defined ( USE_CLEARCOAT_NORMALMAP ) || defined( USE_ANISOTROPY ) )
	mat3 getTangentFrame( vec3 eye_pos, vec3 surf_norm, vec2 uv ) {
		vec3 q0 = dFdx( eye_pos.xyz );
		vec3 q1 = dFdy( eye_pos.xyz );
		vec2 st0 = dFdx( uv.st );
		vec2 st1 = dFdy( uv.st );
		vec3 N = surf_norm;
		vec3 q1perp = cross( q1, N );
		vec3 q0perp = cross( N, q0 );
		vec3 T = q1perp * st0.x + q0perp * st1.x;
		vec3 B = q1perp * st0.y + q0perp * st1.y;
		float det = max( dot( T, T ), dot( B, B ) );
		float scale = ( det == 0.0 ) ? 0.0 : inversesqrt( det );
		return mat3( T * scale, B * scale, N );
	}
#endif`,fA=`#ifdef USE_CLEARCOAT
	vec3 clearcoatNormal = nonPerturbedNormal;
#endif`,pA=`#ifdef USE_CLEARCOAT_NORMALMAP
	vec3 clearcoatMapN = texture2D( clearcoatNormalMap, vClearcoatNormalMapUv ).xyz * 2.0 - 1.0;
	clearcoatMapN.xy *= clearcoatNormalScale;
	clearcoatNormal = normalize( tbn2 * clearcoatMapN );
#endif`,mA=`#ifdef USE_CLEARCOATMAP
	uniform sampler2D clearcoatMap;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform sampler2D clearcoatNormalMap;
	uniform vec2 clearcoatNormalScale;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform sampler2D clearcoatRoughnessMap;
#endif`,gA=`#ifdef USE_IRIDESCENCEMAP
	uniform sampler2D iridescenceMap;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform sampler2D iridescenceThicknessMap;
#endif`,_A=`#ifdef OPAQUE
diffuseColor.a = 1.0;
#endif
#ifdef USE_TRANSMISSION
diffuseColor.a *= material.transmissionAlpha;
#endif
gl_FragColor = vec4( outgoingLight, diffuseColor.a );`,yA=`vec3 packNormalToRGB( const in vec3 normal ) {
	return normalize( normal ) * 0.5 + 0.5;
}
vec3 unpackRGBToNormal( const in vec3 rgb ) {
	return 2.0 * rgb.xyz - 1.0;
}
const float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;const float ShiftRight8 = 1. / 256.;
const float Inv255 = 1. / 255.;
const vec4 PackFactors = vec4( 1.0, 256.0, 256.0 * 256.0, 256.0 * 256.0 * 256.0 );
const vec2 UnpackFactors2 = vec2( UnpackDownscale, 1.0 / PackFactors.g );
const vec3 UnpackFactors3 = vec3( UnpackDownscale / PackFactors.rg, 1.0 / PackFactors.b );
const vec4 UnpackFactors4 = vec4( UnpackDownscale / PackFactors.rgb, 1.0 / PackFactors.a );
vec4 packDepthToRGBA( const in float v ) {
	if( v <= 0.0 )
		return vec4( 0., 0., 0., 0. );
	if( v >= 1.0 )
		return vec4( 1., 1., 1., 1. );
	float vuf;
	float af = modf( v * PackFactors.a, vuf );
	float bf = modf( vuf * ShiftRight8, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec4( vuf * Inv255, gf * PackUpscale, bf * PackUpscale, af );
}
vec3 packDepthToRGB( const in float v ) {
	if( v <= 0.0 )
		return vec3( 0., 0., 0. );
	if( v >= 1.0 )
		return vec3( 1., 1., 1. );
	float vuf;
	float bf = modf( v * PackFactors.b, vuf );
	float gf = modf( vuf * ShiftRight8, vuf );
	return vec3( vuf * Inv255, gf * PackUpscale, bf );
}
vec2 packDepthToRG( const in float v ) {
	if( v <= 0.0 )
		return vec2( 0., 0. );
	if( v >= 1.0 )
		return vec2( 1., 1. );
	float vuf;
	float gf = modf( v * 256., vuf );
	return vec2( vuf * Inv255, gf );
}
float unpackRGBAToDepth( const in vec4 v ) {
	return dot( v, UnpackFactors4 );
}
float unpackRGBToDepth( const in vec3 v ) {
	return dot( v, UnpackFactors3 );
}
float unpackRGToDepth( const in vec2 v ) {
	return v.r * UnpackFactors2.r + v.g * UnpackFactors2.g;
}
vec4 pack2HalfToRGBA( const in vec2 v ) {
	vec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ) );
	return vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w );
}
vec2 unpackRGBATo2Half( const in vec4 v ) {
	return vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );
}
float viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {
	return ( viewZ + near ) / ( near - far );
}
float orthographicDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return depth * ( near - far ) - near;
}
float viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {
	return ( ( near + viewZ ) * far ) / ( ( far - near ) * viewZ );
}
float perspectiveDepthToViewZ( const in float depth, const in float near, const in float far ) {
	return ( near * far ) / ( ( far - near ) * depth - far );
}`,xA=`#ifdef PREMULTIPLIED_ALPHA
	gl_FragColor.rgb *= gl_FragColor.a;
#endif`,vA=`vec4 mvPosition = vec4( transformed, 1.0 );
#ifdef USE_BATCHING
	mvPosition = batchingMatrix * mvPosition;
#endif
#ifdef USE_INSTANCING
	mvPosition = instanceMatrix * mvPosition;
#endif
mvPosition = modelViewMatrix * mvPosition;
gl_Position = projectionMatrix * mvPosition;`,bA=`#ifdef DITHERING
	gl_FragColor.rgb = dithering( gl_FragColor.rgb );
#endif`,MA=`#ifdef DITHERING
	vec3 dithering( vec3 color ) {
		float grid_position = rand( gl_FragCoord.xy );
		vec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );
		dither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );
		return color + dither_shift_RGB;
	}
#endif`,wA=`float roughnessFactor = roughness;
#ifdef USE_ROUGHNESSMAP
	vec4 texelRoughness = texture2D( roughnessMap, vRoughnessMapUv );
	roughnessFactor *= texelRoughness.g;
#endif`,SA=`#ifdef USE_ROUGHNESSMAP
	uniform sampler2D roughnessMap;
#endif`,AA=`#if NUM_SPOT_LIGHT_COORDS > 0
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#if NUM_SPOT_LIGHT_MAPS > 0
	uniform sampler2D spotLightMap[ NUM_SPOT_LIGHT_MAPS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		uniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
	float texture2DCompare( sampler2D depths, vec2 uv, float compare ) {
		return step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );
	}
	vec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {
		return unpackRGBATo2Half( texture2D( shadow, uv ) );
	}
	float VSMShadow (sampler2D shadow, vec2 uv, float compare ){
		float occlusion = 1.0;
		vec2 distribution = texture2DDistribution( shadow, uv );
		float hard_shadow = step( compare , distribution.x );
		if (hard_shadow != 1.0 ) {
			float distance = compare - distribution.x ;
			float variance = max( 0.00000, distribution.y * distribution.y );
			float softness_probability = variance / (variance + distance * distance );			softness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );			occlusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );
		}
		return occlusion;
	}
	float getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord ) {
		float shadow = 1.0;
		shadowCoord.xyz /= shadowCoord.w;
		shadowCoord.z += shadowBias;
		bool inFrustum = shadowCoord.x >= 0.0 && shadowCoord.x <= 1.0 && shadowCoord.y >= 0.0 && shadowCoord.y <= 1.0;
		bool frustumTest = inFrustum && shadowCoord.z <= 1.0;
		if ( frustumTest ) {
		#if defined( SHADOWMAP_TYPE_PCF )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx0 = - texelSize.x * shadowRadius;
			float dy0 = - texelSize.y * shadowRadius;
			float dx1 = + texelSize.x * shadowRadius;
			float dy1 = + texelSize.y * shadowRadius;
			float dx2 = dx0 / 2.0;
			float dy2 = dy0 / 2.0;
			float dx3 = dx1 / 2.0;
			float dy3 = dy1 / 2.0;
			shadow = (
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )
			) * ( 1.0 / 17.0 );
		#elif defined( SHADOWMAP_TYPE_PCF_SOFT )
			vec2 texelSize = vec2( 1.0 ) / shadowMapSize;
			float dx = texelSize.x;
			float dy = texelSize.y;
			vec2 uv = shadowCoord.xy;
			vec2 f = fract( uv * shadowMapSize + 0.5 );
			uv -= f * texelSize;
			shadow = (
				texture2DCompare( shadowMap, uv, shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +
				texture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),
					 f.x ) +
				mix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ),
					 texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),
					 f.y ) +
				mix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),
						  f.x ),
					 mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ),
						  texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),
						  f.x ),
					 f.y )
			) * ( 1.0 / 9.0 );
		#elif defined( SHADOWMAP_TYPE_VSM )
			shadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );
		#else
			shadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );
		#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
	vec2 cubeToUV( vec3 v, float texelSizeY ) {
		vec3 absV = abs( v );
		float scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );
		absV *= scaleToCube;
		v *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );
		vec2 planar = v.xy;
		float almostATexel = 1.5 * texelSizeY;
		float almostOne = 1.0 - almostATexel;
		if ( absV.z >= almostOne ) {
			if ( v.z > 0.0 )
				planar.x = 4.0 - v.x;
		} else if ( absV.x >= almostOne ) {
			float signX = sign( v.x );
			planar.x = v.z * signX + 2.0 * signX;
		} else if ( absV.y >= almostOne ) {
			float signY = sign( v.y );
			planar.x = v.x + 2.0 * signY + 2.0;
			planar.y = v.z * signY - 2.0;
		}
		return vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );
	}
	float getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowIntensity, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {
		float shadow = 1.0;
		vec3 lightToPosition = shadowCoord.xyz;
		
		float lightToPositionLength = length( lightToPosition );
		if ( lightToPositionLength - shadowCameraFar <= 0.0 && lightToPositionLength - shadowCameraNear >= 0.0 ) {
			float dp = ( lightToPositionLength - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );			dp += shadowBias;
			vec3 bd3D = normalize( lightToPosition );
			vec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );
			#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )
				vec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;
				shadow = (
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +
					texture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )
				) * ( 1.0 / 9.0 );
			#else
				shadow = texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );
			#endif
		}
		return mix( 1.0, shadow, shadowIntensity );
	}
#endif`,EA=`#if NUM_SPOT_LIGHT_COORDS > 0
	uniform mat4 spotLightMatrix[ NUM_SPOT_LIGHT_COORDS ];
	varying vec4 vSpotLightCoord[ NUM_SPOT_LIGHT_COORDS ];
#endif
#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
		uniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];
		varying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];
		struct DirectionalLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
		struct SpotLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
		};
		uniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		uniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];
		varying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];
		struct PointLightShadow {
			float shadowIntensity;
			float shadowBias;
			float shadowNormalBias;
			float shadowRadius;
			vec2 shadowMapSize;
			float shadowCameraNear;
			float shadowCameraFar;
		};
		uniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];
	#endif
#endif`,TA=`#if ( defined( USE_SHADOWMAP ) && ( NUM_DIR_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0 ) ) || ( NUM_SPOT_LIGHT_COORDS > 0 )
	vec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );
	vec4 shadowWorldPosition;
#endif
#if defined( USE_SHADOWMAP )
	#if NUM_DIR_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );
			vDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
		#pragma unroll_loop_start
		for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
			shadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );
			vPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;
		}
		#pragma unroll_loop_end
	#endif
#endif
#if NUM_SPOT_LIGHT_COORDS > 0
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_COORDS; i ++ ) {
		shadowWorldPosition = worldPosition;
		#if ( defined( USE_SHADOWMAP ) && UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )
			shadowWorldPosition.xyz += shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias;
		#endif
		vSpotLightCoord[ i ] = spotLightMatrix[ i ] * shadowWorldPosition;
	}
	#pragma unroll_loop_end
#endif`,CA=`float getShadowMask() {
	float shadow = 1.0;
	#ifdef USE_SHADOWMAP
	#if NUM_DIR_LIGHT_SHADOWS > 0
	DirectionalLightShadow directionalLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {
		directionalLight = directionalLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowIntensity, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_SPOT_LIGHT_SHADOWS > 0
	SpotLightShadow spotLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {
		spotLight = spotLightShadows[ i ];
		shadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowIntensity, spotLight.shadowBias, spotLight.shadowRadius, vSpotLightCoord[ i ] ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#if NUM_POINT_LIGHT_SHADOWS > 0
	PointLightShadow pointLight;
	#pragma unroll_loop_start
	for ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {
		pointLight = pointLightShadows[ i ];
		shadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowIntensity, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;
	}
	#pragma unroll_loop_end
	#endif
	#endif
	return shadow;
}`,RA=`#ifdef USE_SKINNING
	mat4 boneMatX = getBoneMatrix( skinIndex.x );
	mat4 boneMatY = getBoneMatrix( skinIndex.y );
	mat4 boneMatZ = getBoneMatrix( skinIndex.z );
	mat4 boneMatW = getBoneMatrix( skinIndex.w );
#endif`,PA=`#ifdef USE_SKINNING
	uniform mat4 bindMatrix;
	uniform mat4 bindMatrixInverse;
	uniform highp sampler2D boneTexture;
	mat4 getBoneMatrix( const in float i ) {
		int size = textureSize( boneTexture, 0 ).x;
		int j = int( i ) * 4;
		int x = j % size;
		int y = j / size;
		vec4 v1 = texelFetch( boneTexture, ivec2( x, y ), 0 );
		vec4 v2 = texelFetch( boneTexture, ivec2( x + 1, y ), 0 );
		vec4 v3 = texelFetch( boneTexture, ivec2( x + 2, y ), 0 );
		vec4 v4 = texelFetch( boneTexture, ivec2( x + 3, y ), 0 );
		return mat4( v1, v2, v3, v4 );
	}
#endif`,IA=`#ifdef USE_SKINNING
	vec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );
	vec4 skinned = vec4( 0.0 );
	skinned += boneMatX * skinVertex * skinWeight.x;
	skinned += boneMatY * skinVertex * skinWeight.y;
	skinned += boneMatZ * skinVertex * skinWeight.z;
	skinned += boneMatW * skinVertex * skinWeight.w;
	transformed = ( bindMatrixInverse * skinned ).xyz;
#endif`,LA=`#ifdef USE_SKINNING
	mat4 skinMatrix = mat4( 0.0 );
	skinMatrix += skinWeight.x * boneMatX;
	skinMatrix += skinWeight.y * boneMatY;
	skinMatrix += skinWeight.z * boneMatZ;
	skinMatrix += skinWeight.w * boneMatW;
	skinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;
	objectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;
	#ifdef USE_TANGENT
		objectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;
	#endif
#endif`,DA=`float specularStrength;
#ifdef USE_SPECULARMAP
	vec4 texelSpecular = texture2D( specularMap, vSpecularMapUv );
	specularStrength = texelSpecular.r;
#else
	specularStrength = 1.0;
#endif`,OA=`#ifdef USE_SPECULARMAP
	uniform sampler2D specularMap;
#endif`,FA=`#if defined( TONE_MAPPING )
	gl_FragColor.rgb = toneMapping( gl_FragColor.rgb );
#endif`,zA=`#ifndef saturate
#define saturate( a ) clamp( a, 0.0, 1.0 )
#endif
uniform float toneMappingExposure;
vec3 LinearToneMapping( vec3 color ) {
	return saturate( toneMappingExposure * color );
}
vec3 ReinhardToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	return saturate( color / ( vec3( 1.0 ) + color ) );
}
vec3 CineonToneMapping( vec3 color ) {
	color *= toneMappingExposure;
	color = max( vec3( 0.0 ), color - 0.004 );
	return pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );
}
vec3 RRTAndODTFit( vec3 v ) {
	vec3 a = v * ( v + 0.0245786 ) - 0.000090537;
	vec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;
	return a / b;
}
vec3 ACESFilmicToneMapping( vec3 color ) {
	const mat3 ACESInputMat = mat3(
		vec3( 0.59719, 0.07600, 0.02840 ),		vec3( 0.35458, 0.90834, 0.13383 ),
		vec3( 0.04823, 0.01566, 0.83777 )
	);
	const mat3 ACESOutputMat = mat3(
		vec3(  1.60475, -0.10208, -0.00327 ),		vec3( -0.53108,  1.10813, -0.07276 ),
		vec3( -0.07367, -0.00605,  1.07602 )
	);
	color *= toneMappingExposure / 0.6;
	color = ACESInputMat * color;
	color = RRTAndODTFit( color );
	color = ACESOutputMat * color;
	return saturate( color );
}
const mat3 LINEAR_REC2020_TO_LINEAR_SRGB = mat3(
	vec3( 1.6605, - 0.1246, - 0.0182 ),
	vec3( - 0.5876, 1.1329, - 0.1006 ),
	vec3( - 0.0728, - 0.0083, 1.1187 )
);
const mat3 LINEAR_SRGB_TO_LINEAR_REC2020 = mat3(
	vec3( 0.6274, 0.0691, 0.0164 ),
	vec3( 0.3293, 0.9195, 0.0880 ),
	vec3( 0.0433, 0.0113, 0.8956 )
);
vec3 agxDefaultContrastApprox( vec3 x ) {
	vec3 x2 = x * x;
	vec3 x4 = x2 * x2;
	return + 15.5 * x4 * x2
		- 40.14 * x4 * x
		+ 31.96 * x4
		- 6.868 * x2 * x
		+ 0.4298 * x2
		+ 0.1191 * x
		- 0.00232;
}
vec3 AgXToneMapping( vec3 color ) {
	const mat3 AgXInsetMatrix = mat3(
		vec3( 0.856627153315983, 0.137318972929847, 0.11189821299995 ),
		vec3( 0.0951212405381588, 0.761241990602591, 0.0767994186031903 ),
		vec3( 0.0482516061458583, 0.101439036467562, 0.811302368396859 )
	);
	const mat3 AgXOutsetMatrix = mat3(
		vec3( 1.1271005818144368, - 0.1413297634984383, - 0.14132976349843826 ),
		vec3( - 0.11060664309660323, 1.157823702216272, - 0.11060664309660294 ),
		vec3( - 0.016493938717834573, - 0.016493938717834257, 1.2519364065950405 )
	);
	const float AgxMinEv = - 12.47393;	const float AgxMaxEv = 4.026069;
	color *= toneMappingExposure;
	color = LINEAR_SRGB_TO_LINEAR_REC2020 * color;
	color = AgXInsetMatrix * color;
	color = max( color, 1e-10 );	color = log2( color );
	color = ( color - AgxMinEv ) / ( AgxMaxEv - AgxMinEv );
	color = clamp( color, 0.0, 1.0 );
	color = agxDefaultContrastApprox( color );
	color = AgXOutsetMatrix * color;
	color = pow( max( vec3( 0.0 ), color ), vec3( 2.2 ) );
	color = LINEAR_REC2020_TO_LINEAR_SRGB * color;
	color = clamp( color, 0.0, 1.0 );
	return color;
}
vec3 NeutralToneMapping( vec3 color ) {
	const float StartCompression = 0.8 - 0.04;
	const float Desaturation = 0.15;
	color *= toneMappingExposure;
	float x = min( color.r, min( color.g, color.b ) );
	float offset = x < 0.08 ? x - 6.25 * x * x : 0.04;
	color -= offset;
	float peak = max( color.r, max( color.g, color.b ) );
	if ( peak < StartCompression ) return color;
	float d = 1. - StartCompression;
	float newPeak = 1. - d * d / ( peak + d - StartCompression );
	color *= newPeak / peak;
	float g = 1. - 1. / ( Desaturation * ( peak - newPeak ) + 1. );
	return mix( color, vec3( newPeak ), g );
}
vec3 CustomToneMapping( vec3 color ) { return color; }`,UA=`#ifdef USE_TRANSMISSION
	material.transmission = transmission;
	material.transmissionAlpha = 1.0;
	material.thickness = thickness;
	material.attenuationDistance = attenuationDistance;
	material.attenuationColor = attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		material.transmission *= texture2D( transmissionMap, vTransmissionMapUv ).r;
	#endif
	#ifdef USE_THICKNESSMAP
		material.thickness *= texture2D( thicknessMap, vThicknessMapUv ).g;
	#endif
	vec3 pos = vWorldPosition;
	vec3 v = normalize( cameraPosition - pos );
	vec3 n = inverseTransformDirection( normal, viewMatrix );
	vec4 transmitted = getIBLVolumeRefraction(
		n, v, material.roughness, material.diffuseColor, material.specularColor, material.specularF90,
		pos, modelMatrix, viewMatrix, projectionMatrix, material.dispersion, material.ior, material.thickness,
		material.attenuationColor, material.attenuationDistance );
	material.transmissionAlpha = mix( material.transmissionAlpha, transmitted.a, material.transmission );
	totalDiffuse = mix( totalDiffuse, transmitted.rgb, material.transmission );
#endif`,NA=`#ifdef USE_TRANSMISSION
	uniform float transmission;
	uniform float thickness;
	uniform float attenuationDistance;
	uniform vec3 attenuationColor;
	#ifdef USE_TRANSMISSIONMAP
		uniform sampler2D transmissionMap;
	#endif
	#ifdef USE_THICKNESSMAP
		uniform sampler2D thicknessMap;
	#endif
	uniform vec2 transmissionSamplerSize;
	uniform sampler2D transmissionSamplerMap;
	uniform mat4 modelMatrix;
	uniform mat4 projectionMatrix;
	varying vec3 vWorldPosition;
	float w0( float a ) {
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - a + 3.0 ) - 3.0 ) + 1.0 );
	}
	float w1( float a ) {
		return ( 1.0 / 6.0 ) * ( a *  a * ( 3.0 * a - 6.0 ) + 4.0 );
	}
	float w2( float a ){
		return ( 1.0 / 6.0 ) * ( a * ( a * ( - 3.0 * a + 3.0 ) + 3.0 ) + 1.0 );
	}
	float w3( float a ) {
		return ( 1.0 / 6.0 ) * ( a * a * a );
	}
	float g0( float a ) {
		return w0( a ) + w1( a );
	}
	float g1( float a ) {
		return w2( a ) + w3( a );
	}
	float h0( float a ) {
		return - 1.0 + w1( a ) / ( w0( a ) + w1( a ) );
	}
	float h1( float a ) {
		return 1.0 + w3( a ) / ( w2( a ) + w3( a ) );
	}
	vec4 bicubic( sampler2D tex, vec2 uv, vec4 texelSize, float lod ) {
		uv = uv * texelSize.zw + 0.5;
		vec2 iuv = floor( uv );
		vec2 fuv = fract( uv );
		float g0x = g0( fuv.x );
		float g1x = g1( fuv.x );
		float h0x = h0( fuv.x );
		float h1x = h1( fuv.x );
		float h0y = h0( fuv.y );
		float h1y = h1( fuv.y );
		vec2 p0 = ( vec2( iuv.x + h0x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p1 = ( vec2( iuv.x + h1x, iuv.y + h0y ) - 0.5 ) * texelSize.xy;
		vec2 p2 = ( vec2( iuv.x + h0x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		vec2 p3 = ( vec2( iuv.x + h1x, iuv.y + h1y ) - 0.5 ) * texelSize.xy;
		return g0( fuv.y ) * ( g0x * textureLod( tex, p0, lod ) + g1x * textureLod( tex, p1, lod ) ) +
			g1( fuv.y ) * ( g0x * textureLod( tex, p2, lod ) + g1x * textureLod( tex, p3, lod ) );
	}
	vec4 textureBicubic( sampler2D sampler, vec2 uv, float lod ) {
		vec2 fLodSize = vec2( textureSize( sampler, int( lod ) ) );
		vec2 cLodSize = vec2( textureSize( sampler, int( lod + 1.0 ) ) );
		vec2 fLodSizeInv = 1.0 / fLodSize;
		vec2 cLodSizeInv = 1.0 / cLodSize;
		vec4 fSample = bicubic( sampler, uv, vec4( fLodSizeInv, fLodSize ), floor( lod ) );
		vec4 cSample = bicubic( sampler, uv, vec4( cLodSizeInv, cLodSize ), ceil( lod ) );
		return mix( fSample, cSample, fract( lod ) );
	}
	vec3 getVolumeTransmissionRay( const in vec3 n, const in vec3 v, const in float thickness, const in float ior, const in mat4 modelMatrix ) {
		vec3 refractionVector = refract( - v, normalize( n ), 1.0 / ior );
		vec3 modelScale;
		modelScale.x = length( vec3( modelMatrix[ 0 ].xyz ) );
		modelScale.y = length( vec3( modelMatrix[ 1 ].xyz ) );
		modelScale.z = length( vec3( modelMatrix[ 2 ].xyz ) );
		return normalize( refractionVector ) * thickness * modelScale;
	}
	float applyIorToRoughness( const in float roughness, const in float ior ) {
		return roughness * clamp( ior * 2.0 - 2.0, 0.0, 1.0 );
	}
	vec4 getTransmissionSample( const in vec2 fragCoord, const in float roughness, const in float ior ) {
		float lod = log2( transmissionSamplerSize.x ) * applyIorToRoughness( roughness, ior );
		return textureBicubic( transmissionSamplerMap, fragCoord.xy, lod );
	}
	vec3 volumeAttenuation( const in float transmissionDistance, const in vec3 attenuationColor, const in float attenuationDistance ) {
		if ( isinf( attenuationDistance ) ) {
			return vec3( 1.0 );
		} else {
			vec3 attenuationCoefficient = -log( attenuationColor ) / attenuationDistance;
			vec3 transmittance = exp( - attenuationCoefficient * transmissionDistance );			return transmittance;
		}
	}
	vec4 getIBLVolumeRefraction( const in vec3 n, const in vec3 v, const in float roughness, const in vec3 diffuseColor,
		const in vec3 specularColor, const in float specularF90, const in vec3 position, const in mat4 modelMatrix,
		const in mat4 viewMatrix, const in mat4 projMatrix, const in float dispersion, const in float ior, const in float thickness,
		const in vec3 attenuationColor, const in float attenuationDistance ) {
		vec4 transmittedLight;
		vec3 transmittance;
		#ifdef USE_DISPERSION
			float halfSpread = ( ior - 1.0 ) * 0.025 * dispersion;
			vec3 iors = vec3( ior - halfSpread, ior, ior + halfSpread );
			for ( int i = 0; i < 3; i ++ ) {
				vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, iors[ i ], modelMatrix );
				vec3 refractedRayExit = position + transmissionRay;
		
				vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
				vec2 refractionCoords = ndcPos.xy / ndcPos.w;
				refractionCoords += 1.0;
				refractionCoords /= 2.0;
		
				vec4 transmissionSample = getTransmissionSample( refractionCoords, roughness, iors[ i ] );
				transmittedLight[ i ] = transmissionSample[ i ];
				transmittedLight.a += transmissionSample.a;
				transmittance[ i ] = diffuseColor[ i ] * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance )[ i ];
			}
			transmittedLight.a /= 3.0;
		
		#else
		
			vec3 transmissionRay = getVolumeTransmissionRay( n, v, thickness, ior, modelMatrix );
			vec3 refractedRayExit = position + transmissionRay;
			vec4 ndcPos = projMatrix * viewMatrix * vec4( refractedRayExit, 1.0 );
			vec2 refractionCoords = ndcPos.xy / ndcPos.w;
			refractionCoords += 1.0;
			refractionCoords /= 2.0;
			transmittedLight = getTransmissionSample( refractionCoords, roughness, ior );
			transmittance = diffuseColor * volumeAttenuation( length( transmissionRay ), attenuationColor, attenuationDistance );
		
		#endif
		vec3 attenuatedColor = transmittance * transmittedLight.rgb;
		vec3 F = EnvironmentBRDF( n, v, specularColor, specularF90, roughness );
		float transmittanceFactor = ( transmittance.r + transmittance.g + transmittance.b ) / 3.0;
		return vec4( ( 1.0 - F ) * attenuatedColor, 1.0 - ( 1.0 - transmittedLight.a ) * transmittanceFactor );
	}
#endif`,BA=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_SPECULARMAP
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,kA=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	varying vec2 vUv;
#endif
#ifdef USE_MAP
	uniform mat3 mapTransform;
	varying vec2 vMapUv;
#endif
#ifdef USE_ALPHAMAP
	uniform mat3 alphaMapTransform;
	varying vec2 vAlphaMapUv;
#endif
#ifdef USE_LIGHTMAP
	uniform mat3 lightMapTransform;
	varying vec2 vLightMapUv;
#endif
#ifdef USE_AOMAP
	uniform mat3 aoMapTransform;
	varying vec2 vAoMapUv;
#endif
#ifdef USE_BUMPMAP
	uniform mat3 bumpMapTransform;
	varying vec2 vBumpMapUv;
#endif
#ifdef USE_NORMALMAP
	uniform mat3 normalMapTransform;
	varying vec2 vNormalMapUv;
#endif
#ifdef USE_DISPLACEMENTMAP
	uniform mat3 displacementMapTransform;
	varying vec2 vDisplacementMapUv;
#endif
#ifdef USE_EMISSIVEMAP
	uniform mat3 emissiveMapTransform;
	varying vec2 vEmissiveMapUv;
#endif
#ifdef USE_METALNESSMAP
	uniform mat3 metalnessMapTransform;
	varying vec2 vMetalnessMapUv;
#endif
#ifdef USE_ROUGHNESSMAP
	uniform mat3 roughnessMapTransform;
	varying vec2 vRoughnessMapUv;
#endif
#ifdef USE_ANISOTROPYMAP
	uniform mat3 anisotropyMapTransform;
	varying vec2 vAnisotropyMapUv;
#endif
#ifdef USE_CLEARCOATMAP
	uniform mat3 clearcoatMapTransform;
	varying vec2 vClearcoatMapUv;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	uniform mat3 clearcoatNormalMapTransform;
	varying vec2 vClearcoatNormalMapUv;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	uniform mat3 clearcoatRoughnessMapTransform;
	varying vec2 vClearcoatRoughnessMapUv;
#endif
#ifdef USE_SHEEN_COLORMAP
	uniform mat3 sheenColorMapTransform;
	varying vec2 vSheenColorMapUv;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	uniform mat3 sheenRoughnessMapTransform;
	varying vec2 vSheenRoughnessMapUv;
#endif
#ifdef USE_IRIDESCENCEMAP
	uniform mat3 iridescenceMapTransform;
	varying vec2 vIridescenceMapUv;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	uniform mat3 iridescenceThicknessMapTransform;
	varying vec2 vIridescenceThicknessMapUv;
#endif
#ifdef USE_SPECULARMAP
	uniform mat3 specularMapTransform;
	varying vec2 vSpecularMapUv;
#endif
#ifdef USE_SPECULAR_COLORMAP
	uniform mat3 specularColorMapTransform;
	varying vec2 vSpecularColorMapUv;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	uniform mat3 specularIntensityMapTransform;
	varying vec2 vSpecularIntensityMapUv;
#endif
#ifdef USE_TRANSMISSIONMAP
	uniform mat3 transmissionMapTransform;
	varying vec2 vTransmissionMapUv;
#endif
#ifdef USE_THICKNESSMAP
	uniform mat3 thicknessMapTransform;
	varying vec2 vThicknessMapUv;
#endif`,VA=`#if defined( USE_UV ) || defined( USE_ANISOTROPY )
	vUv = vec3( uv, 1 ).xy;
#endif
#ifdef USE_MAP
	vMapUv = ( mapTransform * vec3( MAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ALPHAMAP
	vAlphaMapUv = ( alphaMapTransform * vec3( ALPHAMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_LIGHTMAP
	vLightMapUv = ( lightMapTransform * vec3( LIGHTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_AOMAP
	vAoMapUv = ( aoMapTransform * vec3( AOMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_BUMPMAP
	vBumpMapUv = ( bumpMapTransform * vec3( BUMPMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_NORMALMAP
	vNormalMapUv = ( normalMapTransform * vec3( NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_DISPLACEMENTMAP
	vDisplacementMapUv = ( displacementMapTransform * vec3( DISPLACEMENTMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_EMISSIVEMAP
	vEmissiveMapUv = ( emissiveMapTransform * vec3( EMISSIVEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_METALNESSMAP
	vMetalnessMapUv = ( metalnessMapTransform * vec3( METALNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ROUGHNESSMAP
	vRoughnessMapUv = ( roughnessMapTransform * vec3( ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_ANISOTROPYMAP
	vAnisotropyMapUv = ( anisotropyMapTransform * vec3( ANISOTROPYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOATMAP
	vClearcoatMapUv = ( clearcoatMapTransform * vec3( CLEARCOATMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_NORMALMAP
	vClearcoatNormalMapUv = ( clearcoatNormalMapTransform * vec3( CLEARCOAT_NORMALMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_CLEARCOAT_ROUGHNESSMAP
	vClearcoatRoughnessMapUv = ( clearcoatRoughnessMapTransform * vec3( CLEARCOAT_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCEMAP
	vIridescenceMapUv = ( iridescenceMapTransform * vec3( IRIDESCENCEMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_IRIDESCENCE_THICKNESSMAP
	vIridescenceThicknessMapUv = ( iridescenceThicknessMapTransform * vec3( IRIDESCENCE_THICKNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_COLORMAP
	vSheenColorMapUv = ( sheenColorMapTransform * vec3( SHEEN_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SHEEN_ROUGHNESSMAP
	vSheenRoughnessMapUv = ( sheenRoughnessMapTransform * vec3( SHEEN_ROUGHNESSMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULARMAP
	vSpecularMapUv = ( specularMapTransform * vec3( SPECULARMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_COLORMAP
	vSpecularColorMapUv = ( specularColorMapTransform * vec3( SPECULAR_COLORMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_SPECULAR_INTENSITYMAP
	vSpecularIntensityMapUv = ( specularIntensityMapTransform * vec3( SPECULAR_INTENSITYMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_TRANSMISSIONMAP
	vTransmissionMapUv = ( transmissionMapTransform * vec3( TRANSMISSIONMAP_UV, 1 ) ).xy;
#endif
#ifdef USE_THICKNESSMAP
	vThicknessMapUv = ( thicknessMapTransform * vec3( THICKNESSMAP_UV, 1 ) ).xy;
#endif`,HA=`#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION ) || NUM_SPOT_LIGHT_COORDS > 0
	vec4 worldPosition = vec4( transformed, 1.0 );
	#ifdef USE_BATCHING
		worldPosition = batchingMatrix * worldPosition;
	#endif
	#ifdef USE_INSTANCING
		worldPosition = instanceMatrix * worldPosition;
	#endif
	worldPosition = modelMatrix * worldPosition;
#endif`;const GA=`varying vec2 vUv;
uniform mat3 uvTransform;
void main() {
	vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	gl_Position = vec4( position.xy, 1.0, 1.0 );
}`,WA=`uniform sampler2D t2D;
uniform float backgroundIntensity;
varying vec2 vUv;
void main() {
	vec4 texColor = texture2D( t2D, vUv );
	#ifdef DECODE_VIDEO_TEXTURE
		texColor = vec4( mix( pow( texColor.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), texColor.rgb * 0.0773993808, vec3( lessThanEqual( texColor.rgb, vec3( 0.04045 ) ) ) ), texColor.w );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,$A=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,XA=`#ifdef ENVMAP_TYPE_CUBE
	uniform samplerCube envMap;
#elif defined( ENVMAP_TYPE_CUBE_UV )
	uniform sampler2D envMap;
#endif
uniform float flipEnvMap;
uniform float backgroundBlurriness;
uniform float backgroundIntensity;
uniform mat3 backgroundRotation;
varying vec3 vWorldDirection;
#include <cube_uv_reflection_fragment>
void main() {
	#ifdef ENVMAP_TYPE_CUBE
		vec4 texColor = textureCube( envMap, backgroundRotation * vec3( flipEnvMap * vWorldDirection.x, vWorldDirection.yz ) );
	#elif defined( ENVMAP_TYPE_CUBE_UV )
		vec4 texColor = textureCubeUV( envMap, backgroundRotation * vWorldDirection, backgroundBlurriness );
	#else
		vec4 texColor = vec4( 0.0, 0.0, 0.0, 1.0 );
	#endif
	texColor.rgb *= backgroundIntensity;
	gl_FragColor = texColor;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,qA=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
	gl_Position.z = gl_Position.w;
}`,YA=`uniform samplerCube tCube;
uniform float tFlip;
uniform float opacity;
varying vec3 vWorldDirection;
void main() {
	vec4 texColor = textureCube( tCube, vec3( tFlip * vWorldDirection.x, vWorldDirection.yz ) );
	gl_FragColor = texColor;
	gl_FragColor.a *= opacity;
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,ZA=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
varying vec2 vHighPrecisionZW;
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vHighPrecisionZW = gl_Position.zw;
}`,JA=`#if DEPTH_PACKING == 3200
	uniform float opacity;
#endif
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
varying vec2 vHighPrecisionZW;
void main() {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#if DEPTH_PACKING == 3200
		diffuseColor.a = opacity;
	#endif
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <logdepthbuf_fragment>
	float fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;
	#if DEPTH_PACKING == 3200
		gl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );
	#elif DEPTH_PACKING == 3201
		gl_FragColor = packDepthToRGBA( fragCoordZ );
	#elif DEPTH_PACKING == 3202
		gl_FragColor = vec4( packDepthToRGB( fragCoordZ ), 1.0 );
	#elif DEPTH_PACKING == 3203
		gl_FragColor = vec4( packDepthToRG( fragCoordZ ), 0.0, 1.0 );
	#endif
}`,KA=`#define DISTANCE
varying vec3 vWorldPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <skinbase_vertex>
	#include <morphinstance_vertex>
	#ifdef USE_DISPLACEMENTMAP
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <worldpos_vertex>
	#include <clipping_planes_vertex>
	vWorldPosition = worldPosition.xyz;
}`,jA=`#define DISTANCE
uniform vec3 referencePosition;
uniform float nearDistance;
uniform float farDistance;
varying vec3 vWorldPosition;
#include <common>
#include <packing>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <clipping_planes_pars_fragment>
void main () {
	vec4 diffuseColor = vec4( 1.0 );
	#include <clipping_planes_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	float dist = length( vWorldPosition - referencePosition );
	dist = ( dist - nearDistance ) / ( farDistance - nearDistance );
	dist = saturate( dist );
	gl_FragColor = packDepthToRGBA( dist );
}`,QA=`varying vec3 vWorldDirection;
#include <common>
void main() {
	vWorldDirection = transformDirection( position, modelMatrix );
	#include <begin_vertex>
	#include <project_vertex>
}`,tE=`uniform sampler2D tEquirect;
varying vec3 vWorldDirection;
#include <common>
void main() {
	vec3 direction = normalize( vWorldDirection );
	vec2 sampleUV = equirectUv( direction );
	gl_FragColor = texture2D( tEquirect, sampleUV );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
}`,eE=`uniform float scale;
attribute float lineDistance;
varying float vLineDistance;
#include <common>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	vLineDistance = scale * lineDistance;
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,iE=`uniform vec3 diffuse;
uniform float opacity;
uniform float dashSize;
uniform float totalSize;
varying float vLineDistance;
#include <common>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	if ( mod( vLineDistance, totalSize ) > dashSize ) {
		discard;
	}
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,nE=`#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#if defined ( USE_ENVMAP ) || defined ( USE_SKINNING )
		#include <beginnormal_vertex>
		#include <morphnormal_vertex>
		#include <skinbase_vertex>
		#include <skinnormal_vertex>
		#include <defaultnormal_vertex>
	#endif
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <fog_vertex>
}`,sE=`uniform vec3 diffuse;
uniform float opacity;
#ifndef FLAT_SHADED
	varying vec3 vNormal;
#endif
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	#ifdef USE_LIGHTMAP
		vec4 lightMapTexel = texture2D( lightMap, vLightMapUv );
		reflectedLight.indirectDiffuse += lightMapTexel.rgb * lightMapIntensity * RECIPROCAL_PI;
	#else
		reflectedLight.indirectDiffuse += vec3( 1.0 );
	#endif
	#include <aomap_fragment>
	reflectedLight.indirectDiffuse *= diffuseColor.rgb;
	vec3 outgoingLight = reflectedLight.indirectDiffuse;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,rE=`#define LAMBERT
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,oE=`#define LAMBERT
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_lambert_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_lambert_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,aE=`#define MATCAP
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <color_pars_vertex>
#include <displacementmap_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
	vViewPosition = - mvPosition.xyz;
}`,hE=`#define MATCAP
uniform vec3 diffuse;
uniform float opacity;
uniform sampler2D matcap;
varying vec3 vViewPosition;
#include <common>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	vec3 viewDir = normalize( vViewPosition );
	vec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );
	vec3 y = cross( viewDir, x );
	vec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;
	#ifdef USE_MATCAP
		vec4 matcapColor = texture2D( matcap, uv );
	#else
		vec4 matcapColor = vec4( vec3( mix( 0.2, 0.8, uv.y ) ), 1.0 );
	#endif
	vec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,lE=`#define NORMAL
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	vViewPosition = - mvPosition.xyz;
#endif
}`,cE=`#define NORMAL
uniform float opacity;
#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( USE_NORMALMAP_TANGENTSPACE )
	varying vec3 vViewPosition;
#endif
#include <packing>
#include <uv_pars_fragment>
#include <normal_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( 0.0, 0.0, 0.0, opacity );
	#include <clipping_planes_fragment>
	#include <logdepthbuf_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	gl_FragColor = vec4( packNormalToRGB( normal ), diffuseColor.a );
	#ifdef OPAQUE
		gl_FragColor.a = 1.0;
	#endif
}`,uE=`#define PHONG
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <envmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <envmap_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,dE=`#define PHONG
uniform vec3 diffuse;
uniform vec3 emissive;
uniform vec3 specular;
uniform float shininess;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_phong_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <specularmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <specularmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_phong_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;
	#include <envmap_fragment>
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,fE=`#define STANDARD
varying vec3 vViewPosition;
#ifdef USE_TRANSMISSION
	varying vec3 vWorldPosition;
#endif
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
#ifdef USE_TRANSMISSION
	vWorldPosition = worldPosition.xyz;
#endif
}`,pE=`#define STANDARD
#ifdef PHYSICAL
	#define IOR
	#define USE_SPECULAR
#endif
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float roughness;
uniform float metalness;
uniform float opacity;
#ifdef IOR
	uniform float ior;
#endif
#ifdef USE_SPECULAR
	uniform float specularIntensity;
	uniform vec3 specularColor;
	#ifdef USE_SPECULAR_COLORMAP
		uniform sampler2D specularColorMap;
	#endif
	#ifdef USE_SPECULAR_INTENSITYMAP
		uniform sampler2D specularIntensityMap;
	#endif
#endif
#ifdef USE_CLEARCOAT
	uniform float clearcoat;
	uniform float clearcoatRoughness;
#endif
#ifdef USE_DISPERSION
	uniform float dispersion;
#endif
#ifdef USE_IRIDESCENCE
	uniform float iridescence;
	uniform float iridescenceIOR;
	uniform float iridescenceThicknessMinimum;
	uniform float iridescenceThicknessMaximum;
#endif
#ifdef USE_SHEEN
	uniform vec3 sheenColor;
	uniform float sheenRoughness;
	#ifdef USE_SHEEN_COLORMAP
		uniform sampler2D sheenColorMap;
	#endif
	#ifdef USE_SHEEN_ROUGHNESSMAP
		uniform sampler2D sheenRoughnessMap;
	#endif
#endif
#ifdef USE_ANISOTROPY
	uniform vec2 anisotropyVector;
	#ifdef USE_ANISOTROPYMAP
		uniform sampler2D anisotropyMap;
	#endif
#endif
varying vec3 vViewPosition;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <iridescence_fragment>
#include <cube_uv_reflection_fragment>
#include <envmap_common_pars_fragment>
#include <envmap_physical_pars_fragment>
#include <fog_pars_fragment>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_physical_pars_fragment>
#include <transmission_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <clearcoat_pars_fragment>
#include <iridescence_pars_fragment>
#include <roughnessmap_pars_fragment>
#include <metalnessmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <roughnessmap_fragment>
	#include <metalnessmap_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <clearcoat_normal_fragment_begin>
	#include <clearcoat_normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_physical_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 totalDiffuse = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse;
	vec3 totalSpecular = reflectedLight.directSpecular + reflectedLight.indirectSpecular;
	#include <transmission_fragment>
	vec3 outgoingLight = totalDiffuse + totalSpecular + totalEmissiveRadiance;
	#ifdef USE_SHEEN
		float sheenEnergyComp = 1.0 - 0.157 * max3( material.sheenColor );
		outgoingLight = outgoingLight * sheenEnergyComp + sheenSpecularDirect + sheenSpecularIndirect;
	#endif
	#ifdef USE_CLEARCOAT
		float dotNVcc = saturate( dot( geometryClearcoatNormal, geometryViewDir ) );
		vec3 Fcc = F_Schlick( material.clearcoatF0, material.clearcoatF90, dotNVcc );
		outgoingLight = outgoingLight * ( 1.0 - material.clearcoat * Fcc ) + ( clearcoatSpecularDirect + clearcoatSpecularIndirect ) * material.clearcoat;
	#endif
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,mE=`#define TOON
varying vec3 vViewPosition;
#include <common>
#include <batching_pars_vertex>
#include <uv_pars_vertex>
#include <displacementmap_pars_vertex>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <normal_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <shadowmap_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <normal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <displacementmap_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	vViewPosition = - mvPosition.xyz;
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,gE=`#define TOON
uniform vec3 diffuse;
uniform vec3 emissive;
uniform float opacity;
#include <common>
#include <packing>
#include <dithering_pars_fragment>
#include <color_pars_fragment>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <aomap_pars_fragment>
#include <lightmap_pars_fragment>
#include <emissivemap_pars_fragment>
#include <gradientmap_pars_fragment>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <normal_pars_fragment>
#include <lights_toon_pars_fragment>
#include <shadowmap_pars_fragment>
#include <bumpmap_pars_fragment>
#include <normalmap_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	ReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );
	vec3 totalEmissiveRadiance = emissive;
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <color_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	#include <normal_fragment_begin>
	#include <normal_fragment_maps>
	#include <emissivemap_fragment>
	#include <lights_toon_fragment>
	#include <lights_fragment_begin>
	#include <lights_fragment_maps>
	#include <lights_fragment_end>
	#include <aomap_fragment>
	vec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
	#include <dithering_fragment>
}`,_E=`uniform float size;
uniform float scale;
#include <common>
#include <color_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
#ifdef USE_POINTS_UV
	varying vec2 vUv;
	uniform mat3 uvTransform;
#endif
void main() {
	#ifdef USE_POINTS_UV
		vUv = ( uvTransform * vec3( uv, 1 ) ).xy;
	#endif
	#include <color_vertex>
	#include <morphinstance_vertex>
	#include <morphcolor_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <project_vertex>
	gl_PointSize = size;
	#ifdef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );
	#endif
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <worldpos_vertex>
	#include <fog_vertex>
}`,yE=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <color_pars_fragment>
#include <map_particle_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_particle_fragment>
	#include <color_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
	#include <premultiplied_alpha_fragment>
}`,xE=`#include <common>
#include <batching_pars_vertex>
#include <fog_pars_vertex>
#include <morphtarget_pars_vertex>
#include <skinning_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <shadowmap_pars_vertex>
void main() {
	#include <batching_vertex>
	#include <beginnormal_vertex>
	#include <morphinstance_vertex>
	#include <morphnormal_vertex>
	#include <skinbase_vertex>
	#include <skinnormal_vertex>
	#include <defaultnormal_vertex>
	#include <begin_vertex>
	#include <morphtarget_vertex>
	#include <skinning_vertex>
	#include <project_vertex>
	#include <logdepthbuf_vertex>
	#include <worldpos_vertex>
	#include <shadowmap_vertex>
	#include <fog_vertex>
}`,vE=`uniform vec3 color;
uniform float opacity;
#include <common>
#include <packing>
#include <fog_pars_fragment>
#include <bsdfs>
#include <lights_pars_begin>
#include <logdepthbuf_pars_fragment>
#include <shadowmap_pars_fragment>
#include <shadowmask_pars_fragment>
void main() {
	#include <logdepthbuf_fragment>
	gl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,bE=`uniform float rotation;
uniform vec2 center;
#include <common>
#include <uv_pars_vertex>
#include <fog_pars_vertex>
#include <logdepthbuf_pars_vertex>
#include <clipping_planes_pars_vertex>
void main() {
	#include <uv_vertex>
	vec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );
	vec2 scale;
	scale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );
	scale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );
	#ifndef USE_SIZEATTENUATION
		bool isPerspective = isPerspectiveMatrix( projectionMatrix );
		if ( isPerspective ) scale *= - mvPosition.z;
	#endif
	vec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;
	vec2 rotatedPosition;
	rotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;
	rotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;
	mvPosition.xy += rotatedPosition;
	gl_Position = projectionMatrix * mvPosition;
	#include <logdepthbuf_vertex>
	#include <clipping_planes_vertex>
	#include <fog_vertex>
}`,ME=`uniform vec3 diffuse;
uniform float opacity;
#include <common>
#include <uv_pars_fragment>
#include <map_pars_fragment>
#include <alphamap_pars_fragment>
#include <alphatest_pars_fragment>
#include <alphahash_pars_fragment>
#include <fog_pars_fragment>
#include <logdepthbuf_pars_fragment>
#include <clipping_planes_pars_fragment>
void main() {
	vec4 diffuseColor = vec4( diffuse, opacity );
	#include <clipping_planes_fragment>
	vec3 outgoingLight = vec3( 0.0 );
	#include <logdepthbuf_fragment>
	#include <map_fragment>
	#include <alphamap_fragment>
	#include <alphatest_fragment>
	#include <alphahash_fragment>
	outgoingLight = diffuseColor.rgb;
	#include <opaque_fragment>
	#include <tonemapping_fragment>
	#include <colorspace_fragment>
	#include <fog_fragment>
}`,Yt={alphahash_fragment:W1,alphahash_pars_fragment:$1,alphamap_fragment:X1,alphamap_pars_fragment:q1,alphatest_fragment:Y1,alphatest_pars_fragment:Z1,aomap_fragment:J1,aomap_pars_fragment:K1,batching_pars_vertex:j1,batching_vertex:Q1,begin_vertex:tS,beginnormal_vertex:eS,bsdfs:iS,iridescence_fragment:nS,bumpmap_pars_fragment:sS,clipping_planes_fragment:rS,clipping_planes_pars_fragment:oS,clipping_planes_pars_vertex:aS,clipping_planes_vertex:hS,color_fragment:lS,color_pars_fragment:cS,color_pars_vertex:uS,color_vertex:dS,common:fS,cube_uv_reflection_fragment:pS,defaultnormal_vertex:mS,displacementmap_pars_vertex:gS,displacementmap_vertex:_S,emissivemap_fragment:yS,emissivemap_pars_fragment:xS,colorspace_fragment:vS,colorspace_pars_fragment:bS,envmap_fragment:MS,envmap_common_pars_fragment:wS,envmap_pars_fragment:SS,envmap_pars_vertex:AS,envmap_physical_pars_fragment:zS,envmap_vertex:ES,fog_vertex:TS,fog_pars_vertex:CS,fog_fragment:RS,fog_pars_fragment:PS,gradientmap_pars_fragment:IS,lightmap_pars_fragment:LS,lights_lambert_fragment:DS,lights_lambert_pars_fragment:OS,lights_pars_begin:FS,lights_toon_fragment:US,lights_toon_pars_fragment:NS,lights_phong_fragment:BS,lights_phong_pars_fragment:kS,lights_physical_fragment:VS,lights_physical_pars_fragment:HS,lights_fragment_begin:GS,lights_fragment_maps:WS,lights_fragment_end:$S,logdepthbuf_fragment:XS,logdepthbuf_pars_fragment:qS,logdepthbuf_pars_vertex:YS,logdepthbuf_vertex:ZS,map_fragment:JS,map_pars_fragment:KS,map_particle_fragment:jS,map_particle_pars_fragment:QS,metalnessmap_fragment:tA,metalnessmap_pars_fragment:eA,morphinstance_vertex:iA,morphcolor_vertex:nA,morphnormal_vertex:sA,morphtarget_pars_vertex:rA,morphtarget_vertex:oA,normal_fragment_begin:aA,normal_fragment_maps:hA,normal_pars_fragment:lA,normal_pars_vertex:cA,normal_vertex:uA,normalmap_pars_fragment:dA,clearcoat_normal_fragment_begin:fA,clearcoat_normal_fragment_maps:pA,clearcoat_pars_fragment:mA,iridescence_pars_fragment:gA,opaque_fragment:_A,packing:yA,premultiplied_alpha_fragment:xA,project_vertex:vA,dithering_fragment:bA,dithering_pars_fragment:MA,roughnessmap_fragment:wA,roughnessmap_pars_fragment:SA,shadowmap_pars_fragment:AA,shadowmap_pars_vertex:EA,shadowmap_vertex:TA,shadowmask_pars_fragment:CA,skinbase_vertex:RA,skinning_pars_vertex:PA,skinning_vertex:IA,skinnormal_vertex:LA,specularmap_fragment:DA,specularmap_pars_fragment:OA,tonemapping_fragment:FA,tonemapping_pars_fragment:zA,transmission_fragment:UA,transmission_pars_fragment:NA,uv_pars_fragment:BA,uv_pars_vertex:kA,uv_vertex:VA,worldpos_vertex:HA,background_vert:GA,background_frag:WA,backgroundCube_vert:$A,backgroundCube_frag:XA,cube_vert:qA,cube_frag:YA,depth_vert:ZA,depth_frag:JA,distanceRGBA_vert:KA,distanceRGBA_frag:jA,equirect_vert:QA,equirect_frag:tE,linedashed_vert:eE,linedashed_frag:iE,meshbasic_vert:nE,meshbasic_frag:sE,meshlambert_vert:rE,meshlambert_frag:oE,meshmatcap_vert:aE,meshmatcap_frag:hE,meshnormal_vert:lE,meshnormal_frag:cE,meshphong_vert:uE,meshphong_frag:dE,meshphysical_vert:fE,meshphysical_frag:pE,meshtoon_vert:mE,meshtoon_frag:gE,points_vert:_E,points_frag:yE,shadow_vert:xE,shadow_frag:vE,sprite_vert:bE,sprite_frag:ME},dt={common:{diffuse:{value:new vt(16777215)},opacity:{value:1},map:{value:null},mapTransform:{value:new Zt},alphaMap:{value:null},alphaMapTransform:{value:new Zt},alphaTest:{value:0}},specularmap:{specularMap:{value:null},specularMapTransform:{value:new Zt}},envmap:{envMap:{value:null},envMapRotation:{value:new Zt},flipEnvMap:{value:-1},reflectivity:{value:1},ior:{value:1.5},refractionRatio:{value:.98}},aomap:{aoMap:{value:null},aoMapIntensity:{value:1},aoMapTransform:{value:new Zt}},lightmap:{lightMap:{value:null},lightMapIntensity:{value:1},lightMapTransform:{value:new Zt}},bumpmap:{bumpMap:{value:null},bumpMapTransform:{value:new Zt},bumpScale:{value:1}},normalmap:{normalMap:{value:null},normalMapTransform:{value:new Zt},normalScale:{value:new Q(1,1)}},displacementmap:{displacementMap:{value:null},displacementMapTransform:{value:new Zt},displacementScale:{value:1},displacementBias:{value:0}},emissivemap:{emissiveMap:{value:null},emissiveMapTransform:{value:new Zt}},metalnessmap:{metalnessMap:{value:null},metalnessMapTransform:{value:new Zt}},roughnessmap:{roughnessMap:{value:null},roughnessMapTransform:{value:new Zt}},gradientmap:{gradientMap:{value:null}},fog:{fogDensity:{value:25e-5},fogNear:{value:1},fogFar:{value:2e3},fogColor:{value:new vt(16777215)}},lights:{ambientLightColor:{value:[]},lightProbe:{value:[]},directionalLights:{value:[],properties:{direction:{},color:{}}},directionalLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},directionalShadowMap:{value:[]},directionalShadowMatrix:{value:[]},spotLights:{value:[],properties:{color:{},position:{},direction:{},distance:{},coneCos:{},penumbraCos:{},decay:{}}},spotLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{}}},spotLightMap:{value:[]},spotShadowMap:{value:[]},spotLightMatrix:{value:[]},pointLights:{value:[],properties:{color:{},position:{},decay:{},distance:{}}},pointLightShadows:{value:[],properties:{shadowIntensity:1,shadowBias:{},shadowNormalBias:{},shadowRadius:{},shadowMapSize:{},shadowCameraNear:{},shadowCameraFar:{}}},pointShadowMap:{value:[]},pointShadowMatrix:{value:[]},hemisphereLights:{value:[],properties:{direction:{},skyColor:{},groundColor:{}}},rectAreaLights:{value:[],properties:{color:{},position:{},width:{},height:{}}},ltc_1:{value:null},ltc_2:{value:null}},points:{diffuse:{value:new vt(16777215)},opacity:{value:1},size:{value:1},scale:{value:1},map:{value:null},alphaMap:{value:null},alphaMapTransform:{value:new Zt},alphaTest:{value:0},uvTransform:{value:new Zt}},sprite:{diffuse:{value:new vt(16777215)},opacity:{value:1},center:{value:new Q(.5,.5)},rotation:{value:0},map:{value:null},mapTransform:{value:new Zt},alphaMap:{value:null},alphaMapTransform:{value:new Zt},alphaTest:{value:0}}},vi={basic:{uniforms:_i([dt.common,dt.specularmap,dt.envmap,dt.aomap,dt.lightmap,dt.fog]),vertexShader:Yt.meshbasic_vert,fragmentShader:Yt.meshbasic_frag},lambert:{uniforms:_i([dt.common,dt.specularmap,dt.envmap,dt.aomap,dt.lightmap,dt.emissivemap,dt.bumpmap,dt.normalmap,dt.displacementmap,dt.fog,dt.lights,{emissive:{value:new vt(0)}}]),vertexShader:Yt.meshlambert_vert,fragmentShader:Yt.meshlambert_frag},phong:{uniforms:_i([dt.common,dt.specularmap,dt.envmap,dt.aomap,dt.lightmap,dt.emissivemap,dt.bumpmap,dt.normalmap,dt.displacementmap,dt.fog,dt.lights,{emissive:{value:new vt(0)},specular:{value:new vt(1118481)},shininess:{value:30}}]),vertexShader:Yt.meshphong_vert,fragmentShader:Yt.meshphong_frag},standard:{uniforms:_i([dt.common,dt.envmap,dt.aomap,dt.lightmap,dt.emissivemap,dt.bumpmap,dt.normalmap,dt.displacementmap,dt.roughnessmap,dt.metalnessmap,dt.fog,dt.lights,{emissive:{value:new vt(0)},roughness:{value:1},metalness:{value:0},envMapIntensity:{value:1}}]),vertexShader:Yt.meshphysical_vert,fragmentShader:Yt.meshphysical_frag},toon:{uniforms:_i([dt.common,dt.aomap,dt.lightmap,dt.emissivemap,dt.bumpmap,dt.normalmap,dt.displacementmap,dt.gradientmap,dt.fog,dt.lights,{emissive:{value:new vt(0)}}]),vertexShader:Yt.meshtoon_vert,fragmentShader:Yt.meshtoon_frag},matcap:{uniforms:_i([dt.common,dt.bumpmap,dt.normalmap,dt.displacementmap,dt.fog,{matcap:{value:null}}]),vertexShader:Yt.meshmatcap_vert,fragmentShader:Yt.meshmatcap_frag},points:{uniforms:_i([dt.points,dt.fog]),vertexShader:Yt.points_vert,fragmentShader:Yt.points_frag},dashed:{uniforms:_i([dt.common,dt.fog,{scale:{value:1},dashSize:{value:1},totalSize:{value:2}}]),vertexShader:Yt.linedashed_vert,fragmentShader:Yt.linedashed_frag},depth:{uniforms:_i([dt.common,dt.displacementmap]),vertexShader:Yt.depth_vert,fragmentShader:Yt.depth_frag},normal:{uniforms:_i([dt.common,dt.bumpmap,dt.normalmap,dt.displacementmap,{opacity:{value:1}}]),vertexShader:Yt.meshnormal_vert,fragmentShader:Yt.meshnormal_frag},sprite:{uniforms:_i([dt.sprite,dt.fog]),vertexShader:Yt.sprite_vert,fragmentShader:Yt.sprite_frag},background:{uniforms:{uvTransform:{value:new Zt},t2D:{value:null},backgroundIntensity:{value:1}},vertexShader:Yt.background_vert,fragmentShader:Yt.background_frag},backgroundCube:{uniforms:{envMap:{value:null},flipEnvMap:{value:-1},backgroundBlurriness:{value:0},backgroundIntensity:{value:1},backgroundRotation:{value:new Zt}},vertexShader:Yt.backgroundCube_vert,fragmentShader:Yt.backgroundCube_frag},cube:{uniforms:{tCube:{value:null},tFlip:{value:-1},opacity:{value:1}},vertexShader:Yt.cube_vert,fragmentShader:Yt.cube_frag},equirect:{uniforms:{tEquirect:{value:null}},vertexShader:Yt.equirect_vert,fragmentShader:Yt.equirect_frag},distanceRGBA:{uniforms:_i([dt.common,dt.displacementmap,{referencePosition:{value:new R},nearDistance:{value:1},farDistance:{value:1e3}}]),vertexShader:Yt.distanceRGBA_vert,fragmentShader:Yt.distanceRGBA_frag},shadow:{uniforms:_i([dt.lights,dt.fog,{color:{value:new vt(0)},opacity:{value:1}}]),vertexShader:Yt.shadow_vert,fragmentShader:Yt.shadow_frag}};vi.physical={uniforms:_i([vi.standard.uniforms,{clearcoat:{value:0},clearcoatMap:{value:null},clearcoatMapTransform:{value:new Zt},clearcoatNormalMap:{value:null},clearcoatNormalMapTransform:{value:new Zt},clearcoatNormalScale:{value:new Q(1,1)},clearcoatRoughness:{value:0},clearcoatRoughnessMap:{value:null},clearcoatRoughnessMapTransform:{value:new Zt},dispersion:{value:0},iridescence:{value:0},iridescenceMap:{value:null},iridescenceMapTransform:{value:new Zt},iridescenceIOR:{value:1.3},iridescenceThicknessMinimum:{value:100},iridescenceThicknessMaximum:{value:400},iridescenceThicknessMap:{value:null},iridescenceThicknessMapTransform:{value:new Zt},sheen:{value:0},sheenColor:{value:new vt(0)},sheenColorMap:{value:null},sheenColorMapTransform:{value:new Zt},sheenRoughness:{value:1},sheenRoughnessMap:{value:null},sheenRoughnessMapTransform:{value:new Zt},transmission:{value:0},transmissionMap:{value:null},transmissionMapTransform:{value:new Zt},transmissionSamplerSize:{value:new Q},transmissionSamplerMap:{value:null},thickness:{value:0},thicknessMap:{value:null},thicknessMapTransform:{value:new Zt},attenuationDistance:{value:0},attenuationColor:{value:new vt(0)},specularColor:{value:new vt(1,1,1)},specularColorMap:{value:null},specularColorMapTransform:{value:new Zt},specularIntensity:{value:1},specularIntensityMap:{value:null},specularIntensityMapTransform:{value:new Zt},anisotropyVector:{value:new Q},anisotropyMap:{value:null},anisotropyMapTransform:{value:new Zt}}]),vertexShader:Yt.meshphysical_vert,fragmentShader:Yt.meshphysical_frag};const Yl={r:0,b:0,g:0},hr=new Tn,wE=new Ft;function SE(r,t,e,i,n,s,o){const a=new vt(0);let h=s===!0?0:1,l,c,u=null,d=0,f=null;function p(x){let y=x.isScene===!0?x.background:null;return y&&y.isTexture&&(y=(x.backgroundBlurriness>0?e:t).get(y)),y}function _(x){let y=!1;const v=p(x);v===null?m(a,h):v&&v.isColor&&(m(v,1),y=!0);const E=r.xr.getEnvironmentBlendMode();E==="additive"?i.buffers.color.setClear(0,0,0,1,o):E==="alpha-blend"&&i.buffers.color.setClear(0,0,0,0,o),(r.autoClear||y)&&(i.buffers.depth.setTest(!0),i.buffers.depth.setMask(!0),i.buffers.color.setMask(!0),r.clear(r.autoClearColor,r.autoClearDepth,r.autoClearStencil))}function g(x,y){const v=p(y);v&&(v.isCubeTexture||v.mapping===pa)?(c===void 0&&(c=new ge(new Js(1,1,1),new hn({name:"BackgroundCubeMaterial",uniforms:ca(vi.backgroundCube.uniforms),vertexShader:vi.backgroundCube.vertexShader,fragmentShader:vi.backgroundCube.fragmentShader,side:wi,depthTest:!1,depthWrite:!1,fog:!1})),c.geometry.deleteAttribute("normal"),c.geometry.deleteAttribute("uv"),c.onBeforeRender=function(E,b,w){this.matrixWorld.copyPosition(w.matrixWorld)},Object.defineProperty(c.material,"envMap",{get:function(){return this.uniforms.envMap.value}}),n.update(c)),hr.copy(y.backgroundRotation),hr.x*=-1,hr.y*=-1,hr.z*=-1,v.isCubeTexture&&v.isRenderTargetTexture===!1&&(hr.y*=-1,hr.z*=-1),c.material.uniforms.envMap.value=v,c.material.uniforms.flipEnvMap.value=v.isCubeTexture&&v.isRenderTargetTexture===!1?-1:1,c.material.uniforms.backgroundBlurriness.value=y.backgroundBlurriness,c.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,c.material.uniforms.backgroundRotation.value.setFromMatrix4(wE.makeRotationFromEuler(hr)),c.material.toneMapped=ae.getTransfer(v.colorSpace)!==ve,(u!==v||d!==v.version||f!==r.toneMapping)&&(c.material.needsUpdate=!0,u=v,d=v.version,f=r.toneMapping),c.layers.enableAll(),x.unshift(c,c.geometry,c.material,0,0,null)):v&&v.isTexture&&(l===void 0&&(l=new ge(new _a(2,2),new hn({name:"BackgroundMaterial",uniforms:ca(vi.background.uniforms),vertexShader:vi.background.vertexShader,fragmentShader:vi.background.fragmentShader,side:ms,depthTest:!1,depthWrite:!1,fog:!1})),l.geometry.deleteAttribute("normal"),Object.defineProperty(l.material,"map",{get:function(){return this.uniforms.t2D.value}}),n.update(l)),l.material.uniforms.t2D.value=v,l.material.uniforms.backgroundIntensity.value=y.backgroundIntensity,l.material.toneMapped=ae.getTransfer(v.colorSpace)!==ve,v.matrixAutoUpdate===!0&&v.updateMatrix(),l.material.uniforms.uvTransform.value.copy(v.matrix),(u!==v||d!==v.version||f!==r.toneMapping)&&(l.material.needsUpdate=!0,u=v,d=v.version,f=r.toneMapping),l.layers.enableAll(),x.unshift(l,l.geometry,l.material,0,0,null))}function m(x,y){x.getRGB(Yl,Dv(r)),i.buffers.color.setClear(Yl.r,Yl.g,Yl.b,y,o)}return{getClearColor:function(){return a},setClearColor:function(x,y=1){a.set(x),h=y,m(a,h)},getClearAlpha:function(){return h},setClearAlpha:function(x){h=x,m(a,h)},render:_,addToRenderList:g}}function AE(r,t){const e=r.getParameter(r.MAX_VERTEX_ATTRIBS),i={},n=d(null);let s=n,o=!1;function a(M,I,N,O,B){let Y=!1;const $=u(O,N,I);s!==$&&(s=$,l(s.object)),Y=f(M,O,N,B),Y&&p(M,O,N,B),B!==null&&t.update(B,r.ELEMENT_ARRAY_BUFFER),(Y||o)&&(o=!1,v(M,I,N,O),B!==null&&r.bindBuffer(r.ELEMENT_ARRAY_BUFFER,t.get(B).buffer))}function h(){return r.createVertexArray()}function l(M){return r.bindVertexArray(M)}function c(M){return r.deleteVertexArray(M)}function u(M,I,N){const O=N.wireframe===!0;let B=i[M.id];B===void 0&&(B={},i[M.id]=B);let Y=B[I.id];Y===void 0&&(Y={},B[I.id]=Y);let $=Y[O];return $===void 0&&($=d(h()),Y[O]=$),$}function d(M){const I=[],N=[],O=[];for(let B=0;B<e;B++)I[B]=0,N[B]=0,O[B]=0;return{geometry:null,program:null,wireframe:!1,newAttributes:I,enabledAttributes:N,attributeDivisors:O,object:M,attributes:{},index:null}}function f(M,I,N,O){const B=s.attributes,Y=I.attributes;let $=0;const st=N.getAttributes();for(const X in st)if(st[X].location>=0){const pt=B[X];let mt=Y[X];if(mt===void 0&&(X==="instanceMatrix"&&M.instanceMatrix&&(mt=M.instanceMatrix),X==="instanceColor"&&M.instanceColor&&(mt=M.instanceColor)),pt===void 0||pt.attribute!==mt||mt&&pt.data!==mt.data)return!0;$++}return s.attributesNum!==$||s.index!==O}function p(M,I,N,O){const B={},Y=I.attributes;let $=0;const st=N.getAttributes();for(const X in st)if(st[X].location>=0){let pt=Y[X];pt===void 0&&(X==="instanceMatrix"&&M.instanceMatrix&&(pt=M.instanceMatrix),X==="instanceColor"&&M.instanceColor&&(pt=M.instanceColor));const mt={};mt.attribute=pt,pt&&pt.data&&(mt.data=pt.data),B[X]=mt,$++}s.attributes=B,s.attributesNum=$,s.index=O}function _(){const M=s.newAttributes;for(let I=0,N=M.length;I<N;I++)M[I]=0}function g(M){m(M,0)}function m(M,I){const N=s.newAttributes,O=s.enabledAttributes,B=s.attributeDivisors;N[M]=1,O[M]===0&&(r.enableVertexAttribArray(M),O[M]=1),B[M]!==I&&(r.vertexAttribDivisor(M,I),B[M]=I)}function x(){const M=s.newAttributes,I=s.enabledAttributes;for(let N=0,O=I.length;N<O;N++)I[N]!==M[N]&&(r.disableVertexAttribArray(N),I[N]=0)}function y(M,I,N,O,B,Y,$){$===!0?r.vertexAttribIPointer(M,I,N,B,Y):r.vertexAttribPointer(M,I,N,O,B,Y)}function v(M,I,N,O){_();const B=O.attributes,Y=N.getAttributes(),$=I.defaultAttributeValues;for(const st in Y){const X=Y[st];if(X.location>=0){let ut=B[st];if(ut===void 0&&(st==="instanceMatrix"&&M.instanceMatrix&&(ut=M.instanceMatrix),st==="instanceColor"&&M.instanceColor&&(ut=M.instanceColor)),ut!==void 0){const pt=ut.normalized,mt=ut.itemSize,Kt=t.get(ut);if(Kt===void 0)continue;const he=Kt.buffer,Z=Kt.type,ot=Kt.bytesPerElement,At=Z===r.INT||Z===r.UNSIGNED_INT||ut.gpuType===nd;if(ut.isInterleavedBufferAttribute){const _t=ut.data,Dt=_t.stride,Ht=ut.offset;if(_t.isInstancedInterleavedBuffer){for(let Bt=0;Bt<X.locationSize;Bt++)m(X.location+Bt,_t.meshPerAttribute);M.isInstancedMesh!==!0&&O._maxInstanceCount===void 0&&(O._maxInstanceCount=_t.meshPerAttribute*_t.count)}else for(let Bt=0;Bt<X.locationSize;Bt++)g(X.location+Bt);r.bindBuffer(r.ARRAY_BUFFER,he);for(let Bt=0;Bt<X.locationSize;Bt++)y(X.location+Bt,mt/X.locationSize,Z,pt,Dt*ot,(Ht+mt/X.locationSize*Bt)*ot,At)}else{if(ut.isInstancedBufferAttribute){for(let _t=0;_t<X.locationSize;_t++)m(X.location+_t,ut.meshPerAttribute);M.isInstancedMesh!==!0&&O._maxInstanceCount===void 0&&(O._maxInstanceCount=ut.meshPerAttribute*ut.count)}else for(let _t=0;_t<X.locationSize;_t++)g(X.location+_t);r.bindBuffer(r.ARRAY_BUFFER,he);for(let _t=0;_t<X.locationSize;_t++)y(X.location+_t,mt/X.locationSize,Z,pt,mt*ot,mt/X.locationSize*_t*ot,At)}}else if($!==void 0){const pt=$[st];if(pt!==void 0)switch(pt.length){case 2:r.vertexAttrib2fv(X.location,pt);break;case 3:r.vertexAttrib3fv(X.location,pt);break;case 4:r.vertexAttrib4fv(X.location,pt);break;default:r.vertexAttrib1fv(X.location,pt)}}}}x()}function E(){T();for(const M in i){const I=i[M];for(const N in I){const O=I[N];for(const B in O)c(O[B].object),delete O[B];delete I[N]}delete i[M]}}function b(M){if(i[M.id]===void 0)return;const I=i[M.id];for(const N in I){const O=I[N];for(const B in O)c(O[B].object),delete O[B];delete I[N]}delete i[M.id]}function w(M){for(const I in i){const N=i[I];if(N[M.id]===void 0)continue;const O=N[M.id];for(const B in O)c(O[B].object),delete O[B];delete N[M.id]}}function T(){S(),o=!0,s!==n&&(s=n,l(s.object))}function S(){n.geometry=null,n.program=null,n.wireframe=!1}return{setup:a,reset:T,resetDefaultState:S,dispose:E,releaseStatesOfGeometry:b,releaseStatesOfProgram:w,initAttributes:_,enableAttribute:g,disableUnusedAttributes:x}}function EE(r,t,e){let i;function n(l){i=l}function s(l,c){r.drawArrays(i,l,c),e.update(c,i,1)}function o(l,c,u){u!==0&&(r.drawArraysInstanced(i,l,c,u),e.update(c,i,u))}function a(l,c,u){if(u===0)return;t.get("WEBGL_multi_draw").multiDrawArraysWEBGL(i,l,0,c,0,u);let f=0;for(let p=0;p<u;p++)f+=c[p];e.update(f,i,1)}function h(l,c,u,d){if(u===0)return;const f=t.get("WEBGL_multi_draw");if(f===null)for(let p=0;p<l.length;p++)o(l[p],c[p],d[p]);else{f.multiDrawArraysInstancedWEBGL(i,l,0,c,0,d,0,u);let p=0;for(let _=0;_<u;_++)p+=c[_];for(let _=0;_<d.length;_++)e.update(p,i,d[_])}}this.setMode=n,this.render=s,this.renderInstances=o,this.renderMultiDraw=a,this.renderMultiDrawInstances=h}function TE(r,t,e,i){let n;function s(){if(n!==void 0)return n;if(t.has("EXT_texture_filter_anisotropic")===!0){const b=t.get("EXT_texture_filter_anisotropic");n=r.getParameter(b.MAX_TEXTURE_MAX_ANISOTROPY_EXT)}else n=0;return n}function o(b){return!(b!==Mi&&i.convert(b)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_FORMAT))}function a(b){const w=b===ma&&(t.has("EXT_color_buffer_half_float")||t.has("EXT_color_buffer_float"));return!(b!==Vn&&i.convert(b)!==r.getParameter(r.IMPLEMENTATION_COLOR_READ_TYPE)&&b!==Pi&&!w)}function h(b){if(b==="highp"){if(r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.HIGH_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.HIGH_FLOAT).precision>0)return"highp";b="mediump"}return b==="mediump"&&r.getShaderPrecisionFormat(r.VERTEX_SHADER,r.MEDIUM_FLOAT).precision>0&&r.getShaderPrecisionFormat(r.FRAGMENT_SHADER,r.MEDIUM_FLOAT).precision>0?"mediump":"lowp"}let l=e.precision!==void 0?e.precision:"highp";const c=h(l);c!==l&&(console.warn("THREE.WebGLRenderer:",l,"not supported, using",c,"instead."),l=c);const u=e.logarithmicDepthBuffer===!0,d=r.getParameter(r.MAX_TEXTURE_IMAGE_UNITS),f=r.getParameter(r.MAX_VERTEX_TEXTURE_IMAGE_UNITS),p=r.getParameter(r.MAX_TEXTURE_SIZE),_=r.getParameter(r.MAX_CUBE_MAP_TEXTURE_SIZE),g=r.getParameter(r.MAX_VERTEX_ATTRIBS),m=r.getParameter(r.MAX_VERTEX_UNIFORM_VECTORS),x=r.getParameter(r.MAX_VARYING_VECTORS),y=r.getParameter(r.MAX_FRAGMENT_UNIFORM_VECTORS),v=f>0,E=r.getParameter(r.MAX_SAMPLES);return{isWebGL2:!0,getMaxAnisotropy:s,getMaxPrecision:h,textureFormatReadable:o,textureTypeReadable:a,precision:l,logarithmicDepthBuffer:u,maxTextures:d,maxVertexTextures:f,maxTextureSize:p,maxCubemapSize:_,maxAttributes:g,maxVertexUniforms:m,maxVaryings:x,maxFragmentUniforms:y,vertexTextures:v,maxSamples:E}}function CE(r){const t=this;let e=null,i=0,n=!1,s=!1;const o=new Vs,a=new Zt,h={value:null,needsUpdate:!1};this.uniform=h,this.numPlanes=0,this.numIntersection=0,this.init=function(u,d){const f=u.length!==0||d||i!==0||n;return n=d,i=u.length,f},this.beginShadows=function(){s=!0,c(null)},this.endShadows=function(){s=!1},this.setGlobalState=function(u,d){e=c(u,d,0)},this.setState=function(u,d,f){const p=u.clippingPlanes,_=u.clipIntersection,g=u.clipShadows,m=r.get(u);if(!n||p===null||p.length===0||s&&!g)s?c(null):l();else{const x=s?0:i,y=x*4;let v=m.clippingState||null;h.value=v,v=c(p,d,y,f);for(let E=0;E!==y;++E)v[E]=e[E];m.clippingState=v,this.numIntersection=_?this.numPlanes:0,this.numPlanes+=x}};function l(){h.value!==e&&(h.value=e,h.needsUpdate=i>0),t.numPlanes=i,t.numIntersection=0}function c(u,d,f,p){const _=u!==null?u.length:0;let g=null;if(_!==0){if(g=h.value,p!==!0||g===null){const m=f+_*4,x=d.matrixWorldInverse;a.getNormalMatrix(x),(g===null||g.length<m)&&(g=new Float32Array(m));for(let y=0,v=f;y!==_;++y,v+=4)o.copy(u[y]).applyMatrix4(x,a),o.normal.toArray(g,v),g[v+3]=o.constant}h.value=g,h.needsUpdate=!0}return t.numPlanes=_,t.numIntersection=0,g}}function RE(r){let t=new WeakMap;function e(o,a){return a===xh?o.mapping=gs:a===vh&&(o.mapping=Ys),o}function i(o){if(o&&o.isTexture){const a=o.mapping;if(a===xh||a===vh)if(t.has(o)){const h=t.get(o).texture;return e(h,o.mapping)}else{const h=o.image;if(h&&h.height>0){const l=new Fv(h.height);return l.fromEquirectangularTexture(r,o),t.set(o,l),o.addEventListener("dispose",n),e(l.texture,o.mapping)}else return null}}return o}function n(o){const a=o.target;a.removeEventListener("dispose",n);const h=t.get(a);h!==void 0&&(t.delete(a),h.dispose())}function s(){t=new WeakMap}return{get:i,dispose:s}}class md extends pd{constructor(t=-1,e=1,i=1,n=-1,s=.1,o=2e3){super(),this.isOrthographicCamera=!0,this.type="OrthographicCamera",this.zoom=1,this.view=null,this.left=t,this.right=e,this.top=i,this.bottom=n,this.near=s,this.far=o,this.updateProjectionMatrix()}copy(t,e){return super.copy(t,e),this.left=t.left,this.right=t.right,this.top=t.top,this.bottom=t.bottom,this.near=t.near,this.far=t.far,this.zoom=t.zoom,this.view=t.view===null?null:Object.assign({},t.view),this}setViewOffset(t,e,i,n,s,o){this.view===null&&(this.view={enabled:!0,fullWidth:1,fullHeight:1,offsetX:0,offsetY:0,width:1,height:1}),this.view.enabled=!0,this.view.fullWidth=t,this.view.fullHeight=e,this.view.offsetX=i,this.view.offsetY=n,this.view.width=s,this.view.height=o,this.updateProjectionMatrix()}clearViewOffset(){this.view!==null&&(this.view.enabled=!1),this.updateProjectionMatrix()}updateProjectionMatrix(){const t=(this.right-this.left)/(2*this.zoom),e=(this.top-this.bottom)/(2*this.zoom),i=(this.right+this.left)/2,n=(this.top+this.bottom)/2;let s=i-t,o=i+t,a=n+e,h=n-e;if(this.view!==null&&this.view.enabled){const l=(this.right-this.left)/this.view.fullWidth/this.zoom,c=(this.top-this.bottom)/this.view.fullHeight/this.zoom;s+=l*this.view.offsetX,o=s+l*this.view.width,a-=c*this.view.offsetY,h=a-c*this.view.height}this.projectionMatrix.makeOrthographic(s,o,a,h,this.near,this.far,this.coordinateSystem),this.projectionMatrixInverse.copy(this.projectionMatrix).invert()}toJSON(t){const e=super.toJSON(t);return e.object.zoom=this.zoom,e.object.left=this.left,e.object.right=this.right,e.object.top=this.top,e.object.bottom=this.bottom,e.object.near=this.near,e.object.far=this.far,this.view!==null&&(e.object.view=Object.assign({},this.view)),e}}const Ko=4,k_=[.125,.215,.35,.446,.526,.582],Sr=20,If=new md,V_=new vt;let Lf=null,Df=0,Of=0,Ff=!1;const wr=(1+Math.sqrt(5))/2,Ao=1/wr,H_=[new R(-wr,Ao,0),new R(wr,Ao,0),new R(-Ao,0,wr),new R(Ao,0,wr),new R(0,wr,-Ao),new R(0,wr,Ao),new R(-1,1,-1),new R(1,1,-1),new R(-1,1,1),new R(1,1,1)];class Yp{constructor(t){this._renderer=t,this._pingPongRenderTarget=null,this._lodMax=0,this._cubeSize=0,this._lodPlanes=[],this._sizeLods=[],this._sigmas=[],this._blurMaterial=null,this._cubemapMaterial=null,this._equirectMaterial=null,this._compileMaterial(this._blurMaterial)}fromScene(t,e=0,i=.1,n=100){Lf=this._renderer.getRenderTarget(),Df=this._renderer.getActiveCubeFace(),Of=this._renderer.getActiveMipmapLevel(),Ff=this._renderer.xr.enabled,this._renderer.xr.enabled=!1,this._setSize(256);const s=this._allocateTargets();return s.depthBuffer=!0,this._sceneToCubeUV(t,i,n,s),e>0&&this._blur(s,0,0,e),this._applyPMREM(s),this._cleanup(s),s}fromEquirectangular(t,e=null){return this._fromTexture(t,e)}fromCubemap(t,e=null){return this._fromTexture(t,e)}compileCubemapShader(){this._cubemapMaterial===null&&(this._cubemapMaterial=$_(),this._compileMaterial(this._cubemapMaterial))}compileEquirectangularShader(){this._equirectMaterial===null&&(this._equirectMaterial=W_(),this._compileMaterial(this._equirectMaterial))}dispose(){this._dispose(),this._cubemapMaterial!==null&&this._cubemapMaterial.dispose(),this._equirectMaterial!==null&&this._equirectMaterial.dispose()}_setSize(t){this._lodMax=Math.floor(Math.log2(t)),this._cubeSize=Math.pow(2,this._lodMax)}_dispose(){this._blurMaterial!==null&&this._blurMaterial.dispose(),this._pingPongRenderTarget!==null&&this._pingPongRenderTarget.dispose();for(let t=0;t<this._lodPlanes.length;t++)this._lodPlanes[t].dispose()}_cleanup(t){this._renderer.setRenderTarget(Lf,Df,Of),this._renderer.xr.enabled=Ff,t.scissorTest=!1,Zl(t,0,0,t.width,t.height)}_fromTexture(t,e){t.mapping===gs||t.mapping===Ys?this._setSize(t.image.length===0?16:t.image[0].width||t.image[0].image.width):this._setSize(t.image.width/4),Lf=this._renderer.getRenderTarget(),Df=this._renderer.getActiveCubeFace(),Of=this._renderer.getActiveMipmapLevel(),Ff=this._renderer.xr.enabled,this._renderer.xr.enabled=!1;const i=e||this._allocateTargets();return this._textureToCubeUV(t,i),this._applyPMREM(i),this._cleanup(i),i}_allocateTargets(){const t=3*Math.max(this._cubeSize,112),e=4*this._cubeSize,i={magFilter:ke,minFilter:ke,generateMipmaps:!1,type:ma,format:Mi,colorSpace:xs,depthBuffer:!1},n=G_(t,e,i);if(this._pingPongRenderTarget===null||this._pingPongRenderTarget.width!==t||this._pingPongRenderTarget.height!==e){this._pingPongRenderTarget!==null&&this._dispose(),this._pingPongRenderTarget=G_(t,e,i);const{_lodMax:s}=this;({sizeLods:this._sizeLods,lodPlanes:this._lodPlanes,sigmas:this._sigmas}=PE(s)),this._blurMaterial=IE(s,t,e)}return n}_compileMaterial(t){const e=new ge(this._lodPlanes[0],t);this._renderer.compile(e,If)}_sceneToCubeUV(t,e,i,n){const a=new Ye(90,1,e,i),h=[1,-1,1,1,1,1],l=[1,1,1,-1,-1,-1],c=this._renderer,u=c.autoClear,d=c.toneMapping;c.getClearColor(V_),c.toneMapping=fs,c.autoClear=!1;const f=new Oe({name:"PMREM.Background",side:wi,depthWrite:!1,depthTest:!1}),p=new ge(new Js,f);let _=!1;const g=t.background;g?g.isColor&&(f.color.copy(g),t.background=null,_=!0):(f.color.copy(V_),_=!0);for(let m=0;m<6;m++){const x=m%3;x===0?(a.up.set(0,h[m],0),a.lookAt(l[m],0,0)):x===1?(a.up.set(0,0,h[m]),a.lookAt(0,l[m],0)):(a.up.set(0,h[m],0),a.lookAt(0,0,l[m]));const y=this._cubeSize;Zl(n,x*y,m>2?y:0,y,y),c.setRenderTarget(n),_&&c.render(p,a),c.render(t,a)}p.geometry.dispose(),p.material.dispose(),c.toneMapping=d,c.autoClear=u,t.background=g}_textureToCubeUV(t,e){const i=this._renderer,n=t.mapping===gs||t.mapping===Ys;n?(this._cubemapMaterial===null&&(this._cubemapMaterial=$_()),this._cubemapMaterial.uniforms.flipEnvMap.value=t.isRenderTargetTexture===!1?-1:1):this._equirectMaterial===null&&(this._equirectMaterial=W_());const s=n?this._cubemapMaterial:this._equirectMaterial,o=new ge(this._lodPlanes[0],s),a=s.uniforms;a.envMap.value=t;const h=this._cubeSize;Zl(e,0,0,3*h,2*h),i.setRenderTarget(e),i.render(o,If)}_applyPMREM(t){const e=this._renderer,i=e.autoClear;e.autoClear=!1;const n=this._lodPlanes.length;for(let s=1;s<n;s++){const o=Math.sqrt(this._sigmas[s]*this._sigmas[s]-this._sigmas[s-1]*this._sigmas[s-1]),a=H_[(n-s-1)%H_.length];this._blur(t,s-1,s,o,a)}e.autoClear=i}_blur(t,e,i,n,s){const o=this._pingPongRenderTarget;this._halfBlur(t,o,e,i,n,"latitudinal",s),this._halfBlur(o,t,i,i,n,"longitudinal",s)}_halfBlur(t,e,i,n,s,o,a){const h=this._renderer,l=this._blurMaterial;o!=="latitudinal"&&o!=="longitudinal"&&console.error("blur direction must be either latitudinal or longitudinal!");const c=3,u=new ge(this._lodPlanes[n],l),d=l.uniforms,f=this._sizeLods[i]-1,p=isFinite(s)?Math.PI/(2*f):2*Math.PI/(2*Sr-1),_=s/p,g=isFinite(s)?1+Math.floor(c*_):Sr;g>Sr&&console.warn(`sigmaRadians, ${s}, is too large and will clip, as it requested ${g} samples when the maximum is set to ${Sr}`);const m=[];let x=0;for(let w=0;w<Sr;++w){const T=w/_,S=Math.exp(-T*T/2);m.push(S),w===0?x+=S:w<g&&(x+=2*S)}for(let w=0;w<m.length;w++)m[w]=m[w]/x;d.envMap.value=t.texture,d.samples.value=g,d.weights.value=m,d.latitudinal.value=o==="latitudinal",a&&(d.poleAxis.value=a);const{_lodMax:y}=this;d.dTheta.value=p,d.mipInt.value=y-i;const v=this._sizeLods[n],E=3*v*(n>y-Ko?n-y+Ko:0),b=4*(this._cubeSize-v);Zl(e,E,b,3*v,2*v),h.setRenderTarget(e),h.render(u,If)}}function PE(r){const t=[],e=[],i=[];let n=r;const s=r-Ko+1+k_.length;for(let o=0;o<s;o++){const a=Math.pow(2,n);e.push(a);let h=1/a;o>r-Ko?h=k_[o-r+Ko-1]:o===0&&(h=0),i.push(h);const l=1/(a-2),c=-l,u=1+l,d=[c,c,u,c,u,u,c,c,u,u,c,u],f=6,p=6,_=3,g=2,m=1,x=new Float32Array(_*p*f),y=new Float32Array(g*p*f),v=new Float32Array(m*p*f);for(let b=0;b<f;b++){const w=b%3*2/3-1,T=b>2?0:-1,S=[w,T,0,w+2/3,T,0,w+2/3,T+1,0,w,T,0,w+2/3,T+1,0,w,T+1,0];x.set(S,_*p*b),y.set(d,g*p*b);const M=[b,b,b,b,b,b];v.set(M,m*p*b)}const E=new Xt;E.setAttribute("position",new _e(x,_)),E.setAttribute("uv",new _e(y,g)),E.setAttribute("faceIndex",new _e(v,m)),t.push(E),n>Ko&&n--}return{lodPlanes:t,sizeLods:e,sigmas:i}}function G_(r,t,e){const i=new En(r,t,e);return i.texture.mapping=pa,i.texture.name="PMREM.cubeUv",i.scissorTest=!0,i}function Zl(r,t,e,i,n){r.viewport.set(t,e,i,n),r.scissor.set(t,e,i,n)}function IE(r,t,e){const i=new Float32Array(Sr),n=new R(0,1,0);return new hn({name:"SphericalGaussianBlur",defines:{n:Sr,CUBEUV_TEXEL_WIDTH:1/t,CUBEUV_TEXEL_HEIGHT:1/e,CUBEUV_MAX_MIP:`${r}.0`},uniforms:{envMap:{value:null},samples:{value:1},weights:{value:i},latitudinal:{value:!1},dTheta:{value:0},mipInt:{value:0},poleAxis:{value:n}},vertexShader:Fm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;
			uniform int samples;
			uniform float weights[ n ];
			uniform bool latitudinal;
			uniform float dTheta;
			uniform float mipInt;
			uniform vec3 poleAxis;

			#define ENVMAP_TYPE_CUBE_UV
			#include <cube_uv_reflection_fragment>

			vec3 getSample( float theta, vec3 axis ) {

				float cosTheta = cos( theta );
				// Rodrigues' axis-angle rotation
				vec3 sampleDirection = vOutputDirection * cosTheta
					+ cross( axis, vOutputDirection ) * sin( theta )
					+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );

				return bilinearCubeUV( envMap, sampleDirection, mipInt );

			}

			void main() {

				vec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );

				if ( all( equal( axis, vec3( 0.0 ) ) ) ) {

					axis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );

				}

				axis = normalize( axis );

				gl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );
				gl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );

				for ( int i = 1; i < n; i++ ) {

					if ( i >= samples ) {

						break;

					}

					float theta = dTheta * float( i );
					gl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );
					gl_FragColor.rgb += weights[ i ] * getSample( theta, axis );

				}

			}
		`,blending:ds,depthTest:!1,depthWrite:!1})}function W_(){return new hn({name:"EquirectangularToCubeUV",uniforms:{envMap:{value:null}},vertexShader:Fm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			varying vec3 vOutputDirection;

			uniform sampler2D envMap;

			#include <common>

			void main() {

				vec3 outputDirection = normalize( vOutputDirection );
				vec2 uv = equirectUv( outputDirection );

				gl_FragColor = vec4( texture2D ( envMap, uv ).rgb, 1.0 );

			}
		`,blending:ds,depthTest:!1,depthWrite:!1})}function $_(){return new hn({name:"CubemapToCubeUV",uniforms:{envMap:{value:null},flipEnvMap:{value:-1}},vertexShader:Fm(),fragmentShader:`

			precision mediump float;
			precision mediump int;

			uniform float flipEnvMap;

			varying vec3 vOutputDirection;

			uniform samplerCube envMap;

			void main() {

				gl_FragColor = textureCube( envMap, vec3( flipEnvMap * vOutputDirection.x, vOutputDirection.yz ) );

			}
		`,blending:ds,depthTest:!1,depthWrite:!1})}function Fm(){return`

		precision mediump float;
		precision mediump int;

		attribute float faceIndex;

		varying vec3 vOutputDirection;

		// RH coordinate system; PMREM face-indexing convention
		vec3 getDirection( vec2 uv, float face ) {

			uv = 2.0 * uv - 1.0;

			vec3 direction = vec3( uv, 1.0 );

			if ( face == 0.0 ) {

				direction = direction.zyx; // ( 1, v, u ) pos x

			} else if ( face == 1.0 ) {

				direction = direction.xzy;
				direction.xz *= -1.0; // ( -u, 1, -v ) pos y

			} else if ( face == 2.0 ) {

				direction.x *= -1.0; // ( -u, v, 1 ) pos z

			} else if ( face == 3.0 ) {

				direction = direction.zyx;
				direction.xz *= -1.0; // ( -1, v, -u ) neg x

			} else if ( face == 4.0 ) {

				direction = direction.xzy;
				direction.xy *= -1.0; // ( -u, -1, v ) neg y

			} else if ( face == 5.0 ) {

				direction.z *= -1.0; // ( u, v, -1 ) neg z

			}

			return direction;

		}

		void main() {

			vOutputDirection = getDirection( uv, faceIndex );
			gl_Position = vec4( position, 1.0 );

		}
	`}function LE(r){let t=new WeakMap,e=null;function i(a){if(a&&a.isTexture){const h=a.mapping,l=h===xh||h===vh,c=h===gs||h===Ys;if(l||c){let u=t.get(a);const d=u!==void 0?u.texture.pmremVersion:0;if(a.isRenderTargetTexture&&a.pmremVersion!==d)return e===null&&(e=new Yp(r)),u=l?e.fromEquirectangular(a,u):e.fromCubemap(a,u),u.texture.pmremVersion=a.pmremVersion,t.set(a,u),u.texture;if(u!==void 0)return u.texture;{const f=a.image;return l&&f&&f.height>0||c&&f&&n(f)?(e===null&&(e=new Yp(r)),u=l?e.fromEquirectangular(a):e.fromCubemap(a),u.texture.pmremVersion=a.pmremVersion,t.set(a,u),a.addEventListener("dispose",s),u.texture):null}}}return a}function n(a){let h=0;const l=6;for(let c=0;c<l;c++)a[c]!==void 0&&h++;return h===l}function s(a){const h=a.target;h.removeEventListener("dispose",s);const l=t.get(h);l!==void 0&&(t.delete(h),l.dispose())}function o(){t=new WeakMap,e!==null&&(e.dispose(),e=null)}return{get:i,dispose:o}}function DE(r){const t={};function e(i){if(t[i]!==void 0)return t[i];let n;switch(i){case"WEBGL_depth_texture":n=r.getExtension("WEBGL_depth_texture")||r.getExtension("MOZ_WEBGL_depth_texture")||r.getExtension("WEBKIT_WEBGL_depth_texture");break;case"EXT_texture_filter_anisotropic":n=r.getExtension("EXT_texture_filter_anisotropic")||r.getExtension("MOZ_EXT_texture_filter_anisotropic")||r.getExtension("WEBKIT_EXT_texture_filter_anisotropic");break;case"WEBGL_compressed_texture_s3tc":n=r.getExtension("WEBGL_compressed_texture_s3tc")||r.getExtension("MOZ_WEBGL_compressed_texture_s3tc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_s3tc");break;case"WEBGL_compressed_texture_pvrtc":n=r.getExtension("WEBGL_compressed_texture_pvrtc")||r.getExtension("WEBKIT_WEBGL_compressed_texture_pvrtc");break;default:n=r.getExtension(i)}return t[i]=n,n}return{has:function(i){return e(i)!==null},init:function(){e("EXT_color_buffer_float"),e("WEBGL_clip_cull_distance"),e("OES_texture_float_linear"),e("EXT_color_buffer_half_float"),e("WEBGL_multisampled_render_to_texture"),e("WEBGL_render_shared_exponent")},get:function(i){const n=e(i);return n===null&&ia("THREE.WebGLRenderer: "+i+" extension not supported."),n}}}function OE(r,t,e,i){const n={},s=new WeakMap;function o(u){const d=u.target;d.index!==null&&t.remove(d.index);for(const p in d.attributes)t.remove(d.attributes[p]);for(const p in d.morphAttributes){const _=d.morphAttributes[p];for(let g=0,m=_.length;g<m;g++)t.remove(_[g])}d.removeEventListener("dispose",o),delete n[d.id];const f=s.get(d);f&&(t.remove(f),s.delete(d)),i.releaseStatesOfGeometry(d),d.isInstancedBufferGeometry===!0&&delete d._maxInstanceCount,e.memory.geometries--}function a(u,d){return n[d.id]===!0||(d.addEventListener("dispose",o),n[d.id]=!0,e.memory.geometries++),d}function h(u){const d=u.attributes;for(const p in d)t.update(d[p],r.ARRAY_BUFFER);const f=u.morphAttributes;for(const p in f){const _=f[p];for(let g=0,m=_.length;g<m;g++)t.update(_[g],r.ARRAY_BUFFER)}}function l(u){const d=[],f=u.index,p=u.attributes.position;let _=0;if(f!==null){const x=f.array;_=f.version;for(let y=0,v=x.length;y<v;y+=3){const E=x[y+0],b=x[y+1],w=x[y+2];d.push(E,b,b,w,w,E)}}else if(p!==void 0){const x=p.array;_=p.version;for(let y=0,v=x.length/3-1;y<v;y+=3){const E=y+0,b=y+1,w=y+2;d.push(E,b,b,w,w,E)}}else return;const g=new(Sv(d)?Om:Dm)(d,1);g.version=_;const m=s.get(u);m&&t.remove(m),s.set(u,g)}function c(u){const d=s.get(u);if(d){const f=u.index;f!==null&&d.version<f.version&&l(u)}else l(u);return s.get(u)}return{get:a,update:h,getWireframeAttribute:c}}function FE(r,t,e){let i;function n(d){i=d}let s,o;function a(d){s=d.type,o=d.bytesPerElement}function h(d,f){r.drawElements(i,f,s,d*o),e.update(f,i,1)}function l(d,f,p){p!==0&&(r.drawElementsInstanced(i,f,s,d*o,p),e.update(f,i,p))}function c(d,f,p){if(p===0)return;t.get("WEBGL_multi_draw").multiDrawElementsWEBGL(i,f,0,s,d,0,p);let g=0;for(let m=0;m<p;m++)g+=f[m];e.update(g,i,1)}function u(d,f,p,_){if(p===0)return;const g=t.get("WEBGL_multi_draw");if(g===null)for(let m=0;m<d.length;m++)l(d[m]/o,f[m],_[m]);else{g.multiDrawElementsInstancedWEBGL(i,f,0,s,d,0,_,0,p);let m=0;for(let x=0;x<p;x++)m+=f[x];for(let x=0;x<_.length;x++)e.update(m,i,_[x])}}this.setMode=n,this.setIndex=a,this.render=h,this.renderInstances=l,this.renderMultiDraw=c,this.renderMultiDrawInstances=u}function zE(r){const t={geometries:0,textures:0},e={frame:0,calls:0,triangles:0,points:0,lines:0};function i(s,o,a){switch(e.calls++,o){case r.TRIANGLES:e.triangles+=a*(s/3);break;case r.LINES:e.lines+=a*(s/2);break;case r.LINE_STRIP:e.lines+=a*(s-1);break;case r.LINE_LOOP:e.lines+=a*s;break;case r.POINTS:e.points+=a*s;break;default:console.error("THREE.WebGLInfo: Unknown draw mode:",o);break}}function n(){e.calls=0,e.triangles=0,e.points=0,e.lines=0}return{memory:t,render:e,programs:null,autoReset:!0,reset:n,update:i}}function UE(r,t,e){const i=new WeakMap,n=new se;function s(o,a,h){const l=o.morphTargetInfluences,c=a.morphAttributes.position||a.morphAttributes.normal||a.morphAttributes.color,u=c!==void 0?c.length:0;let d=i.get(a);if(d===void 0||d.count!==u){let S=function(){w.dispose(),i.delete(a),a.removeEventListener("dispose",S)};d!==void 0&&d.texture.dispose();const f=a.morphAttributes.position!==void 0,p=a.morphAttributes.normal!==void 0,_=a.morphAttributes.color!==void 0,g=a.morphAttributes.position||[],m=a.morphAttributes.normal||[],x=a.morphAttributes.color||[];let y=0;f===!0&&(y=1),p===!0&&(y=2),_===!0&&(y=3);let v=a.attributes.position.count*y,E=1;v>t.maxTextureSize&&(E=Math.ceil(v/t.maxTextureSize),v=t.maxTextureSize);const b=new Float32Array(v*E*4*u),w=new ud(b,v,E,u);w.type=Pi,w.needsUpdate=!0;const T=y*4;for(let M=0;M<u;M++){const I=g[M],N=m[M],O=x[M],B=v*E*4*M;for(let Y=0;Y<I.count;Y++){const $=Y*T;f===!0&&(n.fromBufferAttribute(I,Y),b[B+$+0]=n.x,b[B+$+1]=n.y,b[B+$+2]=n.z,b[B+$+3]=0),p===!0&&(n.fromBufferAttribute(N,Y),b[B+$+4]=n.x,b[B+$+5]=n.y,b[B+$+6]=n.z,b[B+$+7]=0),_===!0&&(n.fromBufferAttribute(O,Y),b[B+$+8]=n.x,b[B+$+9]=n.y,b[B+$+10]=n.z,b[B+$+11]=O.itemSize===4?n.w:1)}}d={count:u,texture:w,size:new Q(v,E)},i.set(a,d),a.addEventListener("dispose",S)}if(o.isInstancedMesh===!0&&o.morphTexture!==null)h.getUniforms().setValue(r,"morphTexture",o.morphTexture,e);else{let f=0;for(let _=0;_<l.length;_++)f+=l[_];const p=a.morphTargetsRelative?1:1-f;h.getUniforms().setValue(r,"morphTargetBaseInfluence",p),h.getUniforms().setValue(r,"morphTargetInfluences",l)}h.getUniforms().setValue(r,"morphTargetsTexture",d.texture,e),h.getUniforms().setValue(r,"morphTargetsTextureSize",d.size)}return{update:s}}function NE(r,t,e,i){let n=new WeakMap;function s(h){const l=i.render.frame,c=h.geometry,u=t.get(h,c);if(n.get(u)!==l&&(t.update(u),n.set(u,l)),h.isInstancedMesh&&(h.hasEventListener("dispose",a)===!1&&h.addEventListener("dispose",a),n.get(h)!==l&&(e.update(h.instanceMatrix,r.ARRAY_BUFFER),h.instanceColor!==null&&e.update(h.instanceColor,r.ARRAY_BUFFER),n.set(h,l))),h.isSkinnedMesh){const d=h.skeleton;n.get(d)!==l&&(d.update(),n.set(d,l))}return u}function o(){n=new WeakMap}function a(h){const l=h.target;l.removeEventListener("dispose",a),e.remove(l.instanceMatrix),l.instanceColor!==null&&e.remove(l.instanceColor)}return{update:s,dispose:o}}class zm extends Ke{constructor(t,e,i,n,s,o,a,h,l,c=Lr){if(c!==Lr&&c!==Vr)throw new Error("DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat");i===void 0&&c===Lr&&(i=_s),i===void 0&&c===Vr&&(i=kr),super(null,n,s,o,a,h,c,i,l),this.isDepthTexture=!0,this.image={width:t,height:e},this.magFilter=a!==void 0?a:Ze,this.minFilter=h!==void 0?h:Ze,this.flipY=!1,this.generateMipmaps=!1,this.compareFunction=null}copy(t){return super.copy(t),this.compareFunction=t.compareFunction,this}toJSON(t){const e=super.toJSON(t);return this.compareFunction!==null&&(e.compareFunction=this.compareFunction),e}}const Nv=new Ke,X_=new zm(1,1),Bv=new ud,kv=new Lm,Vv=new Jh,q_=[],Y_=[],Z_=new Float32Array(16),J_=new Float32Array(9),K_=new Float32Array(4);function ya(r,t,e){const i=r[0];if(i<=0||i>0)return r;const n=t*e;let s=q_[n];if(s===void 0&&(s=new Float32Array(n),q_[n]=s),t!==0){i.toArray(s,0);for(let o=1,a=0;o!==t;++o)a+=e,r[o].toArray(s,a)}return s}function Ge(r,t){if(r.length!==t.length)return!1;for(let e=0,i=r.length;e<i;e++)if(r[e]!==t[e])return!1;return!0}function We(r,t){for(let e=0,i=t.length;e<i;e++)r[e]=t[e]}function gd(r,t){let e=Y_[t];e===void 0&&(e=new Int32Array(t),Y_[t]=e);for(let i=0;i!==t;++i)e[i]=r.allocateTextureUnit();return e}function BE(r,t){const e=this.cache;e[0]!==t&&(r.uniform1f(this.addr,t),e[0]=t)}function kE(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2f(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Ge(e,t))return;r.uniform2fv(this.addr,t),We(e,t)}}function VE(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3f(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else if(t.r!==void 0)(e[0]!==t.r||e[1]!==t.g||e[2]!==t.b)&&(r.uniform3f(this.addr,t.r,t.g,t.b),e[0]=t.r,e[1]=t.g,e[2]=t.b);else{if(Ge(e,t))return;r.uniform3fv(this.addr,t),We(e,t)}}function HE(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4f(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Ge(e,t))return;r.uniform4fv(this.addr,t),We(e,t)}}function GE(r,t){const e=this.cache,i=t.elements;if(i===void 0){if(Ge(e,t))return;r.uniformMatrix2fv(this.addr,!1,t),We(e,t)}else{if(Ge(e,i))return;K_.set(i),r.uniformMatrix2fv(this.addr,!1,K_),We(e,i)}}function WE(r,t){const e=this.cache,i=t.elements;if(i===void 0){if(Ge(e,t))return;r.uniformMatrix3fv(this.addr,!1,t),We(e,t)}else{if(Ge(e,i))return;J_.set(i),r.uniformMatrix3fv(this.addr,!1,J_),We(e,i)}}function $E(r,t){const e=this.cache,i=t.elements;if(i===void 0){if(Ge(e,t))return;r.uniformMatrix4fv(this.addr,!1,t),We(e,t)}else{if(Ge(e,i))return;Z_.set(i),r.uniformMatrix4fv(this.addr,!1,Z_),We(e,i)}}function XE(r,t){const e=this.cache;e[0]!==t&&(r.uniform1i(this.addr,t),e[0]=t)}function qE(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2i(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Ge(e,t))return;r.uniform2iv(this.addr,t),We(e,t)}}function YE(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3i(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Ge(e,t))return;r.uniform3iv(this.addr,t),We(e,t)}}function ZE(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4i(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Ge(e,t))return;r.uniform4iv(this.addr,t),We(e,t)}}function JE(r,t){const e=this.cache;e[0]!==t&&(r.uniform1ui(this.addr,t),e[0]=t)}function KE(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y)&&(r.uniform2ui(this.addr,t.x,t.y),e[0]=t.x,e[1]=t.y);else{if(Ge(e,t))return;r.uniform2uiv(this.addr,t),We(e,t)}}function jE(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z)&&(r.uniform3ui(this.addr,t.x,t.y,t.z),e[0]=t.x,e[1]=t.y,e[2]=t.z);else{if(Ge(e,t))return;r.uniform3uiv(this.addr,t),We(e,t)}}function QE(r,t){const e=this.cache;if(t.x!==void 0)(e[0]!==t.x||e[1]!==t.y||e[2]!==t.z||e[3]!==t.w)&&(r.uniform4ui(this.addr,t.x,t.y,t.z,t.w),e[0]=t.x,e[1]=t.y,e[2]=t.z,e[3]=t.w);else{if(Ge(e,t))return;r.uniform4uiv(this.addr,t),We(e,t)}}function tT(r,t,e){const i=this.cache,n=e.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n);let s;this.type===r.SAMPLER_2D_SHADOW?(X_.compareFunction=Pm,s=X_):s=Nv,e.setTexture2D(t||s,n)}function eT(r,t,e){const i=this.cache,n=e.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),e.setTexture3D(t||kv,n)}function iT(r,t,e){const i=this.cache,n=e.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),e.setTextureCube(t||Vv,n)}function nT(r,t,e){const i=this.cache,n=e.allocateTextureUnit();i[0]!==n&&(r.uniform1i(this.addr,n),i[0]=n),e.setTexture2DArray(t||Bv,n)}function sT(r){switch(r){case 5126:return BE;case 35664:return kE;case 35665:return VE;case 35666:return HE;case 35674:return GE;case 35675:return WE;case 35676:return $E;case 5124:case 35670:return XE;case 35667:case 35671:return qE;case 35668:case 35672:return YE;case 35669:case 35673:return ZE;case 5125:return JE;case 36294:return KE;case 36295:return jE;case 36296:return QE;case 35678:case 36198:case 36298:case 36306:case 35682:return tT;case 35679:case 36299:case 36307:return eT;case 35680:case 36300:case 36308:case 36293:return iT;case 36289:case 36303:case 36311:case 36292:return nT}}function rT(r,t){r.uniform1fv(this.addr,t)}function oT(r,t){const e=ya(t,this.size,2);r.uniform2fv(this.addr,e)}function aT(r,t){const e=ya(t,this.size,3);r.uniform3fv(this.addr,e)}function hT(r,t){const e=ya(t,this.size,4);r.uniform4fv(this.addr,e)}function lT(r,t){const e=ya(t,this.size,4);r.uniformMatrix2fv(this.addr,!1,e)}function cT(r,t){const e=ya(t,this.size,9);r.uniformMatrix3fv(this.addr,!1,e)}function uT(r,t){const e=ya(t,this.size,16);r.uniformMatrix4fv(this.addr,!1,e)}function dT(r,t){r.uniform1iv(this.addr,t)}function fT(r,t){r.uniform2iv(this.addr,t)}function pT(r,t){r.uniform3iv(this.addr,t)}function mT(r,t){r.uniform4iv(this.addr,t)}function gT(r,t){r.uniform1uiv(this.addr,t)}function _T(r,t){r.uniform2uiv(this.addr,t)}function yT(r,t){r.uniform3uiv(this.addr,t)}function xT(r,t){r.uniform4uiv(this.addr,t)}function vT(r,t,e){const i=this.cache,n=t.length,s=gd(e,n);Ge(i,s)||(r.uniform1iv(this.addr,s),We(i,s));for(let o=0;o!==n;++o)e.setTexture2D(t[o]||Nv,s[o])}function bT(r,t,e){const i=this.cache,n=t.length,s=gd(e,n);Ge(i,s)||(r.uniform1iv(this.addr,s),We(i,s));for(let o=0;o!==n;++o)e.setTexture3D(t[o]||kv,s[o])}function MT(r,t,e){const i=this.cache,n=t.length,s=gd(e,n);Ge(i,s)||(r.uniform1iv(this.addr,s),We(i,s));for(let o=0;o!==n;++o)e.setTextureCube(t[o]||Vv,s[o])}function wT(r,t,e){const i=this.cache,n=t.length,s=gd(e,n);Ge(i,s)||(r.uniform1iv(this.addr,s),We(i,s));for(let o=0;o!==n;++o)e.setTexture2DArray(t[o]||Bv,s[o])}function ST(r){switch(r){case 5126:return rT;case 35664:return oT;case 35665:return aT;case 35666:return hT;case 35674:return lT;case 35675:return cT;case 35676:return uT;case 5124:case 35670:return dT;case 35667:case 35671:return fT;case 35668:case 35672:return pT;case 35669:case 35673:return mT;case 5125:return gT;case 36294:return _T;case 36295:return yT;case 36296:return xT;case 35678:case 36198:case 36298:case 36306:case 35682:return vT;case 35679:case 36299:case 36307:return bT;case 35680:case 36300:case 36308:case 36293:return MT;case 36289:case 36303:case 36311:case 36292:return wT}}class AT{constructor(t,e,i){this.id=t,this.addr=i,this.cache=[],this.type=e.type,this.setValue=sT(e.type)}}class ET{constructor(t,e,i){this.id=t,this.addr=i,this.cache=[],this.type=e.type,this.size=e.size,this.setValue=ST(e.type)}}class TT{constructor(t){this.id=t,this.seq=[],this.map={}}setValue(t,e,i){const n=this.seq;for(let s=0,o=n.length;s!==o;++s){const a=n[s];a.setValue(t,e[a.id],i)}}}const zf=/(\w+)(\])?(\[|\.)?/g;function j_(r,t){r.seq.push(t),r.map[t.id]=t}function CT(r,t,e){const i=r.name,n=i.length;for(zf.lastIndex=0;;){const s=zf.exec(i),o=zf.lastIndex;let a=s[1];const h=s[2]==="]",l=s[3];if(h&&(a=a|0),l===void 0||l==="["&&o+2===n){j_(e,l===void 0?new AT(a,r,t):new ET(a,r,t));break}else{let u=e.map[a];u===void 0&&(u=new TT(a),j_(e,u)),e=u}}}class hu{constructor(t,e){this.seq=[],this.map={};const i=t.getProgramParameter(e,t.ACTIVE_UNIFORMS);for(let n=0;n<i;++n){const s=t.getActiveUniform(e,n),o=t.getUniformLocation(e,s.name);CT(s,o,this)}}setValue(t,e,i,n){const s=this.map[e];s!==void 0&&s.setValue(t,i,n)}setOptional(t,e,i){const n=e[i];n!==void 0&&this.setValue(t,i,n)}static upload(t,e,i,n){for(let s=0,o=e.length;s!==o;++s){const a=e[s],h=i[a.id];h.needsUpdate!==!1&&a.setValue(t,h.value,n)}}static seqWithValue(t,e){const i=[];for(let n=0,s=t.length;n!==s;++n){const o=t[n];o.id in e&&i.push(o)}return i}}function Q_(r,t,e){const i=r.createShader(t);return r.shaderSource(i,e),r.compileShader(i),i}const RT=37297;let PT=0;function IT(r,t){const e=r.split(`
`),i=[],n=Math.max(t-6,0),s=Math.min(t+6,e.length);for(let o=n;o<s;o++){const a=o+1;i.push(`${a===t?">":" "} ${a}: ${e[o]}`)}return i.join(`
`)}function LT(r){const t=ae.getPrimaries(ae.workingColorSpace),e=ae.getPrimaries(r);let i;switch(t===e?i="":t===Th&&e===Eh?i="LinearDisplayP3ToLinearSRGB":t===Eh&&e===Th&&(i="LinearSRGBToLinearDisplayP3"),r){case xs:case Zh:return[i,"LinearTransferOETF"];case nn:case cd:return[i,"sRGBTransferOETF"];default:return console.warn("THREE.WebGLProgram: Unsupported color space:",r),[i,"LinearTransferOETF"]}}function t0(r,t,e){const i=r.getShaderParameter(t,r.COMPILE_STATUS),n=r.getShaderInfoLog(t).trim();if(i&&n==="")return"";const s=/ERROR: 0:(\d+)/.exec(n);if(s){const o=parseInt(s[1]);return e.toUpperCase()+`

`+n+`

`+IT(r.getShaderSource(t),o)}else return n}function DT(r,t){const e=LT(t);return`vec4 ${r}( vec4 value ) { return ${e[0]}( ${e[1]}( value ) ); }`}function OT(r,t){let e;switch(t){case tv:e="Linear";break;case ev:e="Reinhard";break;case iv:e="Cineon";break;case nv:e="ACESFilmic";break;case rv:e="AgX";break;case ov:e="Neutral";break;case sv:e="Custom";break;default:console.warn("THREE.WebGLProgram: Unsupported toneMapping:",t),e="Linear"}return"vec3 "+r+"( vec3 color ) { return "+e+"ToneMapping( color ); }"}const Jl=new R;function FT(){ae.getLuminanceCoefficients(Jl);const r=Jl.x.toFixed(4),t=Jl.y.toFixed(4),e=Jl.z.toFixed(4);return["float luminance( const in vec3 rgb ) {",`	const vec3 weights = vec3( ${r}, ${t}, ${e} );`,"	return dot( weights, rgb );","}"].join(`
`)}function zT(r){return[r.extensionClipCullDistance?"#extension GL_ANGLE_clip_cull_distance : require":"",r.extensionMultiDraw?"#extension GL_ANGLE_multi_draw : require":""].filter(ih).join(`
`)}function UT(r){const t=[];for(const e in r){const i=r[e];i!==!1&&t.push("#define "+e+" "+i)}return t.join(`
`)}function NT(r,t){const e={},i=r.getProgramParameter(t,r.ACTIVE_ATTRIBUTES);for(let n=0;n<i;n++){const s=r.getActiveAttrib(t,n),o=s.name;let a=1;s.type===r.FLOAT_MAT2&&(a=2),s.type===r.FLOAT_MAT3&&(a=3),s.type===r.FLOAT_MAT4&&(a=4),e[o]={type:s.type,location:r.getAttribLocation(t,o),locationSize:a}}return e}function ih(r){return r!==""}function e0(r,t){const e=t.numSpotLightShadows+t.numSpotLightMaps-t.numSpotLightShadowsWithMaps;return r.replace(/NUM_DIR_LIGHTS/g,t.numDirLights).replace(/NUM_SPOT_LIGHTS/g,t.numSpotLights).replace(/NUM_SPOT_LIGHT_MAPS/g,t.numSpotLightMaps).replace(/NUM_SPOT_LIGHT_COORDS/g,e).replace(/NUM_RECT_AREA_LIGHTS/g,t.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g,t.numPointLights).replace(/NUM_HEMI_LIGHTS/g,t.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g,t.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS_WITH_MAPS/g,t.numSpotLightShadowsWithMaps).replace(/NUM_SPOT_LIGHT_SHADOWS/g,t.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g,t.numPointLightShadows)}function i0(r,t){return r.replace(/NUM_CLIPPING_PLANES/g,t.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g,t.numClippingPlanes-t.numClipIntersection)}const BT=/^[ \t]*#include +<([\w\d./]+)>/gm;function Zp(r){return r.replace(BT,VT)}const kT=new Map;function VT(r,t){let e=Yt[t];if(e===void 0){const i=kT.get(t);if(i!==void 0)e=Yt[i],console.warn('THREE.WebGLRenderer: Shader chunk "%s" has been deprecated. Use "%s" instead.',t,i);else throw new Error("Can not resolve #include <"+t+">")}return Zp(e)}const HT=/#pragma unroll_loop_start\s+for\s*\(\s*int\s+i\s*=\s*(\d+)\s*;\s*i\s*<\s*(\d+)\s*;\s*i\s*\+\+\s*\)\s*{([\s\S]+?)}\s+#pragma unroll_loop_end/g;function n0(r){return r.replace(HT,GT)}function GT(r,t,e,i){let n="";for(let s=parseInt(t);s<parseInt(e);s++)n+=i.replace(/\[\s*i\s*\]/g,"[ "+s+" ]").replace(/UNROLLED_LOOP_INDEX/g,s);return n}function s0(r){let t=`precision ${r.precision} float;
	precision ${r.precision} int;
	precision ${r.precision} sampler2D;
	precision ${r.precision} samplerCube;
	precision ${r.precision} sampler3D;
	precision ${r.precision} sampler2DArray;
	precision ${r.precision} sampler2DShadow;
	precision ${r.precision} samplerCubeShadow;
	precision ${r.precision} sampler2DArrayShadow;
	precision ${r.precision} isampler2D;
	precision ${r.precision} isampler3D;
	precision ${r.precision} isamplerCube;
	precision ${r.precision} isampler2DArray;
	precision ${r.precision} usampler2D;
	precision ${r.precision} usampler3D;
	precision ${r.precision} usamplerCube;
	precision ${r.precision} usampler2DArray;
	`;return r.precision==="highp"?t+=`
#define HIGH_PRECISION`:r.precision==="mediump"?t+=`
#define MEDIUM_PRECISION`:r.precision==="lowp"&&(t+=`
#define LOW_PRECISION`),t}function WT(r){let t="SHADOWMAP_TYPE_BASIC";return r.shadowMapType===ym?t="SHADOWMAP_TYPE_PCF":r.shadowMapType===Ex?t="SHADOWMAP_TYPE_PCF_SOFT":r.shadowMapType===Fn&&(t="SHADOWMAP_TYPE_VSM"),t}function $T(r){let t="ENVMAP_TYPE_CUBE";if(r.envMap)switch(r.envMapMode){case gs:case Ys:t="ENVMAP_TYPE_CUBE";break;case pa:t="ENVMAP_TYPE_CUBE_UV";break}return t}function XT(r){let t="ENVMAP_MODE_REFLECTION";if(r.envMap)switch(r.envMapMode){case Ys:t="ENVMAP_MODE_REFRACTION";break}return t}function qT(r){let t="ENVMAP_BLENDING_NONE";if(r.envMap)switch(r.combine){case qh:t="ENVMAP_BLENDING_MULTIPLY";break;case jx:t="ENVMAP_BLENDING_MIX";break;case Qx:t="ENVMAP_BLENDING_ADD";break}return t}function YT(r){const t=r.envMapCubeUVHeight;if(t===null)return null;const e=Math.log2(t)-2,i=1/t;return{texelWidth:1/(3*Math.max(Math.pow(2,e),7*16)),texelHeight:i,maxMip:e}}function ZT(r,t,e,i){const n=r.getContext(),s=e.defines;let o=e.vertexShader,a=e.fragmentShader;const h=WT(e),l=$T(e),c=XT(e),u=qT(e),d=YT(e),f=zT(e),p=UT(s),_=n.createProgram();let g,m,x=e.glslVersion?"#version "+e.glslVersion+`
`:"";e.isRawShaderMaterial?(g=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p].filter(ih).join(`
`),g.length>0&&(g+=`
`),m=["#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p].filter(ih).join(`
`),m.length>0&&(m+=`
`)):(g=[s0(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p,e.extensionClipCullDistance?"#define USE_CLIP_DISTANCE":"",e.batching?"#define USE_BATCHING":"",e.batchingColor?"#define USE_BATCHING_COLOR":"",e.instancing?"#define USE_INSTANCING":"",e.instancingColor?"#define USE_INSTANCING_COLOR":"",e.instancingMorph?"#define USE_INSTANCING_MORPH":"",e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.map?"#define USE_MAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+c:"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.displacementMap?"#define USE_DISPLACEMENTMAP":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.mapUv?"#define MAP_UV "+e.mapUv:"",e.alphaMapUv?"#define ALPHAMAP_UV "+e.alphaMapUv:"",e.lightMapUv?"#define LIGHTMAP_UV "+e.lightMapUv:"",e.aoMapUv?"#define AOMAP_UV "+e.aoMapUv:"",e.emissiveMapUv?"#define EMISSIVEMAP_UV "+e.emissiveMapUv:"",e.bumpMapUv?"#define BUMPMAP_UV "+e.bumpMapUv:"",e.normalMapUv?"#define NORMALMAP_UV "+e.normalMapUv:"",e.displacementMapUv?"#define DISPLACEMENTMAP_UV "+e.displacementMapUv:"",e.metalnessMapUv?"#define METALNESSMAP_UV "+e.metalnessMapUv:"",e.roughnessMapUv?"#define ROUGHNESSMAP_UV "+e.roughnessMapUv:"",e.anisotropyMapUv?"#define ANISOTROPYMAP_UV "+e.anisotropyMapUv:"",e.clearcoatMapUv?"#define CLEARCOATMAP_UV "+e.clearcoatMapUv:"",e.clearcoatNormalMapUv?"#define CLEARCOAT_NORMALMAP_UV "+e.clearcoatNormalMapUv:"",e.clearcoatRoughnessMapUv?"#define CLEARCOAT_ROUGHNESSMAP_UV "+e.clearcoatRoughnessMapUv:"",e.iridescenceMapUv?"#define IRIDESCENCEMAP_UV "+e.iridescenceMapUv:"",e.iridescenceThicknessMapUv?"#define IRIDESCENCE_THICKNESSMAP_UV "+e.iridescenceThicknessMapUv:"",e.sheenColorMapUv?"#define SHEEN_COLORMAP_UV "+e.sheenColorMapUv:"",e.sheenRoughnessMapUv?"#define SHEEN_ROUGHNESSMAP_UV "+e.sheenRoughnessMapUv:"",e.specularMapUv?"#define SPECULARMAP_UV "+e.specularMapUv:"",e.specularColorMapUv?"#define SPECULAR_COLORMAP_UV "+e.specularColorMapUv:"",e.specularIntensityMapUv?"#define SPECULAR_INTENSITYMAP_UV "+e.specularIntensityMapUv:"",e.transmissionMapUv?"#define TRANSMISSIONMAP_UV "+e.transmissionMapUv:"",e.thicknessMapUv?"#define THICKNESSMAP_UV "+e.thicknessMapUv:"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.flatShading?"#define FLAT_SHADED":"",e.skinning?"#define USE_SKINNING":"",e.morphTargets?"#define USE_MORPHTARGETS":"",e.morphNormals&&e.flatShading===!1?"#define USE_MORPHNORMALS":"",e.morphColors?"#define USE_MORPHCOLORS":"",e.morphTargetsCount>0?"#define MORPHTARGETS_TEXTURE_STRIDE "+e.morphTextureStride:"",e.morphTargetsCount>0?"#define MORPHTARGETS_COUNT "+e.morphTargetsCount:"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.sizeAttenuation?"#define USE_SIZEATTENUATION":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 modelMatrix;","uniform mat4 modelViewMatrix;","uniform mat4 projectionMatrix;","uniform mat4 viewMatrix;","uniform mat3 normalMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;","#ifdef USE_INSTANCING","	attribute mat4 instanceMatrix;","#endif","#ifdef USE_INSTANCING_COLOR","	attribute vec3 instanceColor;","#endif","#ifdef USE_INSTANCING_MORPH","	uniform sampler2D morphTexture;","#endif","attribute vec3 position;","attribute vec3 normal;","attribute vec2 uv;","#ifdef USE_UV1","	attribute vec2 uv1;","#endif","#ifdef USE_UV2","	attribute vec2 uv2;","#endif","#ifdef USE_UV3","	attribute vec2 uv3;","#endif","#ifdef USE_TANGENT","	attribute vec4 tangent;","#endif","#if defined( USE_COLOR_ALPHA )","	attribute vec4 color;","#elif defined( USE_COLOR )","	attribute vec3 color;","#endif","#ifdef USE_SKINNING","	attribute vec4 skinIndex;","	attribute vec4 skinWeight;","#endif",`
`].filter(ih).join(`
`),m=[s0(e),"#define SHADER_TYPE "+e.shaderType,"#define SHADER_NAME "+e.shaderName,p,e.useFog&&e.fog?"#define USE_FOG":"",e.useFog&&e.fogExp2?"#define FOG_EXP2":"",e.alphaToCoverage?"#define ALPHA_TO_COVERAGE":"",e.map?"#define USE_MAP":"",e.matcap?"#define USE_MATCAP":"",e.envMap?"#define USE_ENVMAP":"",e.envMap?"#define "+l:"",e.envMap?"#define "+c:"",e.envMap?"#define "+u:"",d?"#define CUBEUV_TEXEL_WIDTH "+d.texelWidth:"",d?"#define CUBEUV_TEXEL_HEIGHT "+d.texelHeight:"",d?"#define CUBEUV_MAX_MIP "+d.maxMip+".0":"",e.lightMap?"#define USE_LIGHTMAP":"",e.aoMap?"#define USE_AOMAP":"",e.bumpMap?"#define USE_BUMPMAP":"",e.normalMap?"#define USE_NORMALMAP":"",e.normalMapObjectSpace?"#define USE_NORMALMAP_OBJECTSPACE":"",e.normalMapTangentSpace?"#define USE_NORMALMAP_TANGENTSPACE":"",e.emissiveMap?"#define USE_EMISSIVEMAP":"",e.anisotropy?"#define USE_ANISOTROPY":"",e.anisotropyMap?"#define USE_ANISOTROPYMAP":"",e.clearcoat?"#define USE_CLEARCOAT":"",e.clearcoatMap?"#define USE_CLEARCOATMAP":"",e.clearcoatRoughnessMap?"#define USE_CLEARCOAT_ROUGHNESSMAP":"",e.clearcoatNormalMap?"#define USE_CLEARCOAT_NORMALMAP":"",e.dispersion?"#define USE_DISPERSION":"",e.iridescence?"#define USE_IRIDESCENCE":"",e.iridescenceMap?"#define USE_IRIDESCENCEMAP":"",e.iridescenceThicknessMap?"#define USE_IRIDESCENCE_THICKNESSMAP":"",e.specularMap?"#define USE_SPECULARMAP":"",e.specularColorMap?"#define USE_SPECULAR_COLORMAP":"",e.specularIntensityMap?"#define USE_SPECULAR_INTENSITYMAP":"",e.roughnessMap?"#define USE_ROUGHNESSMAP":"",e.metalnessMap?"#define USE_METALNESSMAP":"",e.alphaMap?"#define USE_ALPHAMAP":"",e.alphaTest?"#define USE_ALPHATEST":"",e.alphaHash?"#define USE_ALPHAHASH":"",e.sheen?"#define USE_SHEEN":"",e.sheenColorMap?"#define USE_SHEEN_COLORMAP":"",e.sheenRoughnessMap?"#define USE_SHEEN_ROUGHNESSMAP":"",e.transmission?"#define USE_TRANSMISSION":"",e.transmissionMap?"#define USE_TRANSMISSIONMAP":"",e.thicknessMap?"#define USE_THICKNESSMAP":"",e.vertexTangents&&e.flatShading===!1?"#define USE_TANGENT":"",e.vertexColors||e.instancingColor||e.batchingColor?"#define USE_COLOR":"",e.vertexAlphas?"#define USE_COLOR_ALPHA":"",e.vertexUv1s?"#define USE_UV1":"",e.vertexUv2s?"#define USE_UV2":"",e.vertexUv3s?"#define USE_UV3":"",e.pointsUvs?"#define USE_POINTS_UV":"",e.gradientMap?"#define USE_GRADIENTMAP":"",e.flatShading?"#define FLAT_SHADED":"",e.doubleSided?"#define DOUBLE_SIDED":"",e.flipSided?"#define FLIP_SIDED":"",e.shadowMapEnabled?"#define USE_SHADOWMAP":"",e.shadowMapEnabled?"#define "+h:"",e.premultipliedAlpha?"#define PREMULTIPLIED_ALPHA":"",e.numLightProbes>0?"#define USE_LIGHT_PROBES":"",e.decodeVideoTexture?"#define DECODE_VIDEO_TEXTURE":"",e.logarithmicDepthBuffer?"#define USE_LOGDEPTHBUF":"","uniform mat4 viewMatrix;","uniform vec3 cameraPosition;","uniform bool isOrthographic;",e.toneMapping!==fs?"#define TONE_MAPPING":"",e.toneMapping!==fs?Yt.tonemapping_pars_fragment:"",e.toneMapping!==fs?OT("toneMapping",e.toneMapping):"",e.dithering?"#define DITHERING":"",e.opaque?"#define OPAQUE":"",Yt.colorspace_pars_fragment,DT("linearToOutputTexel",e.outputColorSpace),FT(),e.useDepthPacking?"#define DEPTH_PACKING "+e.depthPacking:"",`
`].filter(ih).join(`
`)),o=Zp(o),o=e0(o,e),o=i0(o,e),a=Zp(a),a=e0(a,e),a=i0(a,e),o=n0(o),a=n0(a),e.isRawShaderMaterial!==!0&&(x=`#version 300 es
`,g=[f,"#define attribute in","#define varying out","#define texture2D texture"].join(`
`)+`
`+g,m=["#define varying in",e.glslVersion===Xp?"":"layout(location = 0) out highp vec4 pc_fragColor;",e.glslVersion===Xp?"":"#define gl_FragColor pc_fragColor","#define gl_FragDepthEXT gl_FragDepth","#define texture2D texture","#define textureCube texture","#define texture2DProj textureProj","#define texture2DLodEXT textureLod","#define texture2DProjLodEXT textureProjLod","#define textureCubeLodEXT textureLod","#define texture2DGradEXT textureGrad","#define texture2DProjGradEXT textureProjGrad","#define textureCubeGradEXT textureGrad"].join(`
`)+`
`+m);const y=x+g+o,v=x+m+a,E=Q_(n,n.VERTEX_SHADER,y),b=Q_(n,n.FRAGMENT_SHADER,v);n.attachShader(_,E),n.attachShader(_,b),e.index0AttributeName!==void 0?n.bindAttribLocation(_,0,e.index0AttributeName):e.morphTargets===!0&&n.bindAttribLocation(_,0,"position"),n.linkProgram(_);function w(I){if(r.debug.checkShaderErrors){const N=n.getProgramInfoLog(_).trim(),O=n.getShaderInfoLog(E).trim(),B=n.getShaderInfoLog(b).trim();let Y=!0,$=!0;if(n.getProgramParameter(_,n.LINK_STATUS)===!1)if(Y=!1,typeof r.debug.onShaderError=="function")r.debug.onShaderError(n,_,E,b);else{const st=t0(n,E,"vertex"),X=t0(n,b,"fragment");console.error("THREE.WebGLProgram: Shader Error "+n.getError()+" - VALIDATE_STATUS "+n.getProgramParameter(_,n.VALIDATE_STATUS)+`

Material Name: `+I.name+`
Material Type: `+I.type+`

Program Info Log: `+N+`
`+st+`
`+X)}else N!==""?console.warn("THREE.WebGLProgram: Program Info Log:",N):(O===""||B==="")&&($=!1);$&&(I.diagnostics={runnable:Y,programLog:N,vertexShader:{log:O,prefix:g},fragmentShader:{log:B,prefix:m}})}n.deleteShader(E),n.deleteShader(b),T=new hu(n,_),S=NT(n,_)}let T;this.getUniforms=function(){return T===void 0&&w(this),T};let S;this.getAttributes=function(){return S===void 0&&w(this),S};let M=e.rendererExtensionParallelShaderCompile===!1;return this.isReady=function(){return M===!1&&(M=n.getProgramParameter(_,RT)),M},this.destroy=function(){i.releaseStatesOfProgram(this),n.deleteProgram(_),this.program=void 0},this.type=e.shaderType,this.name=e.shaderName,this.id=PT++,this.cacheKey=t,this.usedTimes=1,this.program=_,this.vertexShader=E,this.fragmentShader=b,this}let JT=0;class KT{constructor(){this.shaderCache=new Map,this.materialCache=new Map}update(t){const e=t.vertexShader,i=t.fragmentShader,n=this._getShaderStage(e),s=this._getShaderStage(i),o=this._getShaderCacheForMaterial(t);return o.has(n)===!1&&(o.add(n),n.usedTimes++),o.has(s)===!1&&(o.add(s),s.usedTimes++),this}remove(t){const e=this.materialCache.get(t);for(const i of e)i.usedTimes--,i.usedTimes===0&&this.shaderCache.delete(i.code);return this.materialCache.delete(t),this}getVertexShaderID(t){return this._getShaderStage(t.vertexShader).id}getFragmentShaderID(t){return this._getShaderStage(t.fragmentShader).id}dispose(){this.shaderCache.clear(),this.materialCache.clear()}_getShaderCacheForMaterial(t){const e=this.materialCache;let i=e.get(t);return i===void 0&&(i=new Set,e.set(t,i)),i}_getShaderStage(t){const e=this.shaderCache;let i=e.get(t);return i===void 0&&(i=new jT(t),e.set(t,i)),i}}class jT{constructor(t){this.id=JT++,this.code=t,this.usedTimes=0}}function QT(r,t,e,i,n,s,o){const a=new dd,h=new KT,l=new Set,c=[],u=n.logarithmicDepthBuffer,d=n.vertexTextures;let f=n.precision;const p={MeshDepthMaterial:"depth",MeshDistanceMaterial:"distanceRGBA",MeshNormalMaterial:"normal",MeshBasicMaterial:"basic",MeshLambertMaterial:"lambert",MeshPhongMaterial:"phong",MeshToonMaterial:"toon",MeshStandardMaterial:"physical",MeshPhysicalMaterial:"physical",MeshMatcapMaterial:"matcap",LineBasicMaterial:"basic",LineDashedMaterial:"dashed",PointsMaterial:"points",ShadowMaterial:"shadow",SpriteMaterial:"sprite"};function _(S){return l.add(S),S===0?"uv":`uv${S}`}function g(S,M,I,N,O){const B=N.fog,Y=O.geometry,$=S.isMeshStandardMaterial?N.environment:null,st=(S.isMeshStandardMaterial?e:t).get(S.envMap||$),X=st&&st.mapping===pa?st.image.height:null,ut=p[S.type];S.precision!==null&&(f=n.getMaxPrecision(S.precision),f!==S.precision&&console.warn("THREE.WebGLProgram.getParameters:",S.precision,"not supported, using",f,"instead."));const pt=Y.morphAttributes.position||Y.morphAttributes.normal||Y.morphAttributes.color,mt=pt!==void 0?pt.length:0;let Kt=0;Y.morphAttributes.position!==void 0&&(Kt=1),Y.morphAttributes.normal!==void 0&&(Kt=2),Y.morphAttributes.color!==void 0&&(Kt=3);let he,Z,ot,At;if(ut){const le=vi[ut];he=le.vertexShader,Z=le.fragmentShader}else he=S.vertexShader,Z=S.fragmentShader,h.update(S),ot=h.getVertexShaderID(S),At=h.getFragmentShaderID(S);const _t=r.getRenderTarget(),Dt=O.isInstancedMesh===!0,Ht=O.isBatchedMesh===!0,Bt=!!S.map,re=!!S.matcap,P=!!st,ht=!!S.aoMap,rt=!!S.lightMap,xt=!!S.bumpMap,K=!!S.normalMap,Ot=!!S.displacementMap,yt=!!S.emissiveMap,St=!!S.metalnessMap,L=!!S.roughnessMap,A=S.anisotropy>0,G=S.clearcoat>0,et=S.dispersion>0,tt=S.iridescence>0,nt=S.sheen>0,Lt=S.transmission>0,gt=A&&!!S.anisotropyMap,wt=G&&!!S.clearcoatMap,Wt=G&&!!S.clearcoatNormalMap,at=G&&!!S.clearcoatRoughnessMap,Mt=tt&&!!S.iridescenceMap,ee=tt&&!!S.iridescenceThicknessMap,Vt=nt&&!!S.sheenColorMap,Et=nt&&!!S.sheenRoughnessMap,Gt=!!S.specularMap,Qt=!!S.specularColorMap,we=!!S.specularIntensityMap,F=Lt&&!!S.transmissionMap,lt=Lt&&!!S.thicknessMap,j=!!S.gradientMap,it=!!S.alphaMap,ft=S.alphaTest>0,zt=!!S.alphaHash,ie=!!S.extensions;let Fe=fs;S.toneMapped&&(_t===null||_t.isXRRenderTarget===!0)&&(Fe=r.toneMapping);const je={shaderID:ut,shaderType:S.type,shaderName:S.name,vertexShader:he,fragmentShader:Z,defines:S.defines,customVertexShaderID:ot,customFragmentShaderID:At,isRawShaderMaterial:S.isRawShaderMaterial===!0,glslVersion:S.glslVersion,precision:f,batching:Ht,batchingColor:Ht&&O._colorsTexture!==null,instancing:Dt,instancingColor:Dt&&O.instanceColor!==null,instancingMorph:Dt&&O.morphTexture!==null,supportsVertexTextures:d,outputColorSpace:_t===null?r.outputColorSpace:_t.isXRRenderTarget===!0?_t.texture.colorSpace:xs,alphaToCoverage:!!S.alphaToCoverage,map:Bt,matcap:re,envMap:P,envMapMode:P&&st.mapping,envMapCubeUVHeight:X,aoMap:ht,lightMap:rt,bumpMap:xt,normalMap:K,displacementMap:d&&Ot,emissiveMap:yt,normalMapObjectSpace:K&&S.normalMapType===fv,normalMapTangentSpace:K&&S.normalMapType===Zs,metalnessMap:St,roughnessMap:L,anisotropy:A,anisotropyMap:gt,clearcoat:G,clearcoatMap:wt,clearcoatNormalMap:Wt,clearcoatRoughnessMap:at,dispersion:et,iridescence:tt,iridescenceMap:Mt,iridescenceThicknessMap:ee,sheen:nt,sheenColorMap:Vt,sheenRoughnessMap:Et,specularMap:Gt,specularColorMap:Qt,specularIntensityMap:we,transmission:Lt,transmissionMap:F,thicknessMap:lt,gradientMap:j,opaque:S.transparent===!1&&S.blending===Ir&&S.alphaToCoverage===!1,alphaMap:it,alphaTest:ft,alphaHash:zt,combine:S.combine,mapUv:Bt&&_(S.map.channel),aoMapUv:ht&&_(S.aoMap.channel),lightMapUv:rt&&_(S.lightMap.channel),bumpMapUv:xt&&_(S.bumpMap.channel),normalMapUv:K&&_(S.normalMap.channel),displacementMapUv:Ot&&_(S.displacementMap.channel),emissiveMapUv:yt&&_(S.emissiveMap.channel),metalnessMapUv:St&&_(S.metalnessMap.channel),roughnessMapUv:L&&_(S.roughnessMap.channel),anisotropyMapUv:gt&&_(S.anisotropyMap.channel),clearcoatMapUv:wt&&_(S.clearcoatMap.channel),clearcoatNormalMapUv:Wt&&_(S.clearcoatNormalMap.channel),clearcoatRoughnessMapUv:at&&_(S.clearcoatRoughnessMap.channel),iridescenceMapUv:Mt&&_(S.iridescenceMap.channel),iridescenceThicknessMapUv:ee&&_(S.iridescenceThicknessMap.channel),sheenColorMapUv:Vt&&_(S.sheenColorMap.channel),sheenRoughnessMapUv:Et&&_(S.sheenRoughnessMap.channel),specularMapUv:Gt&&_(S.specularMap.channel),specularColorMapUv:Qt&&_(S.specularColorMap.channel),specularIntensityMapUv:we&&_(S.specularIntensityMap.channel),transmissionMapUv:F&&_(S.transmissionMap.channel),thicknessMapUv:lt&&_(S.thicknessMap.channel),alphaMapUv:it&&_(S.alphaMap.channel),vertexTangents:!!Y.attributes.tangent&&(K||A),vertexColors:S.vertexColors,vertexAlphas:S.vertexColors===!0&&!!Y.attributes.color&&Y.attributes.color.itemSize===4,pointsUvs:O.isPoints===!0&&!!Y.attributes.uv&&(Bt||it),fog:!!B,useFog:S.fog===!0,fogExp2:!!B&&B.isFogExp2,flatShading:S.flatShading===!0,sizeAttenuation:S.sizeAttenuation===!0,logarithmicDepthBuffer:u,skinning:O.isSkinnedMesh===!0,morphTargets:Y.morphAttributes.position!==void 0,morphNormals:Y.morphAttributes.normal!==void 0,morphColors:Y.morphAttributes.color!==void 0,morphTargetsCount:mt,morphTextureStride:Kt,numDirLights:M.directional.length,numPointLights:M.point.length,numSpotLights:M.spot.length,numSpotLightMaps:M.spotLightMap.length,numRectAreaLights:M.rectArea.length,numHemiLights:M.hemi.length,numDirLightShadows:M.directionalShadowMap.length,numPointLightShadows:M.pointShadowMap.length,numSpotLightShadows:M.spotShadowMap.length,numSpotLightShadowsWithMaps:M.numSpotLightShadowsWithMaps,numLightProbes:M.numLightProbes,numClippingPlanes:o.numPlanes,numClipIntersection:o.numIntersection,dithering:S.dithering,shadowMapEnabled:r.shadowMap.enabled&&I.length>0,shadowMapType:r.shadowMap.type,toneMapping:Fe,decodeVideoTexture:Bt&&S.map.isVideoTexture===!0&&ae.getTransfer(S.map.colorSpace)===ve,premultipliedAlpha:S.premultipliedAlpha,doubleSided:S.side===fi,flipSided:S.side===wi,useDepthPacking:S.depthPacking>=0,depthPacking:S.depthPacking||0,index0AttributeName:S.index0AttributeName,extensionClipCullDistance:ie&&S.extensions.clipCullDistance===!0&&i.has("WEBGL_clip_cull_distance"),extensionMultiDraw:(ie&&S.extensions.multiDraw===!0||Ht)&&i.has("WEBGL_multi_draw"),rendererExtensionParallelShaderCompile:i.has("KHR_parallel_shader_compile"),customProgramCacheKey:S.customProgramCacheKey()};return je.vertexUv1s=l.has(1),je.vertexUv2s=l.has(2),je.vertexUv3s=l.has(3),l.clear(),je}function m(S){const M=[];if(S.shaderID?M.push(S.shaderID):(M.push(S.customVertexShaderID),M.push(S.customFragmentShaderID)),S.defines!==void 0)for(const I in S.defines)M.push(I),M.push(S.defines[I]);return S.isRawShaderMaterial===!1&&(x(M,S),y(M,S),M.push(r.outputColorSpace)),M.push(S.customProgramCacheKey),M.join()}function x(S,M){S.push(M.precision),S.push(M.outputColorSpace),S.push(M.envMapMode),S.push(M.envMapCubeUVHeight),S.push(M.mapUv),S.push(M.alphaMapUv),S.push(M.lightMapUv),S.push(M.aoMapUv),S.push(M.bumpMapUv),S.push(M.normalMapUv),S.push(M.displacementMapUv),S.push(M.emissiveMapUv),S.push(M.metalnessMapUv),S.push(M.roughnessMapUv),S.push(M.anisotropyMapUv),S.push(M.clearcoatMapUv),S.push(M.clearcoatNormalMapUv),S.push(M.clearcoatRoughnessMapUv),S.push(M.iridescenceMapUv),S.push(M.iridescenceThicknessMapUv),S.push(M.sheenColorMapUv),S.push(M.sheenRoughnessMapUv),S.push(M.specularMapUv),S.push(M.specularColorMapUv),S.push(M.specularIntensityMapUv),S.push(M.transmissionMapUv),S.push(M.thicknessMapUv),S.push(M.combine),S.push(M.fogExp2),S.push(M.sizeAttenuation),S.push(M.morphTargetsCount),S.push(M.morphAttributeCount),S.push(M.numDirLights),S.push(M.numPointLights),S.push(M.numSpotLights),S.push(M.numSpotLightMaps),S.push(M.numHemiLights),S.push(M.numRectAreaLights),S.push(M.numDirLightShadows),S.push(M.numPointLightShadows),S.push(M.numSpotLightShadows),S.push(M.numSpotLightShadowsWithMaps),S.push(M.numLightProbes),S.push(M.shadowMapType),S.push(M.toneMapping),S.push(M.numClippingPlanes),S.push(M.numClipIntersection),S.push(M.depthPacking)}function y(S,M){a.disableAll(),M.supportsVertexTextures&&a.enable(0),M.instancing&&a.enable(1),M.instancingColor&&a.enable(2),M.instancingMorph&&a.enable(3),M.matcap&&a.enable(4),M.envMap&&a.enable(5),M.normalMapObjectSpace&&a.enable(6),M.normalMapTangentSpace&&a.enable(7),M.clearcoat&&a.enable(8),M.iridescence&&a.enable(9),M.alphaTest&&a.enable(10),M.vertexColors&&a.enable(11),M.vertexAlphas&&a.enable(12),M.vertexUv1s&&a.enable(13),M.vertexUv2s&&a.enable(14),M.vertexUv3s&&a.enable(15),M.vertexTangents&&a.enable(16),M.anisotropy&&a.enable(17),M.alphaHash&&a.enable(18),M.batching&&a.enable(19),M.dispersion&&a.enable(20),M.batchingColor&&a.enable(21),S.push(a.mask),a.disableAll(),M.fog&&a.enable(0),M.useFog&&a.enable(1),M.flatShading&&a.enable(2),M.logarithmicDepthBuffer&&a.enable(3),M.skinning&&a.enable(4),M.morphTargets&&a.enable(5),M.morphNormals&&a.enable(6),M.morphColors&&a.enable(7),M.premultipliedAlpha&&a.enable(8),M.shadowMapEnabled&&a.enable(9),M.doubleSided&&a.enable(10),M.flipSided&&a.enable(11),M.useDepthPacking&&a.enable(12),M.dithering&&a.enable(13),M.transmission&&a.enable(14),M.sheen&&a.enable(15),M.opaque&&a.enable(16),M.pointsUvs&&a.enable(17),M.decodeVideoTexture&&a.enable(18),M.alphaToCoverage&&a.enable(19),S.push(a.mask)}function v(S){const M=p[S.type];let I;if(M){const N=vi[M];I=fd.clone(N.uniforms)}else I=S.uniforms;return I}function E(S,M){let I;for(let N=0,O=c.length;N<O;N++){const B=c[N];if(B.cacheKey===M){I=B,++I.usedTimes;break}}return I===void 0&&(I=new ZT(r,M,S,s),c.push(I)),I}function b(S){if(--S.usedTimes===0){const M=c.indexOf(S);c[M]=c[c.length-1],c.pop(),S.destroy()}}function w(S){h.remove(S)}function T(){h.dispose()}return{getParameters:g,getProgramCacheKey:m,getUniforms:v,acquireProgram:E,releaseProgram:b,releaseShaderCache:w,programs:c,dispose:T}}function tC(){let r=new WeakMap;function t(o){return r.has(o)}function e(o){let a=r.get(o);return a===void 0&&(a={},r.set(o,a)),a}function i(o){r.delete(o)}function n(o,a,h){r.get(o)[a]=h}function s(){r=new WeakMap}return{has:t,get:e,remove:i,update:n,dispose:s}}function eC(r,t){return r.groupOrder!==t.groupOrder?r.groupOrder-t.groupOrder:r.renderOrder!==t.renderOrder?r.renderOrder-t.renderOrder:r.material.id!==t.material.id?r.material.id-t.material.id:r.z!==t.z?r.z-t.z:r.id-t.id}function r0(r,t){return r.groupOrder!==t.groupOrder?r.groupOrder-t.groupOrder:r.renderOrder!==t.renderOrder?r.renderOrder-t.renderOrder:r.z!==t.z?t.z-r.z:r.id-t.id}function o0(){const r=[];let t=0;const e=[],i=[],n=[];function s(){t=0,e.length=0,i.length=0,n.length=0}function o(u,d,f,p,_,g){let m=r[t];return m===void 0?(m={id:u.id,object:u,geometry:d,material:f,groupOrder:p,renderOrder:u.renderOrder,z:_,group:g},r[t]=m):(m.id=u.id,m.object=u,m.geometry=d,m.material=f,m.groupOrder=p,m.renderOrder=u.renderOrder,m.z=_,m.group=g),t++,m}function a(u,d,f,p,_,g){const m=o(u,d,f,p,_,g);f.transmission>0?i.push(m):f.transparent===!0?n.push(m):e.push(m)}function h(u,d,f,p,_,g){const m=o(u,d,f,p,_,g);f.transmission>0?i.unshift(m):f.transparent===!0?n.unshift(m):e.unshift(m)}function l(u,d){e.length>1&&e.sort(u||eC),i.length>1&&i.sort(d||r0),n.length>1&&n.sort(d||r0)}function c(){for(let u=t,d=r.length;u<d;u++){const f=r[u];if(f.id===null)break;f.id=null,f.object=null,f.geometry=null,f.material=null,f.group=null}}return{opaque:e,transmissive:i,transparent:n,init:s,push:a,unshift:h,finish:c,sort:l}}function iC(){let r=new WeakMap;function t(i,n){const s=r.get(i);let o;return s===void 0?(o=new o0,r.set(i,[o])):n>=s.length?(o=new o0,s.push(o)):o=s[n],o}function e(){r=new WeakMap}return{get:t,dispose:e}}function nC(){const r={};return{get:function(t){if(r[t.id]!==void 0)return r[t.id];let e;switch(t.type){case"DirectionalLight":e={direction:new R,color:new vt};break;case"SpotLight":e={position:new R,direction:new R,color:new vt,distance:0,coneCos:0,penumbraCos:0,decay:0};break;case"PointLight":e={position:new R,color:new vt,distance:0,decay:0};break;case"HemisphereLight":e={direction:new R,skyColor:new vt,groundColor:new vt};break;case"RectAreaLight":e={color:new vt,position:new R,halfWidth:new R,halfHeight:new R};break}return r[t.id]=e,e}}}function sC(){const r={};return{get:function(t){if(r[t.id]!==void 0)return r[t.id];let e;switch(t.type){case"DirectionalLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Q};break;case"SpotLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Q};break;case"PointLight":e={shadowIntensity:1,shadowBias:0,shadowNormalBias:0,shadowRadius:1,shadowMapSize:new Q,shadowCameraNear:1,shadowCameraFar:1e3};break}return r[t.id]=e,e}}}let rC=0;function oC(r,t){return(t.castShadow?2:0)-(r.castShadow?2:0)+(t.map?1:0)-(r.map?1:0)}function aC(r){const t=new nC,e=sC(),i={version:0,hash:{directionalLength:-1,pointLength:-1,spotLength:-1,rectAreaLength:-1,hemiLength:-1,numDirectionalShadows:-1,numPointShadows:-1,numSpotShadows:-1,numSpotMaps:-1,numLightProbes:-1},ambient:[0,0,0],probe:[],directional:[],directionalShadow:[],directionalShadowMap:[],directionalShadowMatrix:[],spot:[],spotLightMap:[],spotShadow:[],spotShadowMap:[],spotLightMatrix:[],rectArea:[],rectAreaLTC1:null,rectAreaLTC2:null,point:[],pointShadow:[],pointShadowMap:[],pointShadowMatrix:[],hemi:[],numSpotLightShadowsWithMaps:0,numLightProbes:0};for(let l=0;l<9;l++)i.probe.push(new R);const n=new R,s=new Ft,o=new Ft;function a(l){let c=0,u=0,d=0;for(let S=0;S<9;S++)i.probe[S].set(0,0,0);let f=0,p=0,_=0,g=0,m=0,x=0,y=0,v=0,E=0,b=0,w=0;l.sort(oC);for(let S=0,M=l.length;S<M;S++){const I=l[S],N=I.color,O=I.intensity,B=I.distance,Y=I.shadow&&I.shadow.map?I.shadow.map.texture:null;if(I.isAmbientLight)c+=N.r*O,u+=N.g*O,d+=N.b*O;else if(I.isLightProbe){for(let $=0;$<9;$++)i.probe[$].addScaledVector(I.sh.coefficients[$],O);w++}else if(I.isDirectionalLight){const $=t.get(I);if($.color.copy(I.color).multiplyScalar(I.intensity),I.castShadow){const st=I.shadow,X=e.get(I);X.shadowIntensity=st.intensity,X.shadowBias=st.bias,X.shadowNormalBias=st.normalBias,X.shadowRadius=st.radius,X.shadowMapSize=st.mapSize,i.directionalShadow[f]=X,i.directionalShadowMap[f]=Y,i.directionalShadowMatrix[f]=I.shadow.matrix,x++}i.directional[f]=$,f++}else if(I.isSpotLight){const $=t.get(I);$.position.setFromMatrixPosition(I.matrixWorld),$.color.copy(N).multiplyScalar(O),$.distance=B,$.coneCos=Math.cos(I.angle),$.penumbraCos=Math.cos(I.angle*(1-I.penumbra)),$.decay=I.decay,i.spot[_]=$;const st=I.shadow;if(I.map&&(i.spotLightMap[E]=I.map,E++,st.updateMatrices(I),I.castShadow&&b++),i.spotLightMatrix[_]=st.matrix,I.castShadow){const X=e.get(I);X.shadowIntensity=st.intensity,X.shadowBias=st.bias,X.shadowNormalBias=st.normalBias,X.shadowRadius=st.radius,X.shadowMapSize=st.mapSize,i.spotShadow[_]=X,i.spotShadowMap[_]=Y,v++}_++}else if(I.isRectAreaLight){const $=t.get(I);$.color.copy(N).multiplyScalar(O),$.halfWidth.set(I.width*.5,0,0),$.halfHeight.set(0,I.height*.5,0),i.rectArea[g]=$,g++}else if(I.isPointLight){const $=t.get(I);if($.color.copy(I.color).multiplyScalar(I.intensity),$.distance=I.distance,$.decay=I.decay,I.castShadow){const st=I.shadow,X=e.get(I);X.shadowIntensity=st.intensity,X.shadowBias=st.bias,X.shadowNormalBias=st.normalBias,X.shadowRadius=st.radius,X.shadowMapSize=st.mapSize,X.shadowCameraNear=st.camera.near,X.shadowCameraFar=st.camera.far,i.pointShadow[p]=X,i.pointShadowMap[p]=Y,i.pointShadowMatrix[p]=I.shadow.matrix,y++}i.point[p]=$,p++}else if(I.isHemisphereLight){const $=t.get(I);$.skyColor.copy(I.color).multiplyScalar(O),$.groundColor.copy(I.groundColor).multiplyScalar(O),i.hemi[m]=$,m++}}g>0&&(r.has("OES_texture_float_linear")===!0?(i.rectAreaLTC1=dt.LTC_FLOAT_1,i.rectAreaLTC2=dt.LTC_FLOAT_2):(i.rectAreaLTC1=dt.LTC_HALF_1,i.rectAreaLTC2=dt.LTC_HALF_2)),i.ambient[0]=c,i.ambient[1]=u,i.ambient[2]=d;const T=i.hash;(T.directionalLength!==f||T.pointLength!==p||T.spotLength!==_||T.rectAreaLength!==g||T.hemiLength!==m||T.numDirectionalShadows!==x||T.numPointShadows!==y||T.numSpotShadows!==v||T.numSpotMaps!==E||T.numLightProbes!==w)&&(i.directional.length=f,i.spot.length=_,i.rectArea.length=g,i.point.length=p,i.hemi.length=m,i.directionalShadow.length=x,i.directionalShadowMap.length=x,i.pointShadow.length=y,i.pointShadowMap.length=y,i.spotShadow.length=v,i.spotShadowMap.length=v,i.directionalShadowMatrix.length=x,i.pointShadowMatrix.length=y,i.spotLightMatrix.length=v+E-b,i.spotLightMap.length=E,i.numSpotLightShadowsWithMaps=b,i.numLightProbes=w,T.directionalLength=f,T.pointLength=p,T.spotLength=_,T.rectAreaLength=g,T.hemiLength=m,T.numDirectionalShadows=x,T.numPointShadows=y,T.numSpotShadows=v,T.numSpotMaps=E,T.numLightProbes=w,i.version=rC++)}function h(l,c){let u=0,d=0,f=0,p=0,_=0;const g=c.matrixWorldInverse;for(let m=0,x=l.length;m<x;m++){const y=l[m];if(y.isDirectionalLight){const v=i.directional[u];v.direction.setFromMatrixPosition(y.matrixWorld),n.setFromMatrixPosition(y.target.matrixWorld),v.direction.sub(n),v.direction.transformDirection(g),u++}else if(y.isSpotLight){const v=i.spot[f];v.position.setFromMatrixPosition(y.matrixWorld),v.position.applyMatrix4(g),v.direction.setFromMatrixPosition(y.matrixWorld),n.setFromMatrixPosition(y.target.matrixWorld),v.direction.sub(n),v.direction.transformDirection(g),f++}else if(y.isRectAreaLight){const v=i.rectArea[p];v.position.setFromMatrixPosition(y.matrixWorld),v.position.applyMatrix4(g),o.identity(),s.copy(y.matrixWorld),s.premultiply(g),o.extractRotation(s),v.halfWidth.set(y.width*.5,0,0),v.halfHeight.set(0,y.height*.5,0),v.halfWidth.applyMatrix4(o),v.halfHeight.applyMatrix4(o),p++}else if(y.isPointLight){const v=i.point[d];v.position.setFromMatrixPosition(y.matrixWorld),v.position.applyMatrix4(g),d++}else if(y.isHemisphereLight){const v=i.hemi[_];v.direction.setFromMatrixPosition(y.matrixWorld),v.direction.transformDirection(g),_++}}}return{setup:a,setupView:h,state:i}}function a0(r){const t=new aC(r),e=[],i=[];function n(c){l.camera=c,e.length=0,i.length=0}function s(c){e.push(c)}function o(c){i.push(c)}function a(){t.setup(e)}function h(c){t.setupView(e,c)}const l={lightsArray:e,shadowsArray:i,camera:null,lights:t,transmissionRenderTarget:{}};return{init:n,state:l,setupLights:a,setupLightsView:h,pushLight:s,pushShadow:o}}function hC(r){let t=new WeakMap;function e(n,s=0){const o=t.get(n);let a;return o===void 0?(a=new a0(r),t.set(n,[a])):s>=o.length?(a=new a0(r),o.push(a)):a=o[s],a}function i(){t=new WeakMap}return{get:e,dispose:i}}class Um extends si{constructor(t){super(),this.isMeshDepthMaterial=!0,this.type="MeshDepthMaterial",this.depthPacking=uv,this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.setValues(t)}copy(t){return super.copy(t),this.depthPacking=t.depthPacking,this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this}}class Nm extends si{constructor(t){super(),this.isMeshDistanceMaterial=!0,this.type="MeshDistanceMaterial",this.map=null,this.alphaMap=null,this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.setValues(t)}copy(t){return super.copy(t),this.map=t.map,this.alphaMap=t.alphaMap,this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this}}const lC=`void main() {
	gl_Position = vec4( position, 1.0 );
}`,cC=`uniform sampler2D shadow_pass;
uniform vec2 resolution;
uniform float radius;
#include <packing>
void main() {
	const float samples = float( VSM_SAMPLES );
	float mean = 0.0;
	float squared_mean = 0.0;
	float uvStride = samples <= 1.0 ? 0.0 : 2.0 / ( samples - 1.0 );
	float uvStart = samples <= 1.0 ? 0.0 : - 1.0;
	for ( float i = 0.0; i < samples; i ++ ) {
		float uvOffset = uvStart + i * uvStride;
		#ifdef HORIZONTAL_PASS
			vec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( uvOffset, 0.0 ) * radius ) / resolution ) );
			mean += distribution.x;
			squared_mean += distribution.y * distribution.y + distribution.x * distribution.x;
		#else
			float depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, uvOffset ) * radius ) / resolution ) );
			mean += depth;
			squared_mean += depth * depth;
		#endif
	}
	mean = mean / samples;
	squared_mean = squared_mean / samples;
	float std_dev = sqrt( squared_mean - mean * mean );
	gl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );
}`;function uC(r,t,e){let i=new Kh;const n=new Q,s=new Q,o=new se,a=new Um({depthPacking:dv}),h=new Nm,l={},c=e.maxTextureSize,u={[ms]:wi,[wi]:ms,[fi]:fi},d=new hn({defines:{VSM_SAMPLES:8},uniforms:{shadow_pass:{value:null},resolution:{value:new Q},radius:{value:4}},vertexShader:lC,fragmentShader:cC}),f=d.clone();f.defines.HORIZONTAL_PASS=1;const p=new Xt;p.setAttribute("position",new _e(new Float32Array([-1,-1,.5,3,-1,.5,-1,3,.5]),3));const _=new ge(p,d),g=this;this.enabled=!1,this.autoUpdate=!0,this.needsUpdate=!1,this.type=ym;let m=this.type;this.render=function(b,w,T){if(g.enabled===!1||g.autoUpdate===!1&&g.needsUpdate===!1||b.length===0)return;const S=r.getRenderTarget(),M=r.getActiveCubeFace(),I=r.getActiveMipmapLevel(),N=r.state;N.setBlending(ds),N.buffers.color.setClear(1,1,1,1),N.buffers.depth.setTest(!0),N.setScissorTest(!1);const O=m!==Fn&&this.type===Fn,B=m===Fn&&this.type!==Fn;for(let Y=0,$=b.length;Y<$;Y++){const st=b[Y],X=st.shadow;if(X===void 0){console.warn("THREE.WebGLShadowMap:",st,"has no shadow.");continue}if(X.autoUpdate===!1&&X.needsUpdate===!1)continue;n.copy(X.mapSize);const ut=X.getFrameExtents();if(n.multiply(ut),s.copy(X.mapSize),(n.x>c||n.y>c)&&(n.x>c&&(s.x=Math.floor(c/ut.x),n.x=s.x*ut.x,X.mapSize.x=s.x),n.y>c&&(s.y=Math.floor(c/ut.y),n.y=s.y*ut.y,X.mapSize.y=s.y)),X.map===null||O===!0||B===!0){const mt=this.type!==Fn?{minFilter:Ze,magFilter:Ze}:{};X.map!==null&&X.map.dispose(),X.map=new En(n.x,n.y,mt),X.map.texture.name=st.name+".shadowMap",X.camera.updateProjectionMatrix()}r.setRenderTarget(X.map),r.clear();const pt=X.getViewportCount();for(let mt=0;mt<pt;mt++){const Kt=X.getViewport(mt);o.set(s.x*Kt.x,s.y*Kt.y,s.x*Kt.z,s.y*Kt.w),N.viewport(o),X.updateMatrices(st,mt),i=X.getFrustum(),v(w,T,X.camera,st,this.type)}X.isPointLightShadow!==!0&&this.type===Fn&&x(X,T),X.needsUpdate=!1}m=this.type,g.needsUpdate=!1,r.setRenderTarget(S,M,I)};function x(b,w){const T=t.update(_);d.defines.VSM_SAMPLES!==b.blurSamples&&(d.defines.VSM_SAMPLES=b.blurSamples,f.defines.VSM_SAMPLES=b.blurSamples,d.needsUpdate=!0,f.needsUpdate=!0),b.mapPass===null&&(b.mapPass=new En(n.x,n.y)),d.uniforms.shadow_pass.value=b.map.texture,d.uniforms.resolution.value=b.mapSize,d.uniforms.radius.value=b.radius,r.setRenderTarget(b.mapPass),r.clear(),r.renderBufferDirect(w,null,T,d,_,null),f.uniforms.shadow_pass.value=b.mapPass.texture,f.uniforms.resolution.value=b.mapSize,f.uniforms.radius.value=b.radius,r.setRenderTarget(b.map),r.clear(),r.renderBufferDirect(w,null,T,f,_,null)}function y(b,w,T,S){let M=null;const I=T.isPointLight===!0?b.customDistanceMaterial:b.customDepthMaterial;if(I!==void 0)M=I;else if(M=T.isPointLight===!0?h:a,r.localClippingEnabled&&w.clipShadows===!0&&Array.isArray(w.clippingPlanes)&&w.clippingPlanes.length!==0||w.displacementMap&&w.displacementScale!==0||w.alphaMap&&w.alphaTest>0||w.map&&w.alphaTest>0){const N=M.uuid,O=w.uuid;let B=l[N];B===void 0&&(B={},l[N]=B);let Y=B[O];Y===void 0&&(Y=M.clone(),B[O]=Y,w.addEventListener("dispose",E)),M=Y}if(M.visible=w.visible,M.wireframe=w.wireframe,S===Fn?M.side=w.shadowSide!==null?w.shadowSide:w.side:M.side=w.shadowSide!==null?w.shadowSide:u[w.side],M.alphaMap=w.alphaMap,M.alphaTest=w.alphaTest,M.map=w.map,M.clipShadows=w.clipShadows,M.clippingPlanes=w.clippingPlanes,M.clipIntersection=w.clipIntersection,M.displacementMap=w.displacementMap,M.displacementScale=w.displacementScale,M.displacementBias=w.displacementBias,M.wireframeLinewidth=w.wireframeLinewidth,M.linewidth=w.linewidth,T.isPointLight===!0&&M.isMeshDistanceMaterial===!0){const N=r.properties.get(M);N.light=T}return M}function v(b,w,T,S,M){if(b.visible===!1)return;if(b.layers.test(w.layers)&&(b.isMesh||b.isLine||b.isPoints)&&(b.castShadow||b.receiveShadow&&M===Fn)&&(!b.frustumCulled||i.intersectsObject(b))){b.modelViewMatrix.multiplyMatrices(T.matrixWorldInverse,b.matrixWorld);const O=t.update(b),B=b.material;if(Array.isArray(B)){const Y=O.groups;for(let $=0,st=Y.length;$<st;$++){const X=Y[$],ut=B[X.materialIndex];if(ut&&ut.visible){const pt=y(b,ut,S,M);b.onBeforeShadow(r,b,w,T,O,pt,X),r.renderBufferDirect(T,null,O,pt,b,X),b.onAfterShadow(r,b,w,T,O,pt,X)}}}else if(B.visible){const Y=y(b,B,S,M);b.onBeforeShadow(r,b,w,T,O,Y,null),r.renderBufferDirect(T,null,O,Y,b,null),b.onAfterShadow(r,b,w,T,O,Y,null)}}const N=b.children;for(let O=0,B=N.length;O<B;O++)v(N[O],w,T,S,M)}function E(b){b.target.removeEventListener("dispose",E);for(const T in l){const S=l[T],M=b.target.uuid;M in S&&(S[M].dispose(),delete S[M])}}}function dC(r){function t(){let F=!1;const lt=new se;let j=null;const it=new se(0,0,0,0);return{setMask:function(ft){j!==ft&&!F&&(r.colorMask(ft,ft,ft,ft),j=ft)},setLocked:function(ft){F=ft},setClear:function(ft,zt,ie,Fe,je){je===!0&&(ft*=Fe,zt*=Fe,ie*=Fe),lt.set(ft,zt,ie,Fe),it.equals(lt)===!1&&(r.clearColor(ft,zt,ie,Fe),it.copy(lt))},reset:function(){F=!1,j=null,it.set(-1,0,0,0)}}}function e(){let F=!1,lt=null,j=null,it=null;return{setTest:function(ft){ft?At(r.DEPTH_TEST):_t(r.DEPTH_TEST)},setMask:function(ft){lt!==ft&&!F&&(r.depthMask(ft),lt=ft)},setFunc:function(ft){if(j!==ft){switch(ft){case $x:r.depthFunc(r.NEVER);break;case Xx:r.depthFunc(r.ALWAYS);break;case qx:r.depthFunc(r.LESS);break;case yh:r.depthFunc(r.LEQUAL);break;case Yx:r.depthFunc(r.EQUAL);break;case Zx:r.depthFunc(r.GEQUAL);break;case Jx:r.depthFunc(r.GREATER);break;case Kx:r.depthFunc(r.NOTEQUAL);break;default:r.depthFunc(r.LEQUAL)}j=ft}},setLocked:function(ft){F=ft},setClear:function(ft){it!==ft&&(r.clearDepth(ft),it=ft)},reset:function(){F=!1,lt=null,j=null,it=null}}}function i(){let F=!1,lt=null,j=null,it=null,ft=null,zt=null,ie=null,Fe=null,je=null;return{setTest:function(le){F||(le?At(r.STENCIL_TEST):_t(r.STENCIL_TEST))},setMask:function(le){lt!==le&&!F&&(r.stencilMask(le),lt=le)},setFunc:function(le,$n,Pn){(j!==le||it!==$n||ft!==Pn)&&(r.stencilFunc(le,$n,Pn),j=le,it=$n,ft=Pn)},setOp:function(le,$n,Pn){(zt!==le||ie!==$n||Fe!==Pn)&&(r.stencilOp(le,$n,Pn),zt=le,ie=$n,Fe=Pn)},setLocked:function(le){F=le},setClear:function(le){je!==le&&(r.clearStencil(le),je=le)},reset:function(){F=!1,lt=null,j=null,it=null,ft=null,zt=null,ie=null,Fe=null,je=null}}}const n=new t,s=new e,o=new i,a=new WeakMap,h=new WeakMap;let l={},c={},u=new WeakMap,d=[],f=null,p=!1,_=null,g=null,m=null,x=null,y=null,v=null,E=null,b=new vt(0,0,0),w=0,T=!1,S=null,M=null,I=null,N=null,O=null;const B=r.getParameter(r.MAX_COMBINED_TEXTURE_IMAGE_UNITS);let Y=!1,$=0;const st=r.getParameter(r.VERSION);st.indexOf("WebGL")!==-1?($=parseFloat(/^WebGL (\d)/.exec(st)[1]),Y=$>=1):st.indexOf("OpenGL ES")!==-1&&($=parseFloat(/^OpenGL ES (\d)/.exec(st)[1]),Y=$>=2);let X=null,ut={};const pt=r.getParameter(r.SCISSOR_BOX),mt=r.getParameter(r.VIEWPORT),Kt=new se().fromArray(pt),he=new se().fromArray(mt);function Z(F,lt,j,it){const ft=new Uint8Array(4),zt=r.createTexture();r.bindTexture(F,zt),r.texParameteri(F,r.TEXTURE_MIN_FILTER,r.NEAREST),r.texParameteri(F,r.TEXTURE_MAG_FILTER,r.NEAREST);for(let ie=0;ie<j;ie++)F===r.TEXTURE_3D||F===r.TEXTURE_2D_ARRAY?r.texImage3D(lt,0,r.RGBA,1,1,it,0,r.RGBA,r.UNSIGNED_BYTE,ft):r.texImage2D(lt+ie,0,r.RGBA,1,1,0,r.RGBA,r.UNSIGNED_BYTE,ft);return zt}const ot={};ot[r.TEXTURE_2D]=Z(r.TEXTURE_2D,r.TEXTURE_2D,1),ot[r.TEXTURE_CUBE_MAP]=Z(r.TEXTURE_CUBE_MAP,r.TEXTURE_CUBE_MAP_POSITIVE_X,6),ot[r.TEXTURE_2D_ARRAY]=Z(r.TEXTURE_2D_ARRAY,r.TEXTURE_2D_ARRAY,1,1),ot[r.TEXTURE_3D]=Z(r.TEXTURE_3D,r.TEXTURE_3D,1,1),n.setClear(0,0,0,1),s.setClear(1),o.setClear(0),At(r.DEPTH_TEST),s.setFunc(yh),xt(!1),K(kp),At(r.CULL_FACE),ht(ds);function At(F){l[F]!==!0&&(r.enable(F),l[F]=!0)}function _t(F){l[F]!==!1&&(r.disable(F),l[F]=!1)}function Dt(F,lt){return c[F]!==lt?(r.bindFramebuffer(F,lt),c[F]=lt,F===r.DRAW_FRAMEBUFFER&&(c[r.FRAMEBUFFER]=lt),F===r.FRAMEBUFFER&&(c[r.DRAW_FRAMEBUFFER]=lt),!0):!1}function Ht(F,lt){let j=d,it=!1;if(F){j=u.get(lt),j===void 0&&(j=[],u.set(lt,j));const ft=F.textures;if(j.length!==ft.length||j[0]!==r.COLOR_ATTACHMENT0){for(let zt=0,ie=ft.length;zt<ie;zt++)j[zt]=r.COLOR_ATTACHMENT0+zt;j.length=ft.length,it=!0}}else j[0]!==r.BACK&&(j[0]=r.BACK,it=!0);it&&r.drawBuffers(j)}function Bt(F){return f!==F?(r.useProgram(F),f=F,!0):!1}const re={[Gs]:r.FUNC_ADD,[Cx]:r.FUNC_SUBTRACT,[Rx]:r.FUNC_REVERSE_SUBTRACT};re[Px]=r.MIN,re[Ix]=r.MAX;const P={[Lx]:r.ZERO,[Dx]:r.ONE,[Ox]:r.SRC_COLOR,[pu]:r.SRC_ALPHA,[kx]:r.SRC_ALPHA_SATURATE,[Nx]:r.DST_COLOR,[zx]:r.DST_ALPHA,[Fx]:r.ONE_MINUS_SRC_COLOR,[mu]:r.ONE_MINUS_SRC_ALPHA,[Bx]:r.ONE_MINUS_DST_COLOR,[Ux]:r.ONE_MINUS_DST_ALPHA,[Vx]:r.CONSTANT_COLOR,[Hx]:r.ONE_MINUS_CONSTANT_COLOR,[Gx]:r.CONSTANT_ALPHA,[Wx]:r.ONE_MINUS_CONSTANT_ALPHA};function ht(F,lt,j,it,ft,zt,ie,Fe,je,le){if(F===ds){p===!0&&(_t(r.BLEND),p=!1);return}if(p===!1&&(At(r.BLEND),p=!0),F!==Tx){if(F!==_||le!==T){if((g!==Gs||y!==Gs)&&(r.blendEquation(r.FUNC_ADD),g=Gs,y=Gs),le)switch(F){case Ir:r.blendFuncSeparate(r.ONE,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Vp:r.blendFunc(r.ONE,r.ONE);break;case Hp:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Gp:r.blendFuncSeparate(r.ZERO,r.SRC_COLOR,r.ZERO,r.SRC_ALPHA);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}else switch(F){case Ir:r.blendFuncSeparate(r.SRC_ALPHA,r.ONE_MINUS_SRC_ALPHA,r.ONE,r.ONE_MINUS_SRC_ALPHA);break;case Vp:r.blendFunc(r.SRC_ALPHA,r.ONE);break;case Hp:r.blendFuncSeparate(r.ZERO,r.ONE_MINUS_SRC_COLOR,r.ZERO,r.ONE);break;case Gp:r.blendFunc(r.ZERO,r.SRC_COLOR);break;default:console.error("THREE.WebGLState: Invalid blending: ",F);break}m=null,x=null,v=null,E=null,b.set(0,0,0),w=0,_=F,T=le}return}ft=ft||lt,zt=zt||j,ie=ie||it,(lt!==g||ft!==y)&&(r.blendEquationSeparate(re[lt],re[ft]),g=lt,y=ft),(j!==m||it!==x||zt!==v||ie!==E)&&(r.blendFuncSeparate(P[j],P[it],P[zt],P[ie]),m=j,x=it,v=zt,E=ie),(Fe.equals(b)===!1||je!==w)&&(r.blendColor(Fe.r,Fe.g,Fe.b,je),b.copy(Fe),w=je),_=F,T=!1}function rt(F,lt){F.side===fi?_t(r.CULL_FACE):At(r.CULL_FACE);let j=F.side===wi;lt&&(j=!j),xt(j),F.blending===Ir&&F.transparent===!1?ht(ds):ht(F.blending,F.blendEquation,F.blendSrc,F.blendDst,F.blendEquationAlpha,F.blendSrcAlpha,F.blendDstAlpha,F.blendColor,F.blendAlpha,F.premultipliedAlpha),s.setFunc(F.depthFunc),s.setTest(F.depthTest),s.setMask(F.depthWrite),n.setMask(F.colorWrite);const it=F.stencilWrite;o.setTest(it),it&&(o.setMask(F.stencilWriteMask),o.setFunc(F.stencilFunc,F.stencilRef,F.stencilFuncMask),o.setOp(F.stencilFail,F.stencilZFail,F.stencilZPass)),yt(F.polygonOffset,F.polygonOffsetFactor,F.polygonOffsetUnits),F.alphaToCoverage===!0?At(r.SAMPLE_ALPHA_TO_COVERAGE):_t(r.SAMPLE_ALPHA_TO_COVERAGE)}function xt(F){S!==F&&(F?r.frontFace(r.CW):r.frontFace(r.CCW),S=F)}function K(F){F!==Sx?(At(r.CULL_FACE),F!==M&&(F===kp?r.cullFace(r.BACK):F===Ax?r.cullFace(r.FRONT):r.cullFace(r.FRONT_AND_BACK))):_t(r.CULL_FACE),M=F}function Ot(F){F!==I&&(Y&&r.lineWidth(F),I=F)}function yt(F,lt,j){F?(At(r.POLYGON_OFFSET_FILL),(N!==lt||O!==j)&&(r.polygonOffset(lt,j),N=lt,O=j)):_t(r.POLYGON_OFFSET_FILL)}function St(F){F?At(r.SCISSOR_TEST):_t(r.SCISSOR_TEST)}function L(F){F===void 0&&(F=r.TEXTURE0+B-1),X!==F&&(r.activeTexture(F),X=F)}function A(F,lt,j){j===void 0&&(X===null?j=r.TEXTURE0+B-1:j=X);let it=ut[j];it===void 0&&(it={type:void 0,texture:void 0},ut[j]=it),(it.type!==F||it.texture!==lt)&&(X!==j&&(r.activeTexture(j),X=j),r.bindTexture(F,lt||ot[F]),it.type=F,it.texture=lt)}function G(){const F=ut[X];F!==void 0&&F.type!==void 0&&(r.bindTexture(F.type,null),F.type=void 0,F.texture=void 0)}function et(){try{r.compressedTexImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function tt(){try{r.compressedTexImage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function nt(){try{r.texSubImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Lt(){try{r.texSubImage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function gt(){try{r.compressedTexSubImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function wt(){try{r.compressedTexSubImage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Wt(){try{r.texStorage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function at(){try{r.texStorage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Mt(){try{r.texImage2D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function ee(){try{r.texImage3D.apply(r,arguments)}catch(F){console.error("THREE.WebGLState:",F)}}function Vt(F){Kt.equals(F)===!1&&(r.scissor(F.x,F.y,F.z,F.w),Kt.copy(F))}function Et(F){he.equals(F)===!1&&(r.viewport(F.x,F.y,F.z,F.w),he.copy(F))}function Gt(F,lt){let j=h.get(lt);j===void 0&&(j=new WeakMap,h.set(lt,j));let it=j.get(F);it===void 0&&(it=r.getUniformBlockIndex(lt,F.name),j.set(F,it))}function Qt(F,lt){const it=h.get(lt).get(F);a.get(lt)!==it&&(r.uniformBlockBinding(lt,it,F.__bindingPointIndex),a.set(lt,it))}function we(){r.disable(r.BLEND),r.disable(r.CULL_FACE),r.disable(r.DEPTH_TEST),r.disable(r.POLYGON_OFFSET_FILL),r.disable(r.SCISSOR_TEST),r.disable(r.STENCIL_TEST),r.disable(r.SAMPLE_ALPHA_TO_COVERAGE),r.blendEquation(r.FUNC_ADD),r.blendFunc(r.ONE,r.ZERO),r.blendFuncSeparate(r.ONE,r.ZERO,r.ONE,r.ZERO),r.blendColor(0,0,0,0),r.colorMask(!0,!0,!0,!0),r.clearColor(0,0,0,0),r.depthMask(!0),r.depthFunc(r.LESS),r.clearDepth(1),r.stencilMask(4294967295),r.stencilFunc(r.ALWAYS,0,4294967295),r.stencilOp(r.KEEP,r.KEEP,r.KEEP),r.clearStencil(0),r.cullFace(r.BACK),r.frontFace(r.CCW),r.polygonOffset(0,0),r.activeTexture(r.TEXTURE0),r.bindFramebuffer(r.FRAMEBUFFER,null),r.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),r.bindFramebuffer(r.READ_FRAMEBUFFER,null),r.useProgram(null),r.lineWidth(1),r.scissor(0,0,r.canvas.width,r.canvas.height),r.viewport(0,0,r.canvas.width,r.canvas.height),l={},X=null,ut={},c={},u=new WeakMap,d=[],f=null,p=!1,_=null,g=null,m=null,x=null,y=null,v=null,E=null,b=new vt(0,0,0),w=0,T=!1,S=null,M=null,I=null,N=null,O=null,Kt.set(0,0,r.canvas.width,r.canvas.height),he.set(0,0,r.canvas.width,r.canvas.height),n.reset(),s.reset(),o.reset()}return{buffers:{color:n,depth:s,stencil:o},enable:At,disable:_t,bindFramebuffer:Dt,drawBuffers:Ht,useProgram:Bt,setBlending:ht,setMaterial:rt,setFlipSided:xt,setCullFace:K,setLineWidth:Ot,setPolygonOffset:yt,setScissorTest:St,activeTexture:L,bindTexture:A,unbindTexture:G,compressedTexImage2D:et,compressedTexImage3D:tt,texImage2D:Mt,texImage3D:ee,updateUBOMapping:Gt,uniformBlockBinding:Qt,texStorage2D:Wt,texStorage3D:at,texSubImage2D:nt,texSubImage3D:Lt,compressedTexSubImage2D:gt,compressedTexSubImage3D:wt,scissor:Vt,viewport:Et,reset:we}}function fC(r,t){const e=r.image&&r.image.width?r.image.width/r.image.height:1;return e>t?(r.repeat.x=1,r.repeat.y=e/t,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2):(r.repeat.x=t/e,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0),r}function pC(r,t){const e=r.image&&r.image.width?r.image.width/r.image.height:1;return e>t?(r.repeat.x=t/e,r.repeat.y=1,r.offset.x=(1-r.repeat.x)/2,r.offset.y=0):(r.repeat.x=1,r.repeat.y=e/t,r.offset.x=0,r.offset.y=(1-r.repeat.y)/2),r}function mC(r){return r.repeat.x=1,r.repeat.y=1,r.offset.x=0,r.offset.y=0,r}function Jp(r,t,e,i){const n=gC(i);switch(e){case wm:return r*t;case Am:return r*t;case Em:return r*t*2;case od:return r*t/n.components*n.byteLength;case Yh:return r*t/n.components*n.byteLength;case Tm:return r*t*2/n.components*n.byteLength;case ad:return r*t*2/n.components*n.byteLength;case Sm:return r*t*3/n.components*n.byteLength;case Mi:return r*t*4/n.components*n.byteLength;case hd:return r*t*4/n.components*n.byteLength;case ah:case hh:return Math.floor((r+3)/4)*Math.floor((t+3)/4)*8;case lh:case ch:return Math.floor((r+3)/4)*Math.floor((t+3)/4)*16;case _u:case xu:return Math.max(r,16)*Math.max(t,8)/4;case gu:case yu:return Math.max(r,8)*Math.max(t,8)/2;case vu:case bu:return Math.floor((r+3)/4)*Math.floor((t+3)/4)*8;case Mu:return Math.floor((r+3)/4)*Math.floor((t+3)/4)*16;case wu:return Math.floor((r+3)/4)*Math.floor((t+3)/4)*16;case Su:return Math.floor((r+4)/5)*Math.floor((t+3)/4)*16;case Au:return Math.floor((r+4)/5)*Math.floor((t+4)/5)*16;case Eu:return Math.floor((r+5)/6)*Math.floor((t+4)/5)*16;case Tu:return Math.floor((r+5)/6)*Math.floor((t+5)/6)*16;case Cu:return Math.floor((r+7)/8)*Math.floor((t+4)/5)*16;case Ru:return Math.floor((r+7)/8)*Math.floor((t+5)/6)*16;case Pu:return Math.floor((r+7)/8)*Math.floor((t+7)/8)*16;case Iu:return Math.floor((r+9)/10)*Math.floor((t+4)/5)*16;case Lu:return Math.floor((r+9)/10)*Math.floor((t+5)/6)*16;case Du:return Math.floor((r+9)/10)*Math.floor((t+7)/8)*16;case Ou:return Math.floor((r+9)/10)*Math.floor((t+9)/10)*16;case Fu:return Math.floor((r+11)/12)*Math.floor((t+9)/10)*16;case zu:return Math.floor((r+11)/12)*Math.floor((t+11)/12)*16;case uh:case Uu:case Nu:return Math.ceil(r/4)*Math.ceil(t/4)*16;case Cm:case Bu:return Math.ceil(r/4)*Math.ceil(t/4)*8;case ku:case Vu:return Math.ceil(r/4)*Math.ceil(t/4)*16}throw new Error(`Unable to determine texture byte length for ${e} format.`)}function gC(r){switch(r){case Vn:case vm:return{byteLength:1,components:1};case ha:case bm:case ma:return{byteLength:2,components:1};case sd:case rd:return{byteLength:2,components:4};case _s:case nd:case Pi:return{byteLength:4,components:1};case Mm:return{byteLength:4,components:3}}throw new Error(`Unknown texture type ${r}.`)}const _C={contain:fC,cover:pC,fill:mC,getByteLength:Jp};function yC(r,t,e,i,n,s,o){const a=t.has("WEBGL_multisampled_render_to_texture")?t.get("WEBGL_multisampled_render_to_texture"):null,h=typeof navigator>"u"?!1:/OculusBrowser/g.test(navigator.userAgent),l=new Q,c=new WeakMap;let u;const d=new WeakMap;let f=!1;try{f=typeof OffscreenCanvas<"u"&&new OffscreenCanvas(1,1).getContext("2d")!==null}catch{}function p(L,A){return f?new OffscreenCanvas(L,A):Ph("canvas")}function _(L,A,G){let et=1;const tt=St(L);if((tt.width>G||tt.height>G)&&(et=G/Math.max(tt.width,tt.height)),et<1)if(typeof HTMLImageElement<"u"&&L instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&L instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&L instanceof ImageBitmap||typeof VideoFrame<"u"&&L instanceof VideoFrame){const nt=Math.floor(et*tt.width),Lt=Math.floor(et*tt.height);u===void 0&&(u=p(nt,Lt));const gt=A?p(nt,Lt):u;return gt.width=nt,gt.height=Lt,gt.getContext("2d").drawImage(L,0,0,nt,Lt),console.warn("THREE.WebGLRenderer: Texture has been resized from ("+tt.width+"x"+tt.height+") to ("+nt+"x"+Lt+")."),gt}else return"data"in L&&console.warn("THREE.WebGLRenderer: Image in DataTexture is too big ("+tt.width+"x"+tt.height+")."),L;return L}function g(L){return L.generateMipmaps&&L.minFilter!==Ze&&L.minFilter!==ke}function m(L){r.generateMipmap(L)}function x(L,A,G,et,tt=!1){if(L!==null){if(r[L]!==void 0)return r[L];console.warn("THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format '"+L+"'")}let nt=A;if(A===r.RED&&(G===r.FLOAT&&(nt=r.R32F),G===r.HALF_FLOAT&&(nt=r.R16F),G===r.UNSIGNED_BYTE&&(nt=r.R8)),A===r.RED_INTEGER&&(G===r.UNSIGNED_BYTE&&(nt=r.R8UI),G===r.UNSIGNED_SHORT&&(nt=r.R16UI),G===r.UNSIGNED_INT&&(nt=r.R32UI),G===r.BYTE&&(nt=r.R8I),G===r.SHORT&&(nt=r.R16I),G===r.INT&&(nt=r.R32I)),A===r.RG&&(G===r.FLOAT&&(nt=r.RG32F),G===r.HALF_FLOAT&&(nt=r.RG16F),G===r.UNSIGNED_BYTE&&(nt=r.RG8)),A===r.RG_INTEGER&&(G===r.UNSIGNED_BYTE&&(nt=r.RG8UI),G===r.UNSIGNED_SHORT&&(nt=r.RG16UI),G===r.UNSIGNED_INT&&(nt=r.RG32UI),G===r.BYTE&&(nt=r.RG8I),G===r.SHORT&&(nt=r.RG16I),G===r.INT&&(nt=r.RG32I)),A===r.RGB&&G===r.UNSIGNED_INT_5_9_9_9_REV&&(nt=r.RGB9_E5),A===r.RGBA){const Lt=tt?Ah:ae.getTransfer(et);G===r.FLOAT&&(nt=r.RGBA32F),G===r.HALF_FLOAT&&(nt=r.RGBA16F),G===r.UNSIGNED_BYTE&&(nt=Lt===ve?r.SRGB8_ALPHA8:r.RGBA8),G===r.UNSIGNED_SHORT_4_4_4_4&&(nt=r.RGBA4),G===r.UNSIGNED_SHORT_5_5_5_1&&(nt=r.RGB5_A1)}return(nt===r.R16F||nt===r.R32F||nt===r.RG16F||nt===r.RG32F||nt===r.RGBA16F||nt===r.RGBA32F)&&t.get("EXT_color_buffer_float"),nt}function y(L,A){let G;return L?A===null||A===_s||A===kr?G=r.DEPTH24_STENCIL8:A===Pi?G=r.DEPTH32F_STENCIL8:A===ha&&(G=r.DEPTH24_STENCIL8,console.warn("DepthTexture: 16 bit depth attachment is not supported with stencil. Using 24-bit attachment.")):A===null||A===_s||A===kr?G=r.DEPTH_COMPONENT24:A===Pi?G=r.DEPTH_COMPONENT32F:A===ha&&(G=r.DEPTH_COMPONENT16),G}function v(L,A){return g(L)===!0||L.isFramebufferTexture&&L.minFilter!==Ze&&L.minFilter!==ke?Math.log2(Math.max(A.width,A.height))+1:L.mipmaps!==void 0&&L.mipmaps.length>0?L.mipmaps.length:L.isCompressedTexture&&Array.isArray(L.image)?A.mipmaps.length:1}function E(L){const A=L.target;A.removeEventListener("dispose",E),w(A),A.isVideoTexture&&c.delete(A)}function b(L){const A=L.target;A.removeEventListener("dispose",b),S(A)}function w(L){const A=i.get(L);if(A.__webglInit===void 0)return;const G=L.source,et=d.get(G);if(et){const tt=et[A.__cacheKey];tt.usedTimes--,tt.usedTimes===0&&T(L),Object.keys(et).length===0&&d.delete(G)}i.remove(L)}function T(L){const A=i.get(L);r.deleteTexture(A.__webglTexture);const G=L.source,et=d.get(G);delete et[A.__cacheKey],o.memory.textures--}function S(L){const A=i.get(L);if(L.depthTexture&&L.depthTexture.dispose(),L.isWebGLCubeRenderTarget)for(let et=0;et<6;et++){if(Array.isArray(A.__webglFramebuffer[et]))for(let tt=0;tt<A.__webglFramebuffer[et].length;tt++)r.deleteFramebuffer(A.__webglFramebuffer[et][tt]);else r.deleteFramebuffer(A.__webglFramebuffer[et]);A.__webglDepthbuffer&&r.deleteRenderbuffer(A.__webglDepthbuffer[et])}else{if(Array.isArray(A.__webglFramebuffer))for(let et=0;et<A.__webglFramebuffer.length;et++)r.deleteFramebuffer(A.__webglFramebuffer[et]);else r.deleteFramebuffer(A.__webglFramebuffer);if(A.__webglDepthbuffer&&r.deleteRenderbuffer(A.__webglDepthbuffer),A.__webglMultisampledFramebuffer&&r.deleteFramebuffer(A.__webglMultisampledFramebuffer),A.__webglColorRenderbuffer)for(let et=0;et<A.__webglColorRenderbuffer.length;et++)A.__webglColorRenderbuffer[et]&&r.deleteRenderbuffer(A.__webglColorRenderbuffer[et]);A.__webglDepthRenderbuffer&&r.deleteRenderbuffer(A.__webglDepthRenderbuffer)}const G=L.textures;for(let et=0,tt=G.length;et<tt;et++){const nt=i.get(G[et]);nt.__webglTexture&&(r.deleteTexture(nt.__webglTexture),o.memory.textures--),i.remove(G[et])}i.remove(L)}let M=0;function I(){M=0}function N(){const L=M;return L>=n.maxTextures&&console.warn("THREE.WebGLTextures: Trying to use "+L+" texture units while this GPU supports only "+n.maxTextures),M+=1,L}function O(L){const A=[];return A.push(L.wrapS),A.push(L.wrapT),A.push(L.wrapR||0),A.push(L.magFilter),A.push(L.minFilter),A.push(L.anisotropy),A.push(L.internalFormat),A.push(L.format),A.push(L.type),A.push(L.generateMipmaps),A.push(L.premultiplyAlpha),A.push(L.flipY),A.push(L.unpackAlignment),A.push(L.colorSpace),A.join()}function B(L,A){const G=i.get(L);if(L.isVideoTexture&&Ot(L),L.isRenderTargetTexture===!1&&L.version>0&&G.__version!==L.version){const et=L.image;if(et===null)console.warn("THREE.WebGLRenderer: Texture marked for update but no image data found.");else if(et.complete===!1)console.warn("THREE.WebGLRenderer: Texture marked for update but image is incomplete");else{he(G,L,A);return}}e.bindTexture(r.TEXTURE_2D,G.__webglTexture,r.TEXTURE0+A)}function Y(L,A){const G=i.get(L);if(L.version>0&&G.__version!==L.version){he(G,L,A);return}e.bindTexture(r.TEXTURE_2D_ARRAY,G.__webglTexture,r.TEXTURE0+A)}function $(L,A){const G=i.get(L);if(L.version>0&&G.__version!==L.version){he(G,L,A);return}e.bindTexture(r.TEXTURE_3D,G.__webglTexture,r.TEXTURE0+A)}function st(L,A){const G=i.get(L);if(L.version>0&&G.__version!==L.version){Z(G,L,A);return}e.bindTexture(r.TEXTURE_CUBE_MAP,G.__webglTexture,r.TEXTURE0+A)}const X={[bh]:r.REPEAT,[rn]:r.CLAMP_TO_EDGE,[Mh]:r.MIRRORED_REPEAT},ut={[Ze]:r.NEAREST,[xm]:r.NEAREST_MIPMAP_NEAREST,[Zo]:r.NEAREST_MIPMAP_LINEAR,[ke]:r.LINEAR,[oh]:r.LINEAR_MIPMAP_NEAREST,[Un]:r.LINEAR_MIPMAP_LINEAR},pt={[pv]:r.NEVER,[vv]:r.ALWAYS,[mv]:r.LESS,[Pm]:r.LEQUAL,[gv]:r.EQUAL,[xv]:r.GEQUAL,[_v]:r.GREATER,[yv]:r.NOTEQUAL};function mt(L,A){if(A.type===Pi&&t.has("OES_texture_float_linear")===!1&&(A.magFilter===ke||A.magFilter===oh||A.magFilter===Zo||A.magFilter===Un||A.minFilter===ke||A.minFilter===oh||A.minFilter===Zo||A.minFilter===Un)&&console.warn("THREE.WebGLRenderer: Unable to use linear filtering with floating point textures. OES_texture_float_linear not supported on this device."),r.texParameteri(L,r.TEXTURE_WRAP_S,X[A.wrapS]),r.texParameteri(L,r.TEXTURE_WRAP_T,X[A.wrapT]),(L===r.TEXTURE_3D||L===r.TEXTURE_2D_ARRAY)&&r.texParameteri(L,r.TEXTURE_WRAP_R,X[A.wrapR]),r.texParameteri(L,r.TEXTURE_MAG_FILTER,ut[A.magFilter]),r.texParameteri(L,r.TEXTURE_MIN_FILTER,ut[A.minFilter]),A.compareFunction&&(r.texParameteri(L,r.TEXTURE_COMPARE_MODE,r.COMPARE_REF_TO_TEXTURE),r.texParameteri(L,r.TEXTURE_COMPARE_FUNC,pt[A.compareFunction])),t.has("EXT_texture_filter_anisotropic")===!0){if(A.magFilter===Ze||A.minFilter!==Zo&&A.minFilter!==Un||A.type===Pi&&t.has("OES_texture_float_linear")===!1)return;if(A.anisotropy>1||i.get(A).__currentAnisotropy){const G=t.get("EXT_texture_filter_anisotropic");r.texParameterf(L,G.TEXTURE_MAX_ANISOTROPY_EXT,Math.min(A.anisotropy,n.getMaxAnisotropy())),i.get(A).__currentAnisotropy=A.anisotropy}}}function Kt(L,A){let G=!1;L.__webglInit===void 0&&(L.__webglInit=!0,A.addEventListener("dispose",E));const et=A.source;let tt=d.get(et);tt===void 0&&(tt={},d.set(et,tt));const nt=O(A);if(nt!==L.__cacheKey){tt[nt]===void 0&&(tt[nt]={texture:r.createTexture(),usedTimes:0},o.memory.textures++,G=!0),tt[nt].usedTimes++;const Lt=tt[L.__cacheKey];Lt!==void 0&&(tt[L.__cacheKey].usedTimes--,Lt.usedTimes===0&&T(A)),L.__cacheKey=nt,L.__webglTexture=tt[nt].texture}return G}function he(L,A,G){let et=r.TEXTURE_2D;(A.isDataArrayTexture||A.isCompressedArrayTexture)&&(et=r.TEXTURE_2D_ARRAY),A.isData3DTexture&&(et=r.TEXTURE_3D);const tt=Kt(L,A),nt=A.source;e.bindTexture(et,L.__webglTexture,r.TEXTURE0+G);const Lt=i.get(nt);if(nt.version!==Lt.__version||tt===!0){e.activeTexture(r.TEXTURE0+G);const gt=ae.getPrimaries(ae.workingColorSpace),wt=A.colorSpace===ls?null:ae.getPrimaries(A.colorSpace),Wt=A.colorSpace===ls||gt===wt?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,A.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,A.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,Wt);let at=_(A.image,!1,n.maxTextureSize);at=yt(A,at);const Mt=s.convert(A.format,A.colorSpace),ee=s.convert(A.type);let Vt=x(A.internalFormat,Mt,ee,A.colorSpace,A.isVideoTexture);mt(et,A);let Et;const Gt=A.mipmaps,Qt=A.isVideoTexture!==!0,we=Lt.__version===void 0||tt===!0,F=nt.dataReady,lt=v(A,at);if(A.isDepthTexture)Vt=y(A.format===Vr,A.type),we&&(Qt?e.texStorage2D(r.TEXTURE_2D,1,Vt,at.width,at.height):e.texImage2D(r.TEXTURE_2D,0,Vt,at.width,at.height,0,Mt,ee,null));else if(A.isDataTexture)if(Gt.length>0){Qt&&we&&e.texStorage2D(r.TEXTURE_2D,lt,Vt,Gt[0].width,Gt[0].height);for(let j=0,it=Gt.length;j<it;j++)Et=Gt[j],Qt?F&&e.texSubImage2D(r.TEXTURE_2D,j,0,0,Et.width,Et.height,Mt,ee,Et.data):e.texImage2D(r.TEXTURE_2D,j,Vt,Et.width,Et.height,0,Mt,ee,Et.data);A.generateMipmaps=!1}else Qt?(we&&e.texStorage2D(r.TEXTURE_2D,lt,Vt,at.width,at.height),F&&e.texSubImage2D(r.TEXTURE_2D,0,0,0,at.width,at.height,Mt,ee,at.data)):e.texImage2D(r.TEXTURE_2D,0,Vt,at.width,at.height,0,Mt,ee,at.data);else if(A.isCompressedTexture)if(A.isCompressedArrayTexture){Qt&&we&&e.texStorage3D(r.TEXTURE_2D_ARRAY,lt,Vt,Gt[0].width,Gt[0].height,at.depth);for(let j=0,it=Gt.length;j<it;j++)if(Et=Gt[j],A.format!==Mi)if(Mt!==null)if(Qt){if(F)if(A.layerUpdates.size>0){const ft=Jp(Et.width,Et.height,A.format,A.type);for(const zt of A.layerUpdates){const ie=Et.data.subarray(zt*ft/Et.data.BYTES_PER_ELEMENT,(zt+1)*ft/Et.data.BYTES_PER_ELEMENT);e.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,j,0,0,zt,Et.width,Et.height,1,Mt,ie,0,0)}A.clearLayerUpdates()}else e.compressedTexSubImage3D(r.TEXTURE_2D_ARRAY,j,0,0,0,Et.width,Et.height,at.depth,Mt,Et.data,0,0)}else e.compressedTexImage3D(r.TEXTURE_2D_ARRAY,j,Vt,Et.width,Et.height,at.depth,0,Et.data,0,0);else console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()");else Qt?F&&e.texSubImage3D(r.TEXTURE_2D_ARRAY,j,0,0,0,Et.width,Et.height,at.depth,Mt,ee,Et.data):e.texImage3D(r.TEXTURE_2D_ARRAY,j,Vt,Et.width,Et.height,at.depth,0,Mt,ee,Et.data)}else{Qt&&we&&e.texStorage2D(r.TEXTURE_2D,lt,Vt,Gt[0].width,Gt[0].height);for(let j=0,it=Gt.length;j<it;j++)Et=Gt[j],A.format!==Mi?Mt!==null?Qt?F&&e.compressedTexSubImage2D(r.TEXTURE_2D,j,0,0,Et.width,Et.height,Mt,Et.data):e.compressedTexImage2D(r.TEXTURE_2D,j,Vt,Et.width,Et.height,0,Et.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()"):Qt?F&&e.texSubImage2D(r.TEXTURE_2D,j,0,0,Et.width,Et.height,Mt,ee,Et.data):e.texImage2D(r.TEXTURE_2D,j,Vt,Et.width,Et.height,0,Mt,ee,Et.data)}else if(A.isDataArrayTexture)if(Qt){if(we&&e.texStorage3D(r.TEXTURE_2D_ARRAY,lt,Vt,at.width,at.height,at.depth),F)if(A.layerUpdates.size>0){const j=Jp(at.width,at.height,A.format,A.type);for(const it of A.layerUpdates){const ft=at.data.subarray(it*j/at.data.BYTES_PER_ELEMENT,(it+1)*j/at.data.BYTES_PER_ELEMENT);e.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,it,at.width,at.height,1,Mt,ee,ft)}A.clearLayerUpdates()}else e.texSubImage3D(r.TEXTURE_2D_ARRAY,0,0,0,0,at.width,at.height,at.depth,Mt,ee,at.data)}else e.texImage3D(r.TEXTURE_2D_ARRAY,0,Vt,at.width,at.height,at.depth,0,Mt,ee,at.data);else if(A.isData3DTexture)Qt?(we&&e.texStorage3D(r.TEXTURE_3D,lt,Vt,at.width,at.height,at.depth),F&&e.texSubImage3D(r.TEXTURE_3D,0,0,0,0,at.width,at.height,at.depth,Mt,ee,at.data)):e.texImage3D(r.TEXTURE_3D,0,Vt,at.width,at.height,at.depth,0,Mt,ee,at.data);else if(A.isFramebufferTexture){if(we)if(Qt)e.texStorage2D(r.TEXTURE_2D,lt,Vt,at.width,at.height);else{let j=at.width,it=at.height;for(let ft=0;ft<lt;ft++)e.texImage2D(r.TEXTURE_2D,ft,Vt,j,it,0,Mt,ee,null),j>>=1,it>>=1}}else if(Gt.length>0){if(Qt&&we){const j=St(Gt[0]);e.texStorage2D(r.TEXTURE_2D,lt,Vt,j.width,j.height)}for(let j=0,it=Gt.length;j<it;j++)Et=Gt[j],Qt?F&&e.texSubImage2D(r.TEXTURE_2D,j,0,0,Mt,ee,Et):e.texImage2D(r.TEXTURE_2D,j,Vt,Mt,ee,Et);A.generateMipmaps=!1}else if(Qt){if(we){const j=St(at);e.texStorage2D(r.TEXTURE_2D,lt,Vt,j.width,j.height)}F&&e.texSubImage2D(r.TEXTURE_2D,0,0,0,Mt,ee,at)}else e.texImage2D(r.TEXTURE_2D,0,Vt,Mt,ee,at);g(A)&&m(et),Lt.__version=nt.version,A.onUpdate&&A.onUpdate(A)}L.__version=A.version}function Z(L,A,G){if(A.image.length!==6)return;const et=Kt(L,A),tt=A.source;e.bindTexture(r.TEXTURE_CUBE_MAP,L.__webglTexture,r.TEXTURE0+G);const nt=i.get(tt);if(tt.version!==nt.__version||et===!0){e.activeTexture(r.TEXTURE0+G);const Lt=ae.getPrimaries(ae.workingColorSpace),gt=A.colorSpace===ls?null:ae.getPrimaries(A.colorSpace),wt=A.colorSpace===ls||Lt===gt?r.NONE:r.BROWSER_DEFAULT_WEBGL;r.pixelStorei(r.UNPACK_FLIP_Y_WEBGL,A.flipY),r.pixelStorei(r.UNPACK_PREMULTIPLY_ALPHA_WEBGL,A.premultiplyAlpha),r.pixelStorei(r.UNPACK_ALIGNMENT,A.unpackAlignment),r.pixelStorei(r.UNPACK_COLORSPACE_CONVERSION_WEBGL,wt);const Wt=A.isCompressedTexture||A.image[0].isCompressedTexture,at=A.image[0]&&A.image[0].isDataTexture,Mt=[];for(let it=0;it<6;it++)!Wt&&!at?Mt[it]=_(A.image[it],!0,n.maxCubemapSize):Mt[it]=at?A.image[it].image:A.image[it],Mt[it]=yt(A,Mt[it]);const ee=Mt[0],Vt=s.convert(A.format,A.colorSpace),Et=s.convert(A.type),Gt=x(A.internalFormat,Vt,Et,A.colorSpace),Qt=A.isVideoTexture!==!0,we=nt.__version===void 0||et===!0,F=tt.dataReady;let lt=v(A,ee);mt(r.TEXTURE_CUBE_MAP,A);let j;if(Wt){Qt&&we&&e.texStorage2D(r.TEXTURE_CUBE_MAP,lt,Gt,ee.width,ee.height);for(let it=0;it<6;it++){j=Mt[it].mipmaps;for(let ft=0;ft<j.length;ft++){const zt=j[ft];A.format!==Mi?Vt!==null?Qt?F&&e.compressedTexSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+it,ft,0,0,zt.width,zt.height,Vt,zt.data):e.compressedTexImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+it,ft,Gt,zt.width,zt.height,0,zt.data):console.warn("THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()"):Qt?F&&e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+it,ft,0,0,zt.width,zt.height,Vt,Et,zt.data):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+it,ft,Gt,zt.width,zt.height,0,Vt,Et,zt.data)}}}else{if(j=A.mipmaps,Qt&&we){j.length>0&&lt++;const it=St(Mt[0]);e.texStorage2D(r.TEXTURE_CUBE_MAP,lt,Gt,it.width,it.height)}for(let it=0;it<6;it++)if(at){Qt?F&&e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+it,0,0,0,Mt[it].width,Mt[it].height,Vt,Et,Mt[it].data):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+it,0,Gt,Mt[it].width,Mt[it].height,0,Vt,Et,Mt[it].data);for(let ft=0;ft<j.length;ft++){const ie=j[ft].image[it].image;Qt?F&&e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+it,ft+1,0,0,ie.width,ie.height,Vt,Et,ie.data):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+it,ft+1,Gt,ie.width,ie.height,0,Vt,Et,ie.data)}}else{Qt?F&&e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+it,0,0,0,Vt,Et,Mt[it]):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+it,0,Gt,Vt,Et,Mt[it]);for(let ft=0;ft<j.length;ft++){const zt=j[ft];Qt?F&&e.texSubImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+it,ft+1,0,0,Vt,Et,zt.image[it]):e.texImage2D(r.TEXTURE_CUBE_MAP_POSITIVE_X+it,ft+1,Gt,Vt,Et,zt.image[it])}}}g(A)&&m(r.TEXTURE_CUBE_MAP),nt.__version=tt.version,A.onUpdate&&A.onUpdate(A)}L.__version=A.version}function ot(L,A,G,et,tt,nt){const Lt=s.convert(G.format,G.colorSpace),gt=s.convert(G.type),wt=x(G.internalFormat,Lt,gt,G.colorSpace);if(!i.get(A).__hasExternalTextures){const at=Math.max(1,A.width>>nt),Mt=Math.max(1,A.height>>nt);tt===r.TEXTURE_3D||tt===r.TEXTURE_2D_ARRAY?e.texImage3D(tt,nt,wt,at,Mt,A.depth,0,Lt,gt,null):e.texImage2D(tt,nt,wt,at,Mt,0,Lt,gt,null)}e.bindFramebuffer(r.FRAMEBUFFER,L),K(A)?a.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,et,tt,i.get(G).__webglTexture,0,xt(A)):(tt===r.TEXTURE_2D||tt>=r.TEXTURE_CUBE_MAP_POSITIVE_X&&tt<=r.TEXTURE_CUBE_MAP_NEGATIVE_Z)&&r.framebufferTexture2D(r.FRAMEBUFFER,et,tt,i.get(G).__webglTexture,nt),e.bindFramebuffer(r.FRAMEBUFFER,null)}function At(L,A,G){if(r.bindRenderbuffer(r.RENDERBUFFER,L),A.depthBuffer){const et=A.depthTexture,tt=et&&et.isDepthTexture?et.type:null,nt=y(A.stencilBuffer,tt),Lt=A.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,gt=xt(A);K(A)?a.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,gt,nt,A.width,A.height):G?r.renderbufferStorageMultisample(r.RENDERBUFFER,gt,nt,A.width,A.height):r.renderbufferStorage(r.RENDERBUFFER,nt,A.width,A.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,Lt,r.RENDERBUFFER,L)}else{const et=A.textures;for(let tt=0;tt<et.length;tt++){const nt=et[tt],Lt=s.convert(nt.format,nt.colorSpace),gt=s.convert(nt.type),wt=x(nt.internalFormat,Lt,gt,nt.colorSpace),Wt=xt(A);G&&K(A)===!1?r.renderbufferStorageMultisample(r.RENDERBUFFER,Wt,wt,A.width,A.height):K(A)?a.renderbufferStorageMultisampleEXT(r.RENDERBUFFER,Wt,wt,A.width,A.height):r.renderbufferStorage(r.RENDERBUFFER,wt,A.width,A.height)}}r.bindRenderbuffer(r.RENDERBUFFER,null)}function _t(L,A){if(A&&A.isWebGLCubeRenderTarget)throw new Error("Depth Texture with cube render targets is not supported");if(e.bindFramebuffer(r.FRAMEBUFFER,L),!(A.depthTexture&&A.depthTexture.isDepthTexture))throw new Error("renderTarget.depthTexture must be an instance of THREE.DepthTexture");(!i.get(A.depthTexture).__webglTexture||A.depthTexture.image.width!==A.width||A.depthTexture.image.height!==A.height)&&(A.depthTexture.image.width=A.width,A.depthTexture.image.height=A.height,A.depthTexture.needsUpdate=!0),B(A.depthTexture,0);const et=i.get(A.depthTexture).__webglTexture,tt=xt(A);if(A.depthTexture.format===Lr)K(A)?a.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,et,0,tt):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_ATTACHMENT,r.TEXTURE_2D,et,0);else if(A.depthTexture.format===Vr)K(A)?a.framebufferTexture2DMultisampleEXT(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,et,0,tt):r.framebufferTexture2D(r.FRAMEBUFFER,r.DEPTH_STENCIL_ATTACHMENT,r.TEXTURE_2D,et,0);else throw new Error("Unknown depthTexture format")}function Dt(L){const A=i.get(L),G=L.isWebGLCubeRenderTarget===!0;if(A.__boundDepthTexture!==L.depthTexture){const et=L.depthTexture;if(A.__depthDisposeCallback&&A.__depthDisposeCallback(),et){const tt=()=>{delete A.__boundDepthTexture,delete A.__depthDisposeCallback,et.removeEventListener("dispose",tt)};et.addEventListener("dispose",tt),A.__depthDisposeCallback=tt}A.__boundDepthTexture=et}if(L.depthTexture&&!A.__autoAllocateDepthBuffer){if(G)throw new Error("target.depthTexture not supported in Cube render targets");_t(A.__webglFramebuffer,L)}else if(G){A.__webglDepthbuffer=[];for(let et=0;et<6;et++)if(e.bindFramebuffer(r.FRAMEBUFFER,A.__webglFramebuffer[et]),A.__webglDepthbuffer[et]===void 0)A.__webglDepthbuffer[et]=r.createRenderbuffer(),At(A.__webglDepthbuffer[et],L,!1);else{const tt=L.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,nt=A.__webglDepthbuffer[et];r.bindRenderbuffer(r.RENDERBUFFER,nt),r.framebufferRenderbuffer(r.FRAMEBUFFER,tt,r.RENDERBUFFER,nt)}}else if(e.bindFramebuffer(r.FRAMEBUFFER,A.__webglFramebuffer),A.__webglDepthbuffer===void 0)A.__webglDepthbuffer=r.createRenderbuffer(),At(A.__webglDepthbuffer,L,!1);else{const et=L.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,tt=A.__webglDepthbuffer;r.bindRenderbuffer(r.RENDERBUFFER,tt),r.framebufferRenderbuffer(r.FRAMEBUFFER,et,r.RENDERBUFFER,tt)}e.bindFramebuffer(r.FRAMEBUFFER,null)}function Ht(L,A,G){const et=i.get(L);A!==void 0&&ot(et.__webglFramebuffer,L,L.texture,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,0),G!==void 0&&Dt(L)}function Bt(L){const A=L.texture,G=i.get(L),et=i.get(A);L.addEventListener("dispose",b);const tt=L.textures,nt=L.isWebGLCubeRenderTarget===!0,Lt=tt.length>1;if(Lt||(et.__webglTexture===void 0&&(et.__webglTexture=r.createTexture()),et.__version=A.version,o.memory.textures++),nt){G.__webglFramebuffer=[];for(let gt=0;gt<6;gt++)if(A.mipmaps&&A.mipmaps.length>0){G.__webglFramebuffer[gt]=[];for(let wt=0;wt<A.mipmaps.length;wt++)G.__webglFramebuffer[gt][wt]=r.createFramebuffer()}else G.__webglFramebuffer[gt]=r.createFramebuffer()}else{if(A.mipmaps&&A.mipmaps.length>0){G.__webglFramebuffer=[];for(let gt=0;gt<A.mipmaps.length;gt++)G.__webglFramebuffer[gt]=r.createFramebuffer()}else G.__webglFramebuffer=r.createFramebuffer();if(Lt)for(let gt=0,wt=tt.length;gt<wt;gt++){const Wt=i.get(tt[gt]);Wt.__webglTexture===void 0&&(Wt.__webglTexture=r.createTexture(),o.memory.textures++)}if(L.samples>0&&K(L)===!1){G.__webglMultisampledFramebuffer=r.createFramebuffer(),G.__webglColorRenderbuffer=[],e.bindFramebuffer(r.FRAMEBUFFER,G.__webglMultisampledFramebuffer);for(let gt=0;gt<tt.length;gt++){const wt=tt[gt];G.__webglColorRenderbuffer[gt]=r.createRenderbuffer(),r.bindRenderbuffer(r.RENDERBUFFER,G.__webglColorRenderbuffer[gt]);const Wt=s.convert(wt.format,wt.colorSpace),at=s.convert(wt.type),Mt=x(wt.internalFormat,Wt,at,wt.colorSpace,L.isXRRenderTarget===!0),ee=xt(L);r.renderbufferStorageMultisample(r.RENDERBUFFER,ee,Mt,L.width,L.height),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+gt,r.RENDERBUFFER,G.__webglColorRenderbuffer[gt])}r.bindRenderbuffer(r.RENDERBUFFER,null),L.depthBuffer&&(G.__webglDepthRenderbuffer=r.createRenderbuffer(),At(G.__webglDepthRenderbuffer,L,!0)),e.bindFramebuffer(r.FRAMEBUFFER,null)}}if(nt){e.bindTexture(r.TEXTURE_CUBE_MAP,et.__webglTexture),mt(r.TEXTURE_CUBE_MAP,A);for(let gt=0;gt<6;gt++)if(A.mipmaps&&A.mipmaps.length>0)for(let wt=0;wt<A.mipmaps.length;wt++)ot(G.__webglFramebuffer[gt][wt],L,A,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+gt,wt);else ot(G.__webglFramebuffer[gt],L,A,r.COLOR_ATTACHMENT0,r.TEXTURE_CUBE_MAP_POSITIVE_X+gt,0);g(A)&&m(r.TEXTURE_CUBE_MAP),e.unbindTexture()}else if(Lt){for(let gt=0,wt=tt.length;gt<wt;gt++){const Wt=tt[gt],at=i.get(Wt);e.bindTexture(r.TEXTURE_2D,at.__webglTexture),mt(r.TEXTURE_2D,Wt),ot(G.__webglFramebuffer,L,Wt,r.COLOR_ATTACHMENT0+gt,r.TEXTURE_2D,0),g(Wt)&&m(r.TEXTURE_2D)}e.unbindTexture()}else{let gt=r.TEXTURE_2D;if((L.isWebGL3DRenderTarget||L.isWebGLArrayRenderTarget)&&(gt=L.isWebGL3DRenderTarget?r.TEXTURE_3D:r.TEXTURE_2D_ARRAY),e.bindTexture(gt,et.__webglTexture),mt(gt,A),A.mipmaps&&A.mipmaps.length>0)for(let wt=0;wt<A.mipmaps.length;wt++)ot(G.__webglFramebuffer[wt],L,A,r.COLOR_ATTACHMENT0,gt,wt);else ot(G.__webglFramebuffer,L,A,r.COLOR_ATTACHMENT0,gt,0);g(A)&&m(gt),e.unbindTexture()}L.depthBuffer&&Dt(L)}function re(L){const A=L.textures;for(let G=0,et=A.length;G<et;G++){const tt=A[G];if(g(tt)){const nt=L.isWebGLCubeRenderTarget?r.TEXTURE_CUBE_MAP:r.TEXTURE_2D,Lt=i.get(tt).__webglTexture;e.bindTexture(nt,Lt),m(nt),e.unbindTexture()}}}const P=[],ht=[];function rt(L){if(L.samples>0){if(K(L)===!1){const A=L.textures,G=L.width,et=L.height;let tt=r.COLOR_BUFFER_BIT;const nt=L.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT,Lt=i.get(L),gt=A.length>1;if(gt)for(let wt=0;wt<A.length;wt++)e.bindFramebuffer(r.FRAMEBUFFER,Lt.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+wt,r.RENDERBUFFER,null),e.bindFramebuffer(r.FRAMEBUFFER,Lt.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+wt,r.TEXTURE_2D,null,0);e.bindFramebuffer(r.READ_FRAMEBUFFER,Lt.__webglMultisampledFramebuffer),e.bindFramebuffer(r.DRAW_FRAMEBUFFER,Lt.__webglFramebuffer);for(let wt=0;wt<A.length;wt++){if(L.resolveDepthBuffer&&(L.depthBuffer&&(tt|=r.DEPTH_BUFFER_BIT),L.stencilBuffer&&L.resolveStencilBuffer&&(tt|=r.STENCIL_BUFFER_BIT)),gt){r.framebufferRenderbuffer(r.READ_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.RENDERBUFFER,Lt.__webglColorRenderbuffer[wt]);const Wt=i.get(A[wt]).__webglTexture;r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0,r.TEXTURE_2D,Wt,0)}r.blitFramebuffer(0,0,G,et,0,0,G,et,tt,r.NEAREST),h===!0&&(P.length=0,ht.length=0,P.push(r.COLOR_ATTACHMENT0+wt),L.depthBuffer&&L.resolveDepthBuffer===!1&&(P.push(nt),ht.push(nt),r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,ht)),r.invalidateFramebuffer(r.READ_FRAMEBUFFER,P))}if(e.bindFramebuffer(r.READ_FRAMEBUFFER,null),e.bindFramebuffer(r.DRAW_FRAMEBUFFER,null),gt)for(let wt=0;wt<A.length;wt++){e.bindFramebuffer(r.FRAMEBUFFER,Lt.__webglMultisampledFramebuffer),r.framebufferRenderbuffer(r.FRAMEBUFFER,r.COLOR_ATTACHMENT0+wt,r.RENDERBUFFER,Lt.__webglColorRenderbuffer[wt]);const Wt=i.get(A[wt]).__webglTexture;e.bindFramebuffer(r.FRAMEBUFFER,Lt.__webglFramebuffer),r.framebufferTexture2D(r.DRAW_FRAMEBUFFER,r.COLOR_ATTACHMENT0+wt,r.TEXTURE_2D,Wt,0)}e.bindFramebuffer(r.DRAW_FRAMEBUFFER,Lt.__webglMultisampledFramebuffer)}else if(L.depthBuffer&&L.resolveDepthBuffer===!1&&h){const A=L.stencilBuffer?r.DEPTH_STENCIL_ATTACHMENT:r.DEPTH_ATTACHMENT;r.invalidateFramebuffer(r.DRAW_FRAMEBUFFER,[A])}}}function xt(L){return Math.min(n.maxSamples,L.samples)}function K(L){const A=i.get(L);return L.samples>0&&t.has("WEBGL_multisampled_render_to_texture")===!0&&A.__useRenderToTexture!==!1}function Ot(L){const A=o.render.frame;c.get(L)!==A&&(c.set(L,A),L.update())}function yt(L,A){const G=L.colorSpace,et=L.format,tt=L.type;return L.isCompressedTexture===!0||L.isVideoTexture===!0||G!==xs&&G!==ls&&(ae.getTransfer(G)===ve?(et!==Mi||tt!==Vn)&&console.warn("THREE.WebGLTextures: sRGB encoded textures have to use RGBAFormat and UnsignedByteType."):console.error("THREE.WebGLTextures: Unsupported texture color space:",G)),A}function St(L){return typeof HTMLImageElement<"u"&&L instanceof HTMLImageElement?(l.width=L.naturalWidth||L.width,l.height=L.naturalHeight||L.height):typeof VideoFrame<"u"&&L instanceof VideoFrame?(l.width=L.displayWidth,l.height=L.displayHeight):(l.width=L.width,l.height=L.height),l}this.allocateTextureUnit=N,this.resetTextureUnits=I,this.setTexture2D=B,this.setTexture2DArray=Y,this.setTexture3D=$,this.setTextureCube=st,this.rebindTextures=Ht,this.setupRenderTarget=Bt,this.updateRenderTargetMipmap=re,this.updateMultisampleRenderTarget=rt,this.setupDepthRenderbuffer=Dt,this.setupFrameBufferTexture=ot,this.useMultisampledRTT=K}function Hv(r,t){function e(i,n=ls){let s;const o=ae.getTransfer(n);if(i===Vn)return r.UNSIGNED_BYTE;if(i===sd)return r.UNSIGNED_SHORT_4_4_4_4;if(i===rd)return r.UNSIGNED_SHORT_5_5_5_1;if(i===Mm)return r.UNSIGNED_INT_5_9_9_9_REV;if(i===vm)return r.BYTE;if(i===bm)return r.SHORT;if(i===ha)return r.UNSIGNED_SHORT;if(i===nd)return r.INT;if(i===_s)return r.UNSIGNED_INT;if(i===Pi)return r.FLOAT;if(i===ma)return r.HALF_FLOAT;if(i===wm)return r.ALPHA;if(i===Sm)return r.RGB;if(i===Mi)return r.RGBA;if(i===Am)return r.LUMINANCE;if(i===Em)return r.LUMINANCE_ALPHA;if(i===Lr)return r.DEPTH_COMPONENT;if(i===Vr)return r.DEPTH_STENCIL;if(i===od)return r.RED;if(i===Yh)return r.RED_INTEGER;if(i===Tm)return r.RG;if(i===ad)return r.RG_INTEGER;if(i===hd)return r.RGBA_INTEGER;if(i===ah||i===hh||i===lh||i===ch)if(o===ve)if(s=t.get("WEBGL_compressed_texture_s3tc_srgb"),s!==null){if(i===ah)return s.COMPRESSED_SRGB_S3TC_DXT1_EXT;if(i===hh)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT1_EXT;if(i===lh)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT3_EXT;if(i===ch)return s.COMPRESSED_SRGB_ALPHA_S3TC_DXT5_EXT}else return null;else if(s=t.get("WEBGL_compressed_texture_s3tc"),s!==null){if(i===ah)return s.COMPRESSED_RGB_S3TC_DXT1_EXT;if(i===hh)return s.COMPRESSED_RGBA_S3TC_DXT1_EXT;if(i===lh)return s.COMPRESSED_RGBA_S3TC_DXT3_EXT;if(i===ch)return s.COMPRESSED_RGBA_S3TC_DXT5_EXT}else return null;if(i===gu||i===_u||i===yu||i===xu)if(s=t.get("WEBGL_compressed_texture_pvrtc"),s!==null){if(i===gu)return s.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;if(i===_u)return s.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;if(i===yu)return s.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;if(i===xu)return s.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG}else return null;if(i===vu||i===bu||i===Mu)if(s=t.get("WEBGL_compressed_texture_etc"),s!==null){if(i===vu||i===bu)return o===ve?s.COMPRESSED_SRGB8_ETC2:s.COMPRESSED_RGB8_ETC2;if(i===Mu)return o===ve?s.COMPRESSED_SRGB8_ALPHA8_ETC2_EAC:s.COMPRESSED_RGBA8_ETC2_EAC}else return null;if(i===wu||i===Su||i===Au||i===Eu||i===Tu||i===Cu||i===Ru||i===Pu||i===Iu||i===Lu||i===Du||i===Ou||i===Fu||i===zu)if(s=t.get("WEBGL_compressed_texture_astc"),s!==null){if(i===wu)return o===ve?s.COMPRESSED_SRGB8_ALPHA8_ASTC_4x4_KHR:s.COMPRESSED_RGBA_ASTC_4x4_KHR;if(i===Su)return o===ve?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x4_KHR:s.COMPRESSED_RGBA_ASTC_5x4_KHR;if(i===Au)return o===ve?s.COMPRESSED_SRGB8_ALPHA8_ASTC_5x5_KHR:s.COMPRESSED_RGBA_ASTC_5x5_KHR;if(i===Eu)return o===ve?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x5_KHR:s.COMPRESSED_RGBA_ASTC_6x5_KHR;if(i===Tu)return o===ve?s.COMPRESSED_SRGB8_ALPHA8_ASTC_6x6_KHR:s.COMPRESSED_RGBA_ASTC_6x6_KHR;if(i===Cu)return o===ve?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x5_KHR:s.COMPRESSED_RGBA_ASTC_8x5_KHR;if(i===Ru)return o===ve?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x6_KHR:s.COMPRESSED_RGBA_ASTC_8x6_KHR;if(i===Pu)return o===ve?s.COMPRESSED_SRGB8_ALPHA8_ASTC_8x8_KHR:s.COMPRESSED_RGBA_ASTC_8x8_KHR;if(i===Iu)return o===ve?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x5_KHR:s.COMPRESSED_RGBA_ASTC_10x5_KHR;if(i===Lu)return o===ve?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x6_KHR:s.COMPRESSED_RGBA_ASTC_10x6_KHR;if(i===Du)return o===ve?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x8_KHR:s.COMPRESSED_RGBA_ASTC_10x8_KHR;if(i===Ou)return o===ve?s.COMPRESSED_SRGB8_ALPHA8_ASTC_10x10_KHR:s.COMPRESSED_RGBA_ASTC_10x10_KHR;if(i===Fu)return o===ve?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x10_KHR:s.COMPRESSED_RGBA_ASTC_12x10_KHR;if(i===zu)return o===ve?s.COMPRESSED_SRGB8_ALPHA8_ASTC_12x12_KHR:s.COMPRESSED_RGBA_ASTC_12x12_KHR}else return null;if(i===uh||i===Uu||i===Nu)if(s=t.get("EXT_texture_compression_bptc"),s!==null){if(i===uh)return o===ve?s.COMPRESSED_SRGB_ALPHA_BPTC_UNORM_EXT:s.COMPRESSED_RGBA_BPTC_UNORM_EXT;if(i===Uu)return s.COMPRESSED_RGB_BPTC_SIGNED_FLOAT_EXT;if(i===Nu)return s.COMPRESSED_RGB_BPTC_UNSIGNED_FLOAT_EXT}else return null;if(i===Cm||i===Bu||i===ku||i===Vu)if(s=t.get("EXT_texture_compression_rgtc"),s!==null){if(i===uh)return s.COMPRESSED_RED_RGTC1_EXT;if(i===Bu)return s.COMPRESSED_SIGNED_RED_RGTC1_EXT;if(i===ku)return s.COMPRESSED_RED_GREEN_RGTC2_EXT;if(i===Vu)return s.COMPRESSED_SIGNED_RED_GREEN_RGTC2_EXT}else return null;return i===kr?r.UNSIGNED_INT_24_8:r[i]!==void 0?r[i]:null}return{convert:e}}class Gv extends Ye{constructor(t=[]){super(),this.isArrayCamera=!0,this.cameras=t}}let Rr=class extends pe{constructor(){super(),this.isGroup=!0,this.type="Group"}};const xC={type:"move"};class Uf{constructor(){this._targetRay=null,this._grip=null,this._hand=null}getHandSpace(){return this._hand===null&&(this._hand=new Rr,this._hand.matrixAutoUpdate=!1,this._hand.visible=!1,this._hand.joints={},this._hand.inputState={pinching:!1}),this._hand}getTargetRaySpace(){return this._targetRay===null&&(this._targetRay=new Rr,this._targetRay.matrixAutoUpdate=!1,this._targetRay.visible=!1,this._targetRay.hasLinearVelocity=!1,this._targetRay.linearVelocity=new R,this._targetRay.hasAngularVelocity=!1,this._targetRay.angularVelocity=new R),this._targetRay}getGripSpace(){return this._grip===null&&(this._grip=new Rr,this._grip.matrixAutoUpdate=!1,this._grip.visible=!1,this._grip.hasLinearVelocity=!1,this._grip.linearVelocity=new R,this._grip.hasAngularVelocity=!1,this._grip.angularVelocity=new R),this._grip}dispatchEvent(t){return this._targetRay!==null&&this._targetRay.dispatchEvent(t),this._grip!==null&&this._grip.dispatchEvent(t),this._hand!==null&&this._hand.dispatchEvent(t),this}connect(t){if(t&&t.hand){const e=this._hand;if(e)for(const i of t.hand.values())this._getHandJoint(e,i)}return this.dispatchEvent({type:"connected",data:t}),this}disconnect(t){return this.dispatchEvent({type:"disconnected",data:t}),this._targetRay!==null&&(this._targetRay.visible=!1),this._grip!==null&&(this._grip.visible=!1),this._hand!==null&&(this._hand.visible=!1),this}update(t,e,i){let n=null,s=null,o=null;const a=this._targetRay,h=this._grip,l=this._hand;if(t&&e.session.visibilityState!=="visible-blurred"){if(l&&t.hand){o=!0;for(const _ of t.hand.values()){const g=e.getJointPose(_,i),m=this._getHandJoint(l,_);g!==null&&(m.matrix.fromArray(g.transform.matrix),m.matrix.decompose(m.position,m.rotation,m.scale),m.matrixWorldNeedsUpdate=!0,m.jointRadius=g.radius),m.visible=g!==null}const c=l.joints["index-finger-tip"],u=l.joints["thumb-tip"],d=c.position.distanceTo(u.position),f=.02,p=.005;l.inputState.pinching&&d>f+p?(l.inputState.pinching=!1,this.dispatchEvent({type:"pinchend",handedness:t.handedness,target:this})):!l.inputState.pinching&&d<=f-p&&(l.inputState.pinching=!0,this.dispatchEvent({type:"pinchstart",handedness:t.handedness,target:this}))}else h!==null&&t.gripSpace&&(s=e.getPose(t.gripSpace,i),s!==null&&(h.matrix.fromArray(s.transform.matrix),h.matrix.decompose(h.position,h.rotation,h.scale),h.matrixWorldNeedsUpdate=!0,s.linearVelocity?(h.hasLinearVelocity=!0,h.linearVelocity.copy(s.linearVelocity)):h.hasLinearVelocity=!1,s.angularVelocity?(h.hasAngularVelocity=!0,h.angularVelocity.copy(s.angularVelocity)):h.hasAngularVelocity=!1));a!==null&&(n=e.getPose(t.targetRaySpace,i),n===null&&s!==null&&(n=s),n!==null&&(a.matrix.fromArray(n.transform.matrix),a.matrix.decompose(a.position,a.rotation,a.scale),a.matrixWorldNeedsUpdate=!0,n.linearVelocity?(a.hasLinearVelocity=!0,a.linearVelocity.copy(n.linearVelocity)):a.hasLinearVelocity=!1,n.angularVelocity?(a.hasAngularVelocity=!0,a.angularVelocity.copy(n.angularVelocity)):a.hasAngularVelocity=!1,this.dispatchEvent(xC)))}return a!==null&&(a.visible=n!==null),h!==null&&(h.visible=s!==null),l!==null&&(l.visible=o!==null),this}_getHandJoint(t,e){if(t.joints[e.jointName]===void 0){const i=new Rr;i.matrixAutoUpdate=!1,i.visible=!1,t.joints[e.jointName]=i,t.add(i)}return t.joints[e.jointName]}}const vC=`
void main() {

	gl_Position = vec4( position, 1.0 );

}`,bC=`
uniform sampler2DArray depthColor;
uniform float depthWidth;
uniform float depthHeight;

void main() {

	vec2 coord = vec2( gl_FragCoord.x / depthWidth, gl_FragCoord.y / depthHeight );

	if ( coord.x >= 1.0 ) {

		gl_FragDepth = texture( depthColor, vec3( coord.x - 1.0, coord.y, 1 ) ).r;

	} else {

		gl_FragDepth = texture( depthColor, vec3( coord.x, coord.y, 0 ) ).r;

	}

}`;class MC{constructor(){this.texture=null,this.mesh=null,this.depthNear=0,this.depthFar=0}init(t,e,i){if(this.texture===null){const n=new Ke,s=t.properties.get(n);s.__webglTexture=e.texture,(e.depthNear!=i.depthNear||e.depthFar!=i.depthFar)&&(this.depthNear=e.depthNear,this.depthFar=e.depthFar),this.texture=n}}getMesh(t){if(this.texture!==null&&this.mesh===null){const e=t.cameras[0].viewport,i=new hn({vertexShader:vC,fragmentShader:bC,uniforms:{depthColor:{value:this.texture},depthWidth:{value:e.z},depthHeight:{value:e.w}}});this.mesh=new ge(new _a(20,20),i)}return this.mesh}reset(){this.texture=null,this.mesh=null}getDepthTexture(){return this.texture}}class wC extends Gn{constructor(t,e){super();const i=this;let n=null,s=1,o=null,a="local-floor",h=1,l=null,c=null,u=null,d=null,f=null,p=null;const _=new MC,g=e.getContextAttributes();let m=null,x=null;const y=[],v=[],E=new Q;let b=null;const w=new Ye;w.layers.enable(1),w.viewport=new se;const T=new Ye;T.layers.enable(2),T.viewport=new se;const S=[w,T],M=new Gv;M.layers.enable(1),M.layers.enable(2);let I=null,N=null;this.cameraAutoUpdate=!0,this.enabled=!1,this.isPresenting=!1,this.getController=function(Z){let ot=y[Z];return ot===void 0&&(ot=new Uf,y[Z]=ot),ot.getTargetRaySpace()},this.getControllerGrip=function(Z){let ot=y[Z];return ot===void 0&&(ot=new Uf,y[Z]=ot),ot.getGripSpace()},this.getHand=function(Z){let ot=y[Z];return ot===void 0&&(ot=new Uf,y[Z]=ot),ot.getHandSpace()};function O(Z){const ot=v.indexOf(Z.inputSource);if(ot===-1)return;const At=y[ot];At!==void 0&&(At.update(Z.inputSource,Z.frame,l||o),At.dispatchEvent({type:Z.type,data:Z.inputSource}))}function B(){n.removeEventListener("select",O),n.removeEventListener("selectstart",O),n.removeEventListener("selectend",O),n.removeEventListener("squeeze",O),n.removeEventListener("squeezestart",O),n.removeEventListener("squeezeend",O),n.removeEventListener("end",B),n.removeEventListener("inputsourceschange",Y);for(let Z=0;Z<y.length;Z++){const ot=v[Z];ot!==null&&(v[Z]=null,y[Z].disconnect(ot))}I=null,N=null,_.reset(),t.setRenderTarget(m),f=null,d=null,u=null,n=null,x=null,he.stop(),i.isPresenting=!1,t.setPixelRatio(b),t.setSize(E.width,E.height,!1),i.dispatchEvent({type:"sessionend"})}this.setFramebufferScaleFactor=function(Z){s=Z,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change framebuffer scale while presenting.")},this.setReferenceSpaceType=function(Z){a=Z,i.isPresenting===!0&&console.warn("THREE.WebXRManager: Cannot change reference space type while presenting.")},this.getReferenceSpace=function(){return l||o},this.setReferenceSpace=function(Z){l=Z},this.getBaseLayer=function(){return d!==null?d:f},this.getBinding=function(){return u},this.getFrame=function(){return p},this.getSession=function(){return n},this.setSession=async function(Z){if(n=Z,n!==null){if(m=t.getRenderTarget(),n.addEventListener("select",O),n.addEventListener("selectstart",O),n.addEventListener("selectend",O),n.addEventListener("squeeze",O),n.addEventListener("squeezestart",O),n.addEventListener("squeezeend",O),n.addEventListener("end",B),n.addEventListener("inputsourceschange",Y),g.xrCompatible!==!0&&await e.makeXRCompatible(),b=t.getPixelRatio(),t.getSize(E),n.renderState.layers===void 0){const ot={antialias:g.antialias,alpha:!0,depth:g.depth,stencil:g.stencil,framebufferScaleFactor:s};f=new XRWebGLLayer(n,e,ot),n.updateRenderState({baseLayer:f}),t.setPixelRatio(1),t.setSize(f.framebufferWidth,f.framebufferHeight,!1),x=new En(f.framebufferWidth,f.framebufferHeight,{format:Mi,type:Vn,colorSpace:t.outputColorSpace,stencilBuffer:g.stencil})}else{let ot=null,At=null,_t=null;g.depth&&(_t=g.stencil?e.DEPTH24_STENCIL8:e.DEPTH_COMPONENT24,ot=g.stencil?Vr:Lr,At=g.stencil?kr:_s);const Dt={colorFormat:e.RGBA8,depthFormat:_t,scaleFactor:s};u=new XRWebGLBinding(n,e),d=u.createProjectionLayer(Dt),n.updateRenderState({layers:[d]}),t.setPixelRatio(1),t.setSize(d.textureWidth,d.textureHeight,!1),x=new En(d.textureWidth,d.textureHeight,{format:Mi,type:Vn,depthTexture:new zm(d.textureWidth,d.textureHeight,At,void 0,void 0,void 0,void 0,void 0,void 0,ot),stencilBuffer:g.stencil,colorSpace:t.outputColorSpace,samples:g.antialias?4:0,resolveDepthBuffer:d.ignoreDepthValues===!1})}x.isXRRenderTarget=!0,this.setFoveation(h),l=null,o=await n.requestReferenceSpace(a),he.setContext(n),he.start(),i.isPresenting=!0,i.dispatchEvent({type:"sessionstart"})}},this.getEnvironmentBlendMode=function(){if(n!==null)return n.environmentBlendMode},this.getDepthTexture=function(){return _.getDepthTexture()};function Y(Z){for(let ot=0;ot<Z.removed.length;ot++){const At=Z.removed[ot],_t=v.indexOf(At);_t>=0&&(v[_t]=null,y[_t].disconnect(At))}for(let ot=0;ot<Z.added.length;ot++){const At=Z.added[ot];let _t=v.indexOf(At);if(_t===-1){for(let Ht=0;Ht<y.length;Ht++)if(Ht>=v.length){v.push(At),_t=Ht;break}else if(v[Ht]===null){v[Ht]=At,_t=Ht;break}if(_t===-1)break}const Dt=y[_t];Dt&&Dt.connect(At)}}const $=new R,st=new R;function X(Z,ot,At){$.setFromMatrixPosition(ot.matrixWorld),st.setFromMatrixPosition(At.matrixWorld);const _t=$.distanceTo(st),Dt=ot.projectionMatrix.elements,Ht=At.projectionMatrix.elements,Bt=Dt[14]/(Dt[10]-1),re=Dt[14]/(Dt[10]+1),P=(Dt[9]+1)/Dt[5],ht=(Dt[9]-1)/Dt[5],rt=(Dt[8]-1)/Dt[0],xt=(Ht[8]+1)/Ht[0],K=Bt*rt,Ot=Bt*xt,yt=_t/(-rt+xt),St=yt*-rt;if(ot.matrixWorld.decompose(Z.position,Z.quaternion,Z.scale),Z.translateX(St),Z.translateZ(yt),Z.matrixWorld.compose(Z.position,Z.quaternion,Z.scale),Z.matrixWorldInverse.copy(Z.matrixWorld).invert(),Dt[10]===-1)Z.projectionMatrix.copy(ot.projectionMatrix),Z.projectionMatrixInverse.copy(ot.projectionMatrixInverse);else{const L=Bt+yt,A=re+yt,G=K-St,et=Ot+(_t-St),tt=P*re/A*L,nt=ht*re/A*L;Z.projectionMatrix.makePerspective(G,et,tt,nt,L,A),Z.projectionMatrixInverse.copy(Z.projectionMatrix).invert()}}function ut(Z,ot){ot===null?Z.matrixWorld.copy(Z.matrix):Z.matrixWorld.multiplyMatrices(ot.matrixWorld,Z.matrix),Z.matrixWorldInverse.copy(Z.matrixWorld).invert()}this.updateCamera=function(Z){if(n===null)return;let ot=Z.near,At=Z.far;_.texture!==null&&(_.depthNear>0&&(ot=_.depthNear),_.depthFar>0&&(At=_.depthFar)),M.near=T.near=w.near=ot,M.far=T.far=w.far=At,(I!==M.near||N!==M.far)&&(n.updateRenderState({depthNear:M.near,depthFar:M.far}),I=M.near,N=M.far);const _t=Z.parent,Dt=M.cameras;ut(M,_t);for(let Ht=0;Ht<Dt.length;Ht++)ut(Dt[Ht],_t);Dt.length===2?X(M,w,T):M.projectionMatrix.copy(w.projectionMatrix),pt(Z,M,_t)};function pt(Z,ot,At){At===null?Z.matrix.copy(ot.matrixWorld):(Z.matrix.copy(At.matrixWorld),Z.matrix.invert(),Z.matrix.multiply(ot.matrixWorld)),Z.matrix.decompose(Z.position,Z.quaternion,Z.scale),Z.updateMatrixWorld(!0),Z.projectionMatrix.copy(ot.projectionMatrix),Z.projectionMatrixInverse.copy(ot.projectionMatrixInverse),Z.isPerspectiveCamera&&(Z.fov=la*2*Math.atan(1/Z.projectionMatrix.elements[5]),Z.zoom=1)}this.getCamera=function(){return M},this.getFoveation=function(){if(!(d===null&&f===null))return h},this.setFoveation=function(Z){h=Z,d!==null&&(d.fixedFoveation=Z),f!==null&&f.fixedFoveation!==void 0&&(f.fixedFoveation=Z)},this.hasDepthSensing=function(){return _.texture!==null},this.getDepthSensingMesh=function(){return _.getMesh(M)};let mt=null;function Kt(Z,ot){if(c=ot.getViewerPose(l||o),p=ot,c!==null){const At=c.views;f!==null&&(t.setRenderTargetFramebuffer(x,f.framebuffer),t.setRenderTarget(x));let _t=!1;At.length!==M.cameras.length&&(M.cameras.length=0,_t=!0);for(let Ht=0;Ht<At.length;Ht++){const Bt=At[Ht];let re=null;if(f!==null)re=f.getViewport(Bt);else{const ht=u.getViewSubImage(d,Bt);re=ht.viewport,Ht===0&&(t.setRenderTargetTextures(x,ht.colorTexture,d.ignoreDepthValues?void 0:ht.depthStencilTexture),t.setRenderTarget(x))}let P=S[Ht];P===void 0&&(P=new Ye,P.layers.enable(Ht),P.viewport=new se,S[Ht]=P),P.matrix.fromArray(Bt.transform.matrix),P.matrix.decompose(P.position,P.quaternion,P.scale),P.projectionMatrix.fromArray(Bt.projectionMatrix),P.projectionMatrixInverse.copy(P.projectionMatrix).invert(),P.viewport.set(re.x,re.y,re.width,re.height),Ht===0&&(M.matrix.copy(P.matrix),M.matrix.decompose(M.position,M.quaternion,M.scale)),_t===!0&&M.cameras.push(P)}const Dt=n.enabledFeatures;if(Dt&&Dt.includes("depth-sensing")){const Ht=u.getDepthInformation(At[0]);Ht&&Ht.isValid&&Ht.texture&&_.init(t,Ht,n.renderState)}}for(let At=0;At<y.length;At++){const _t=v[At],Dt=y[At];_t!==null&&Dt!==void 0&&Dt.update(_t,ot,l||o)}mt&&mt(Z,ot),ot.detectedPlanes&&i.dispatchEvent({type:"planesdetected",data:ot}),p=null}const he=new zv;he.setAnimationLoop(Kt),this.setAnimationLoop=function(Z){mt=Z},this.dispose=function(){}}}const lr=new Tn,SC=new Ft;function AC(r,t){function e(g,m){g.matrixAutoUpdate===!0&&g.updateMatrix(),m.value.copy(g.matrix)}function i(g,m){m.color.getRGB(g.fogColor.value,Dv(r)),m.isFog?(g.fogNear.value=m.near,g.fogFar.value=m.far):m.isFogExp2&&(g.fogDensity.value=m.density)}function n(g,m,x,y,v){m.isMeshBasicMaterial||m.isMeshLambertMaterial?s(g,m):m.isMeshToonMaterial?(s(g,m),u(g,m)):m.isMeshPhongMaterial?(s(g,m),c(g,m)):m.isMeshStandardMaterial?(s(g,m),d(g,m),m.isMeshPhysicalMaterial&&f(g,m,v)):m.isMeshMatcapMaterial?(s(g,m),p(g,m)):m.isMeshDepthMaterial?s(g,m):m.isMeshDistanceMaterial?(s(g,m),_(g,m)):m.isMeshNormalMaterial?s(g,m):m.isLineBasicMaterial?(o(g,m),m.isLineDashedMaterial&&a(g,m)):m.isPointsMaterial?h(g,m,x,y):m.isSpriteMaterial?l(g,m):m.isShadowMaterial?(g.color.value.copy(m.color),g.opacity.value=m.opacity):m.isShaderMaterial&&(m.uniformsNeedUpdate=!1)}function s(g,m){g.opacity.value=m.opacity,m.color&&g.diffuse.value.copy(m.color),m.emissive&&g.emissive.value.copy(m.emissive).multiplyScalar(m.emissiveIntensity),m.map&&(g.map.value=m.map,e(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,e(m.alphaMap,g.alphaMapTransform)),m.bumpMap&&(g.bumpMap.value=m.bumpMap,e(m.bumpMap,g.bumpMapTransform),g.bumpScale.value=m.bumpScale,m.side===wi&&(g.bumpScale.value*=-1)),m.normalMap&&(g.normalMap.value=m.normalMap,e(m.normalMap,g.normalMapTransform),g.normalScale.value.copy(m.normalScale),m.side===wi&&g.normalScale.value.negate()),m.displacementMap&&(g.displacementMap.value=m.displacementMap,e(m.displacementMap,g.displacementMapTransform),g.displacementScale.value=m.displacementScale,g.displacementBias.value=m.displacementBias),m.emissiveMap&&(g.emissiveMap.value=m.emissiveMap,e(m.emissiveMap,g.emissiveMapTransform)),m.specularMap&&(g.specularMap.value=m.specularMap,e(m.specularMap,g.specularMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest);const x=t.get(m),y=x.envMap,v=x.envMapRotation;y&&(g.envMap.value=y,lr.copy(v),lr.x*=-1,lr.y*=-1,lr.z*=-1,y.isCubeTexture&&y.isRenderTargetTexture===!1&&(lr.y*=-1,lr.z*=-1),g.envMapRotation.value.setFromMatrix4(SC.makeRotationFromEuler(lr)),g.flipEnvMap.value=y.isCubeTexture&&y.isRenderTargetTexture===!1?-1:1,g.reflectivity.value=m.reflectivity,g.ior.value=m.ior,g.refractionRatio.value=m.refractionRatio),m.lightMap&&(g.lightMap.value=m.lightMap,g.lightMapIntensity.value=m.lightMapIntensity,e(m.lightMap,g.lightMapTransform)),m.aoMap&&(g.aoMap.value=m.aoMap,g.aoMapIntensity.value=m.aoMapIntensity,e(m.aoMap,g.aoMapTransform))}function o(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,m.map&&(g.map.value=m.map,e(m.map,g.mapTransform))}function a(g,m){g.dashSize.value=m.dashSize,g.totalSize.value=m.dashSize+m.gapSize,g.scale.value=m.scale}function h(g,m,x,y){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.size.value=m.size*x,g.scale.value=y*.5,m.map&&(g.map.value=m.map,e(m.map,g.uvTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,e(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function l(g,m){g.diffuse.value.copy(m.color),g.opacity.value=m.opacity,g.rotation.value=m.rotation,m.map&&(g.map.value=m.map,e(m.map,g.mapTransform)),m.alphaMap&&(g.alphaMap.value=m.alphaMap,e(m.alphaMap,g.alphaMapTransform)),m.alphaTest>0&&(g.alphaTest.value=m.alphaTest)}function c(g,m){g.specular.value.copy(m.specular),g.shininess.value=Math.max(m.shininess,1e-4)}function u(g,m){m.gradientMap&&(g.gradientMap.value=m.gradientMap)}function d(g,m){g.metalness.value=m.metalness,m.metalnessMap&&(g.metalnessMap.value=m.metalnessMap,e(m.metalnessMap,g.metalnessMapTransform)),g.roughness.value=m.roughness,m.roughnessMap&&(g.roughnessMap.value=m.roughnessMap,e(m.roughnessMap,g.roughnessMapTransform)),m.envMap&&(g.envMapIntensity.value=m.envMapIntensity)}function f(g,m,x){g.ior.value=m.ior,m.sheen>0&&(g.sheenColor.value.copy(m.sheenColor).multiplyScalar(m.sheen),g.sheenRoughness.value=m.sheenRoughness,m.sheenColorMap&&(g.sheenColorMap.value=m.sheenColorMap,e(m.sheenColorMap,g.sheenColorMapTransform)),m.sheenRoughnessMap&&(g.sheenRoughnessMap.value=m.sheenRoughnessMap,e(m.sheenRoughnessMap,g.sheenRoughnessMapTransform))),m.clearcoat>0&&(g.clearcoat.value=m.clearcoat,g.clearcoatRoughness.value=m.clearcoatRoughness,m.clearcoatMap&&(g.clearcoatMap.value=m.clearcoatMap,e(m.clearcoatMap,g.clearcoatMapTransform)),m.clearcoatRoughnessMap&&(g.clearcoatRoughnessMap.value=m.clearcoatRoughnessMap,e(m.clearcoatRoughnessMap,g.clearcoatRoughnessMapTransform)),m.clearcoatNormalMap&&(g.clearcoatNormalMap.value=m.clearcoatNormalMap,e(m.clearcoatNormalMap,g.clearcoatNormalMapTransform),g.clearcoatNormalScale.value.copy(m.clearcoatNormalScale),m.side===wi&&g.clearcoatNormalScale.value.negate())),m.dispersion>0&&(g.dispersion.value=m.dispersion),m.iridescence>0&&(g.iridescence.value=m.iridescence,g.iridescenceIOR.value=m.iridescenceIOR,g.iridescenceThicknessMinimum.value=m.iridescenceThicknessRange[0],g.iridescenceThicknessMaximum.value=m.iridescenceThicknessRange[1],m.iridescenceMap&&(g.iridescenceMap.value=m.iridescenceMap,e(m.iridescenceMap,g.iridescenceMapTransform)),m.iridescenceThicknessMap&&(g.iridescenceThicknessMap.value=m.iridescenceThicknessMap,e(m.iridescenceThicknessMap,g.iridescenceThicknessMapTransform))),m.transmission>0&&(g.transmission.value=m.transmission,g.transmissionSamplerMap.value=x.texture,g.transmissionSamplerSize.value.set(x.width,x.height),m.transmissionMap&&(g.transmissionMap.value=m.transmissionMap,e(m.transmissionMap,g.transmissionMapTransform)),g.thickness.value=m.thickness,m.thicknessMap&&(g.thicknessMap.value=m.thicknessMap,e(m.thicknessMap,g.thicknessMapTransform)),g.attenuationDistance.value=m.attenuationDistance,g.attenuationColor.value.copy(m.attenuationColor)),m.anisotropy>0&&(g.anisotropyVector.value.set(m.anisotropy*Math.cos(m.anisotropyRotation),m.anisotropy*Math.sin(m.anisotropyRotation)),m.anisotropyMap&&(g.anisotropyMap.value=m.anisotropyMap,e(m.anisotropyMap,g.anisotropyMapTransform))),g.specularIntensity.value=m.specularIntensity,g.specularColor.value.copy(m.specularColor),m.specularColorMap&&(g.specularColorMap.value=m.specularColorMap,e(m.specularColorMap,g.specularColorMapTransform)),m.specularIntensityMap&&(g.specularIntensityMap.value=m.specularIntensityMap,e(m.specularIntensityMap,g.specularIntensityMapTransform))}function p(g,m){m.matcap&&(g.matcap.value=m.matcap)}function _(g,m){const x=t.get(m).light;g.referencePosition.value.setFromMatrixPosition(x.matrixWorld),g.nearDistance.value=x.shadow.camera.near,g.farDistance.value=x.shadow.camera.far}return{refreshFogUniforms:i,refreshMaterialUniforms:n}}function EC(r,t,e,i){let n={},s={},o=[];const a=r.getParameter(r.MAX_UNIFORM_BUFFER_BINDINGS);function h(x,y){const v=y.program;i.uniformBlockBinding(x,v)}function l(x,y){let v=n[x.id];v===void 0&&(p(x),v=c(x),n[x.id]=v,x.addEventListener("dispose",g));const E=y.program;i.updateUBOMapping(x,E);const b=t.render.frame;s[x.id]!==b&&(d(x),s[x.id]=b)}function c(x){const y=u();x.__bindingPointIndex=y;const v=r.createBuffer(),E=x.__size,b=x.usage;return r.bindBuffer(r.UNIFORM_BUFFER,v),r.bufferData(r.UNIFORM_BUFFER,E,b),r.bindBuffer(r.UNIFORM_BUFFER,null),r.bindBufferBase(r.UNIFORM_BUFFER,y,v),v}function u(){for(let x=0;x<a;x++)if(o.indexOf(x)===-1)return o.push(x),x;return console.error("THREE.WebGLRenderer: Maximum number of simultaneously usable uniforms groups reached."),0}function d(x){const y=n[x.id],v=x.uniforms,E=x.__cache;r.bindBuffer(r.UNIFORM_BUFFER,y);for(let b=0,w=v.length;b<w;b++){const T=Array.isArray(v[b])?v[b]:[v[b]];for(let S=0,M=T.length;S<M;S++){const I=T[S];if(f(I,b,S,E)===!0){const N=I.__offset,O=Array.isArray(I.value)?I.value:[I.value];let B=0;for(let Y=0;Y<O.length;Y++){const $=O[Y],st=_($);typeof $=="number"||typeof $=="boolean"?(I.__data[0]=$,r.bufferSubData(r.UNIFORM_BUFFER,N+B,I.__data)):$.isMatrix3?(I.__data[0]=$.elements[0],I.__data[1]=$.elements[1],I.__data[2]=$.elements[2],I.__data[3]=0,I.__data[4]=$.elements[3],I.__data[5]=$.elements[4],I.__data[6]=$.elements[5],I.__data[7]=0,I.__data[8]=$.elements[6],I.__data[9]=$.elements[7],I.__data[10]=$.elements[8],I.__data[11]=0):($.toArray(I.__data,B),B+=st.storage/Float32Array.BYTES_PER_ELEMENT)}r.bufferSubData(r.UNIFORM_BUFFER,N,I.__data)}}}r.bindBuffer(r.UNIFORM_BUFFER,null)}function f(x,y,v,E){const b=x.value,w=y+"_"+v;if(E[w]===void 0)return typeof b=="number"||typeof b=="boolean"?E[w]=b:E[w]=b.clone(),!0;{const T=E[w];if(typeof b=="number"||typeof b=="boolean"){if(T!==b)return E[w]=b,!0}else if(T.equals(b)===!1)return T.copy(b),!0}return!1}function p(x){const y=x.uniforms;let v=0;const E=16;for(let w=0,T=y.length;w<T;w++){const S=Array.isArray(y[w])?y[w]:[y[w]];for(let M=0,I=S.length;M<I;M++){const N=S[M],O=Array.isArray(N.value)?N.value:[N.value];for(let B=0,Y=O.length;B<Y;B++){const $=O[B],st=_($),X=v%E,ut=X%st.boundary,pt=X+ut;v+=ut,pt!==0&&E-pt<st.storage&&(v+=E-pt),N.__data=new Float32Array(st.storage/Float32Array.BYTES_PER_ELEMENT),N.__offset=v,v+=st.storage}}}const b=v%E;return b>0&&(v+=E-b),x.__size=v,x.__cache={},this}function _(x){const y={boundary:0,storage:0};return typeof x=="number"||typeof x=="boolean"?(y.boundary=4,y.storage=4):x.isVector2?(y.boundary=8,y.storage=8):x.isVector3||x.isColor?(y.boundary=16,y.storage=12):x.isVector4?(y.boundary=16,y.storage=16):x.isMatrix3?(y.boundary=48,y.storage=48):x.isMatrix4?(y.boundary=64,y.storage=64):x.isTexture?console.warn("THREE.WebGLRenderer: Texture samplers can not be part of an uniforms group."):console.warn("THREE.WebGLRenderer: Unsupported uniform value type.",x),y}function g(x){const y=x.target;y.removeEventListener("dispose",g);const v=o.indexOf(y.__bindingPointIndex);o.splice(v,1),r.deleteBuffer(n[y.id]),delete n[y.id],delete s[y.id]}function m(){for(const x in n)r.deleteBuffer(n[x]);o=[],n={},s={}}return{bind:h,update:l,dispose:m}}class Wv{constructor(t={}){const{canvas:e=Av(),context:i=null,depth:n=!0,stencil:s=!1,alpha:o=!1,antialias:a=!1,premultipliedAlpha:h=!0,preserveDrawingBuffer:l=!1,powerPreference:c="default",failIfMajorPerformanceCaveat:u=!1}=t;this.isWebGLRenderer=!0;let d;if(i!==null){if(typeof WebGLRenderingContext<"u"&&i instanceof WebGLRenderingContext)throw new Error("THREE.WebGLRenderer: WebGL 1 is not supported since r163.");d=i.getContextAttributes().alpha}else d=o;const f=new Uint32Array(4),p=new Int32Array(4);let _=null,g=null;const m=[],x=[];this.domElement=e,this.debug={checkShaderErrors:!0,onShaderError:null},this.autoClear=!0,this.autoClearColor=!0,this.autoClearDepth=!0,this.autoClearStencil=!0,this.sortObjects=!0,this.clippingPlanes=[],this.localClippingEnabled=!1,this._outputColorSpace=nn,this.toneMapping=fs,this.toneMappingExposure=1;const y=this;let v=!1,E=0,b=0,w=null,T=-1,S=null;const M=new se,I=new se;let N=null;const O=new vt(0);let B=0,Y=e.width,$=e.height,st=1,X=null,ut=null;const pt=new se(0,0,Y,$),mt=new se(0,0,Y,$);let Kt=!1;const he=new Kh;let Z=!1,ot=!1;const At=new Ft,_t=new R,Dt=new se,Ht={background:null,fog:null,environment:null,overrideMaterial:null,isScene:!0};let Bt=!1;function re(){return w===null?st:1}let P=i;function ht(C,z){return e.getContext(C,z)}try{const C={alpha:!0,depth:n,stencil:s,antialias:a,premultipliedAlpha:h,preserveDrawingBuffer:l,powerPreference:c,failIfMajorPerformanceCaveat:u};if("setAttribute"in e&&e.setAttribute("data-engine",`three.js r${ed}`),e.addEventListener("webglcontextlost",j,!1),e.addEventListener("webglcontextrestored",it,!1),e.addEventListener("webglcontextcreationerror",ft,!1),P===null){const z="webgl2";if(P=ht(z,C),P===null)throw ht(z)?new Error("Error creating WebGL context with your selected attributes."):new Error("Error creating WebGL context.")}}catch(C){throw console.error("THREE.WebGLRenderer: "+C.message),C}let rt,xt,K,Ot,yt,St,L,A,G,et,tt,nt,Lt,gt,wt,Wt,at,Mt,ee,Vt,Et,Gt,Qt,we;function F(){rt=new DE(P),rt.init(),Gt=new Hv(P,rt),xt=new TE(P,rt,t,Gt),K=new dC(P),Ot=new zE(P),yt=new tC,St=new yC(P,rt,K,yt,xt,Gt,Ot),L=new RE(y),A=new LE(y),G=new G1(P),Qt=new AE(P,G),et=new OE(P,G,Ot,Qt),tt=new NE(P,et,G,Ot),ee=new UE(P,xt,St),Wt=new CE(yt),nt=new QT(y,L,A,rt,xt,Qt,Wt),Lt=new AC(y,yt),gt=new iC,wt=new hC(rt),Mt=new SE(y,L,A,K,tt,d,h),at=new uC(y,tt,xt),we=new EC(P,Ot,xt,K),Vt=new EE(P,rt,Ot),Et=new FE(P,rt,Ot),Ot.programs=nt.programs,y.capabilities=xt,y.extensions=rt,y.properties=yt,y.renderLists=gt,y.shadowMap=at,y.state=K,y.info=Ot}F();const lt=new wC(y,P);this.xr=lt,this.getContext=function(){return P},this.getContextAttributes=function(){return P.getContextAttributes()},this.forceContextLoss=function(){const C=rt.get("WEBGL_lose_context");C&&C.loseContext()},this.forceContextRestore=function(){const C=rt.get("WEBGL_lose_context");C&&C.restoreContext()},this.getPixelRatio=function(){return st},this.setPixelRatio=function(C){C!==void 0&&(st=C,this.setSize(Y,$,!1))},this.getSize=function(C){return C.set(Y,$)},this.setSize=function(C,z,H=!0){if(lt.isPresenting){console.warn("THREE.WebGLRenderer: Can't change size while VR device is presenting.");return}Y=C,$=z,e.width=Math.floor(C*st),e.height=Math.floor(z*st),H===!0&&(e.style.width=C+"px",e.style.height=z+"px"),this.setViewport(0,0,C,z)},this.getDrawingBufferSize=function(C){return C.set(Y*st,$*st).floor()},this.setDrawingBufferSize=function(C,z,H){Y=C,$=z,st=H,e.width=Math.floor(C*H),e.height=Math.floor(z*H),this.setViewport(0,0,C,z)},this.getCurrentViewport=function(C){return C.copy(M)},this.getViewport=function(C){return C.copy(pt)},this.setViewport=function(C,z,H,W){C.isVector4?pt.set(C.x,C.y,C.z,C.w):pt.set(C,z,H,W),K.viewport(M.copy(pt).multiplyScalar(st).round())},this.getScissor=function(C){return C.copy(mt)},this.setScissor=function(C,z,H,W){C.isVector4?mt.set(C.x,C.y,C.z,C.w):mt.set(C,z,H,W),K.scissor(I.copy(mt).multiplyScalar(st).round())},this.getScissorTest=function(){return Kt},this.setScissorTest=function(C){K.setScissorTest(Kt=C)},this.setOpaqueSort=function(C){X=C},this.setTransparentSort=function(C){ut=C},this.getClearColor=function(C){return C.copy(Mt.getClearColor())},this.setClearColor=function(){Mt.setClearColor.apply(Mt,arguments)},this.getClearAlpha=function(){return Mt.getClearAlpha()},this.setClearAlpha=function(){Mt.setClearAlpha.apply(Mt,arguments)},this.clear=function(C=!0,z=!0,H=!0){let W=0;if(C){let U=!1;if(w!==null){const ct=w.texture.format;U=ct===hd||ct===ad||ct===Yh}if(U){const ct=w.texture.type,bt=ct===Vn||ct===_s||ct===ha||ct===kr||ct===sd||ct===rd,Ct=Mt.getClearColor(),Rt=Mt.getClearAlpha(),Ut=Ct.r,kt=Ct.g,Pt=Ct.b;bt?(f[0]=Ut,f[1]=kt,f[2]=Pt,f[3]=Rt,P.clearBufferuiv(P.COLOR,0,f)):(p[0]=Ut,p[1]=kt,p[2]=Pt,p[3]=Rt,P.clearBufferiv(P.COLOR,0,p))}else W|=P.COLOR_BUFFER_BIT}z&&(W|=P.DEPTH_BUFFER_BIT),H&&(W|=P.STENCIL_BUFFER_BIT,this.state.buffers.stencil.setMask(4294967295)),P.clear(W)},this.clearColor=function(){this.clear(!0,!1,!1)},this.clearDepth=function(){this.clear(!1,!0,!1)},this.clearStencil=function(){this.clear(!1,!1,!0)},this.dispose=function(){e.removeEventListener("webglcontextlost",j,!1),e.removeEventListener("webglcontextrestored",it,!1),e.removeEventListener("webglcontextcreationerror",ft,!1),gt.dispose(),wt.dispose(),yt.dispose(),L.dispose(),A.dispose(),tt.dispose(),Qt.dispose(),we.dispose(),nt.dispose(),lt.dispose(),lt.removeEventListener("sessionstart",Pn),lt.removeEventListener("sessionend",xg),tr.stop()};function j(C){C.preventDefault(),console.log("THREE.WebGLRenderer: Context Lost."),v=!0}function it(){console.log("THREE.WebGLRenderer: Context Restored."),v=!1;const C=Ot.autoReset,z=at.enabled,H=at.autoUpdate,W=at.needsUpdate,U=at.type;F(),Ot.autoReset=C,at.enabled=z,at.autoUpdate=H,at.needsUpdate=W,at.type=U}function ft(C){console.error("THREE.WebGLRenderer: A WebGL context could not be created. Reason: ",C.statusMessage)}function zt(C){const z=C.target;z.removeEventListener("dispose",zt),ie(z)}function ie(C){Fe(C),yt.remove(C)}function Fe(C){const z=yt.get(C).programs;z!==void 0&&(z.forEach(function(H){nt.releaseProgram(H)}),C.isShaderMaterial&&nt.releaseShaderCache(C))}this.renderBufferDirect=function(C,z,H,W,U,ct){z===null&&(z=Ht);const bt=U.isMesh&&U.matrixWorld.determinant()<0,Ct=rM(C,z,H,W,U);K.setMaterial(W,bt);let Rt=H.index,Ut=1;if(W.wireframe===!0){if(Rt=et.getWireframeAttribute(H),Rt===void 0)return;Ut=2}const kt=H.drawRange,Pt=H.attributes.position;let ce=kt.start*Ut,Ce=(kt.start+kt.count)*Ut;ct!==null&&(ce=Math.max(ce,ct.start*Ut),Ce=Math.min(Ce,(ct.start+ct.count)*Ut)),Rt!==null?(ce=Math.max(ce,0),Ce=Math.min(Ce,Rt.count)):Pt!=null&&(ce=Math.max(ce,0),Ce=Math.min(Ce,Pt.count));const Re=Ce-ce;if(Re<0||Re===1/0)return;Qt.setup(U,W,Ct,H,Rt);let Fi,ue=Vt;if(Rt!==null&&(Fi=G.get(Rt),ue=Et,ue.setIndex(Fi)),U.isMesh)W.wireframe===!0?(K.setLineWidth(W.wireframeLinewidth*re()),ue.setMode(P.LINES)):ue.setMode(P.TRIANGLES);else if(U.isLine){let It=W.linewidth;It===void 0&&(It=1),K.setLineWidth(It*re()),U.isLineSegments?ue.setMode(P.LINES):U.isLineLoop?ue.setMode(P.LINE_LOOP):ue.setMode(P.LINE_STRIP)}else U.isPoints?ue.setMode(P.POINTS):U.isSprite&&ue.setMode(P.TRIANGLES);if(U.isBatchedMesh)if(U._multiDrawInstances!==null)ue.renderMultiDrawInstances(U._multiDrawStarts,U._multiDrawCounts,U._multiDrawCount,U._multiDrawInstances);else if(rt.get("WEBGL_multi_draw"))ue.renderMultiDraw(U._multiDrawStarts,U._multiDrawCounts,U._multiDrawCount);else{const It=U._multiDrawStarts,Qe=U._multiDrawCounts,de=U._multiDrawCount,cn=Rt?G.get(Rt).bytesPerElement:1,Yr=yt.get(W).currentProgram.getUniforms();for(let zi=0;zi<de;zi++)Yr.setValue(P,"_gl_DrawID",zi),ue.render(It[zi]/cn,Qe[zi])}else if(U.isInstancedMesh)ue.renderInstances(ce,Re,U.count);else if(H.isInstancedBufferGeometry){const It=H._maxInstanceCount!==void 0?H._maxInstanceCount:1/0,Qe=Math.min(H.instanceCount,It);ue.renderInstances(ce,Re,Qe)}else ue.render(ce,Re)};function je(C,z,H){C.transparent===!0&&C.side===fi&&C.forceSinglePass===!1?(C.side=wi,C.needsUpdate=!0,ol(C,z,H),C.side=ms,C.needsUpdate=!0,ol(C,z,H),C.side=fi):ol(C,z,H)}this.compile=function(C,z,H=null){H===null&&(H=C),g=wt.get(H),g.init(z),x.push(g),H.traverseVisible(function(U){U.isLight&&U.layers.test(z.layers)&&(g.pushLight(U),U.castShadow&&g.pushShadow(U))}),C!==H&&C.traverseVisible(function(U){U.isLight&&U.layers.test(z.layers)&&(g.pushLight(U),U.castShadow&&g.pushShadow(U))}),g.setupLights();const W=new Set;return C.traverse(function(U){const ct=U.material;if(ct)if(Array.isArray(ct))for(let bt=0;bt<ct.length;bt++){const Ct=ct[bt];je(Ct,H,U),W.add(Ct)}else je(ct,H,U),W.add(ct)}),x.pop(),g=null,W},this.compileAsync=function(C,z,H=null){const W=this.compile(C,z,H);return new Promise(U=>{function ct(){if(W.forEach(function(bt){yt.get(bt).currentProgram.isReady()&&W.delete(bt)}),W.size===0){U(C);return}setTimeout(ct,10)}rt.get("KHR_parallel_shader_compile")!==null?ct():setTimeout(ct,10)})};let le=null;function $n(C){le&&le(C)}function Pn(){tr.stop()}function xg(){tr.start()}const tr=new zv;tr.setAnimationLoop($n),typeof self<"u"&&tr.setContext(self),this.setAnimationLoop=function(C){le=C,lt.setAnimationLoop(C),C===null?tr.stop():tr.start()},lt.addEventListener("sessionstart",Pn),lt.addEventListener("sessionend",xg),this.render=function(C,z){if(z!==void 0&&z.isCamera!==!0){console.error("THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.");return}if(v===!0)return;if(C.matrixWorldAutoUpdate===!0&&C.updateMatrixWorld(),z.parent===null&&z.matrixWorldAutoUpdate===!0&&z.updateMatrixWorld(),lt.enabled===!0&&lt.isPresenting===!0&&(lt.cameraAutoUpdate===!0&&lt.updateCamera(z),z=lt.getCamera()),C.isScene===!0&&C.onBeforeRender(y,C,z,w),g=wt.get(C,x.length),g.init(z),x.push(g),At.multiplyMatrices(z.projectionMatrix,z.matrixWorldInverse),he.setFromProjectionMatrix(At),ot=this.localClippingEnabled,Z=Wt.init(this.clippingPlanes,ot),_=gt.get(C,m.length),_.init(),m.push(_),lt.enabled===!0&&lt.isPresenting===!0){const ct=y.xr.getDepthSensingMesh();ct!==null&&Nd(ct,z,-1/0,y.sortObjects)}Nd(C,z,0,y.sortObjects),_.finish(),y.sortObjects===!0&&_.sort(X,ut),Bt=lt.enabled===!1||lt.isPresenting===!1||lt.hasDepthSensing()===!1,Bt&&Mt.addToRenderList(_,C),this.info.render.frame++,Z===!0&&Wt.beginShadows();const H=g.state.shadowsArray;at.render(H,C,z),Z===!0&&Wt.endShadows(),this.info.autoReset===!0&&this.info.reset();const W=_.opaque,U=_.transmissive;if(g.setupLights(),z.isArrayCamera){const ct=z.cameras;if(U.length>0)for(let bt=0,Ct=ct.length;bt<Ct;bt++){const Rt=ct[bt];bg(W,U,C,Rt)}Bt&&Mt.render(C);for(let bt=0,Ct=ct.length;bt<Ct;bt++){const Rt=ct[bt];vg(_,C,Rt,Rt.viewport)}}else U.length>0&&bg(W,U,C,z),Bt&&Mt.render(C),vg(_,C,z);w!==null&&(St.updateMultisampleRenderTarget(w),St.updateRenderTargetMipmap(w)),C.isScene===!0&&C.onAfterRender(y,C,z),Qt.resetDefaultState(),T=-1,S=null,x.pop(),x.length>0?(g=x[x.length-1],Z===!0&&Wt.setGlobalState(y.clippingPlanes,g.state.camera)):g=null,m.pop(),m.length>0?_=m[m.length-1]:_=null};function Nd(C,z,H,W){if(C.visible===!1)return;if(C.layers.test(z.layers)){if(C.isGroup)H=C.renderOrder;else if(C.isLOD)C.autoUpdate===!0&&C.update(z);else if(C.isLight)g.pushLight(C),C.castShadow&&g.pushShadow(C);else if(C.isSprite){if(!C.frustumCulled||he.intersectsSprite(C)){W&&Dt.setFromMatrixPosition(C.matrixWorld).applyMatrix4(At);const bt=tt.update(C),Ct=C.material;Ct.visible&&_.push(C,bt,Ct,H,Dt.z,null)}}else if((C.isMesh||C.isLine||C.isPoints)&&(!C.frustumCulled||he.intersectsObject(C))){const bt=tt.update(C),Ct=C.material;if(W&&(C.boundingSphere!==void 0?(C.boundingSphere===null&&C.computeBoundingSphere(),Dt.copy(C.boundingSphere.center)):(bt.boundingSphere===null&&bt.computeBoundingSphere(),Dt.copy(bt.boundingSphere.center)),Dt.applyMatrix4(C.matrixWorld).applyMatrix4(At)),Array.isArray(Ct)){const Rt=bt.groups;for(let Ut=0,kt=Rt.length;Ut<kt;Ut++){const Pt=Rt[Ut],ce=Ct[Pt.materialIndex];ce&&ce.visible&&_.push(C,bt,ce,H,Dt.z,Pt)}}else Ct.visible&&_.push(C,bt,Ct,H,Dt.z,null)}}const ct=C.children;for(let bt=0,Ct=ct.length;bt<Ct;bt++)Nd(ct[bt],z,H,W)}function vg(C,z,H,W){const U=C.opaque,ct=C.transmissive,bt=C.transparent;g.setupLightsView(H),Z===!0&&Wt.setGlobalState(y.clippingPlanes,H),W&&K.viewport(M.copy(W)),U.length>0&&rl(U,z,H),ct.length>0&&rl(ct,z,H),bt.length>0&&rl(bt,z,H),K.buffers.depth.setTest(!0),K.buffers.depth.setMask(!0),K.buffers.color.setMask(!0),K.setPolygonOffset(!1)}function bg(C,z,H,W){if((H.isScene===!0?H.overrideMaterial:null)!==null)return;g.state.transmissionRenderTarget[W.id]===void 0&&(g.state.transmissionRenderTarget[W.id]=new En(1,1,{generateMipmaps:!0,type:rt.has("EXT_color_buffer_half_float")||rt.has("EXT_color_buffer_float")?ma:Vn,minFilter:Un,samples:4,stencilBuffer:s,resolveDepthBuffer:!1,resolveStencilBuffer:!1,colorSpace:ae.workingColorSpace}));const ct=g.state.transmissionRenderTarget[W.id],bt=W.viewport||M;ct.setSize(bt.z,bt.w);const Ct=y.getRenderTarget();y.setRenderTarget(ct),y.getClearColor(O),B=y.getClearAlpha(),B<1&&y.setClearColor(16777215,.5),y.clear(),Bt&&Mt.render(H);const Rt=y.toneMapping;y.toneMapping=fs;const Ut=W.viewport;if(W.viewport!==void 0&&(W.viewport=void 0),g.setupLightsView(W),Z===!0&&Wt.setGlobalState(y.clippingPlanes,W),rl(C,H,W),St.updateMultisampleRenderTarget(ct),St.updateRenderTargetMipmap(ct),rt.has("WEBGL_multisampled_render_to_texture")===!1){let kt=!1;for(let Pt=0,ce=z.length;Pt<ce;Pt++){const Ce=z[Pt],Re=Ce.object,Fi=Ce.geometry,ue=Ce.material,It=Ce.group;if(ue.side===fi&&Re.layers.test(W.layers)){const Qe=ue.side;ue.side=wi,ue.needsUpdate=!0,Mg(Re,H,W,Fi,ue,It),ue.side=Qe,ue.needsUpdate=!0,kt=!0}}kt===!0&&(St.updateMultisampleRenderTarget(ct),St.updateRenderTargetMipmap(ct))}y.setRenderTarget(Ct),y.setClearColor(O,B),Ut!==void 0&&(W.viewport=Ut),y.toneMapping=Rt}function rl(C,z,H){const W=z.isScene===!0?z.overrideMaterial:null;for(let U=0,ct=C.length;U<ct;U++){const bt=C[U],Ct=bt.object,Rt=bt.geometry,Ut=W===null?bt.material:W,kt=bt.group;Ct.layers.test(H.layers)&&Mg(Ct,z,H,Rt,Ut,kt)}}function Mg(C,z,H,W,U,ct){C.onBeforeRender(y,z,H,W,U,ct),C.modelViewMatrix.multiplyMatrices(H.matrixWorldInverse,C.matrixWorld),C.normalMatrix.getNormalMatrix(C.modelViewMatrix),U.onBeforeRender(y,z,H,W,C,ct),U.transparent===!0&&U.side===fi&&U.forceSinglePass===!1?(U.side=wi,U.needsUpdate=!0,y.renderBufferDirect(H,z,W,U,C,ct),U.side=ms,U.needsUpdate=!0,y.renderBufferDirect(H,z,W,U,C,ct),U.side=fi):y.renderBufferDirect(H,z,W,U,C,ct),C.onAfterRender(y,z,H,W,U,ct)}function ol(C,z,H){z.isScene!==!0&&(z=Ht);const W=yt.get(C),U=g.state.lights,ct=g.state.shadowsArray,bt=U.state.version,Ct=nt.getParameters(C,U.state,ct,z,H),Rt=nt.getProgramCacheKey(Ct);let Ut=W.programs;W.environment=C.isMeshStandardMaterial?z.environment:null,W.fog=z.fog,W.envMap=(C.isMeshStandardMaterial?A:L).get(C.envMap||W.environment),W.envMapRotation=W.environment!==null&&C.envMap===null?z.environmentRotation:C.envMapRotation,Ut===void 0&&(C.addEventListener("dispose",zt),Ut=new Map,W.programs=Ut);let kt=Ut.get(Rt);if(kt!==void 0){if(W.currentProgram===kt&&W.lightsStateVersion===bt)return Sg(C,Ct),kt}else Ct.uniforms=nt.getUniforms(C),C.onBeforeCompile(Ct,y),kt=nt.acquireProgram(Ct,Rt),Ut.set(Rt,kt),W.uniforms=Ct.uniforms;const Pt=W.uniforms;return(!C.isShaderMaterial&&!C.isRawShaderMaterial||C.clipping===!0)&&(Pt.clippingPlanes=Wt.uniform),Sg(C,Ct),W.needsLights=aM(C),W.lightsStateVersion=bt,W.needsLights&&(Pt.ambientLightColor.value=U.state.ambient,Pt.lightProbe.value=U.state.probe,Pt.directionalLights.value=U.state.directional,Pt.directionalLightShadows.value=U.state.directionalShadow,Pt.spotLights.value=U.state.spot,Pt.spotLightShadows.value=U.state.spotShadow,Pt.rectAreaLights.value=U.state.rectArea,Pt.ltc_1.value=U.state.rectAreaLTC1,Pt.ltc_2.value=U.state.rectAreaLTC2,Pt.pointLights.value=U.state.point,Pt.pointLightShadows.value=U.state.pointShadow,Pt.hemisphereLights.value=U.state.hemi,Pt.directionalShadowMap.value=U.state.directionalShadowMap,Pt.directionalShadowMatrix.value=U.state.directionalShadowMatrix,Pt.spotShadowMap.value=U.state.spotShadowMap,Pt.spotLightMatrix.value=U.state.spotLightMatrix,Pt.spotLightMap.value=U.state.spotLightMap,Pt.pointShadowMap.value=U.state.pointShadowMap,Pt.pointShadowMatrix.value=U.state.pointShadowMatrix),W.currentProgram=kt,W.uniformsList=null,kt}function wg(C){if(C.uniformsList===null){const z=C.currentProgram.getUniforms();C.uniformsList=hu.seqWithValue(z.seq,C.uniforms)}return C.uniformsList}function Sg(C,z){const H=yt.get(C);H.outputColorSpace=z.outputColorSpace,H.batching=z.batching,H.batchingColor=z.batchingColor,H.instancing=z.instancing,H.instancingColor=z.instancingColor,H.instancingMorph=z.instancingMorph,H.skinning=z.skinning,H.morphTargets=z.morphTargets,H.morphNormals=z.morphNormals,H.morphColors=z.morphColors,H.morphTargetsCount=z.morphTargetsCount,H.numClippingPlanes=z.numClippingPlanes,H.numIntersection=z.numClipIntersection,H.vertexAlphas=z.vertexAlphas,H.vertexTangents=z.vertexTangents,H.toneMapping=z.toneMapping}function rM(C,z,H,W,U){z.isScene!==!0&&(z=Ht),St.resetTextureUnits();const ct=z.fog,bt=W.isMeshStandardMaterial?z.environment:null,Ct=w===null?y.outputColorSpace:w.isXRRenderTarget===!0?w.texture.colorSpace:xs,Rt=(W.isMeshStandardMaterial?A:L).get(W.envMap||bt),Ut=W.vertexColors===!0&&!!H.attributes.color&&H.attributes.color.itemSize===4,kt=!!H.attributes.tangent&&(!!W.normalMap||W.anisotropy>0),Pt=!!H.morphAttributes.position,ce=!!H.morphAttributes.normal,Ce=!!H.morphAttributes.color;let Re=fs;W.toneMapped&&(w===null||w.isXRRenderTarget===!0)&&(Re=y.toneMapping);const Fi=H.morphAttributes.position||H.morphAttributes.normal||H.morphAttributes.color,ue=Fi!==void 0?Fi.length:0,It=yt.get(W),Qe=g.state.lights;if(Z===!0&&(ot===!0||C!==S)){const Ji=C===S&&W.id===T;Wt.setState(W,C,Ji)}let de=!1;W.version===It.__version?(It.needsLights&&It.lightsStateVersion!==Qe.state.version||It.outputColorSpace!==Ct||U.isBatchedMesh&&It.batching===!1||!U.isBatchedMesh&&It.batching===!0||U.isBatchedMesh&&It.batchingColor===!0&&U.colorTexture===null||U.isBatchedMesh&&It.batchingColor===!1&&U.colorTexture!==null||U.isInstancedMesh&&It.instancing===!1||!U.isInstancedMesh&&It.instancing===!0||U.isSkinnedMesh&&It.skinning===!1||!U.isSkinnedMesh&&It.skinning===!0||U.isInstancedMesh&&It.instancingColor===!0&&U.instanceColor===null||U.isInstancedMesh&&It.instancingColor===!1&&U.instanceColor!==null||U.isInstancedMesh&&It.instancingMorph===!0&&U.morphTexture===null||U.isInstancedMesh&&It.instancingMorph===!1&&U.morphTexture!==null||It.envMap!==Rt||W.fog===!0&&It.fog!==ct||It.numClippingPlanes!==void 0&&(It.numClippingPlanes!==Wt.numPlanes||It.numIntersection!==Wt.numIntersection)||It.vertexAlphas!==Ut||It.vertexTangents!==kt||It.morphTargets!==Pt||It.morphNormals!==ce||It.morphColors!==Ce||It.toneMapping!==Re||It.morphTargetsCount!==ue)&&(de=!0):(de=!0,It.__version=W.version);let cn=It.currentProgram;de===!0&&(cn=ol(W,z,U));let Yr=!1,zi=!1,Bd=!1;const ze=cn.getUniforms(),vs=It.uniforms;if(K.useProgram(cn.program)&&(Yr=!0,zi=!0,Bd=!0),W.id!==T&&(T=W.id,zi=!0),Yr||S!==C){ze.setValue(P,"projectionMatrix",C.projectionMatrix),ze.setValue(P,"viewMatrix",C.matrixWorldInverse);const Ji=ze.map.cameraPosition;Ji!==void 0&&Ji.setValue(P,_t.setFromMatrixPosition(C.matrixWorld)),xt.logarithmicDepthBuffer&&ze.setValue(P,"logDepthBufFC",2/(Math.log(C.far+1)/Math.LN2)),(W.isMeshPhongMaterial||W.isMeshToonMaterial||W.isMeshLambertMaterial||W.isMeshBasicMaterial||W.isMeshStandardMaterial||W.isShaderMaterial)&&ze.setValue(P,"isOrthographic",C.isOrthographicCamera===!0),S!==C&&(S=C,zi=!0,Bd=!0)}if(U.isSkinnedMesh){ze.setOptional(P,U,"bindMatrix"),ze.setOptional(P,U,"bindMatrixInverse");const Ji=U.skeleton;Ji&&(Ji.boneTexture===null&&Ji.computeBoneTexture(),ze.setValue(P,"boneTexture",Ji.boneTexture,St))}U.isBatchedMesh&&(ze.setOptional(P,U,"batchingTexture"),ze.setValue(P,"batchingTexture",U._matricesTexture,St),ze.setOptional(P,U,"batchingIdTexture"),ze.setValue(P,"batchingIdTexture",U._indirectTexture,St),ze.setOptional(P,U,"batchingColorTexture"),U._colorsTexture!==null&&ze.setValue(P,"batchingColorTexture",U._colorsTexture,St));const kd=H.morphAttributes;if((kd.position!==void 0||kd.normal!==void 0||kd.color!==void 0)&&ee.update(U,H,cn),(zi||It.receiveShadow!==U.receiveShadow)&&(It.receiveShadow=U.receiveShadow,ze.setValue(P,"receiveShadow",U.receiveShadow)),W.isMeshGouraudMaterial&&W.envMap!==null&&(vs.envMap.value=Rt,vs.flipEnvMap.value=Rt.isCubeTexture&&Rt.isRenderTargetTexture===!1?-1:1),W.isMeshStandardMaterial&&W.envMap===null&&z.environment!==null&&(vs.envMapIntensity.value=z.environmentIntensity),zi&&(ze.setValue(P,"toneMappingExposure",y.toneMappingExposure),It.needsLights&&oM(vs,Bd),ct&&W.fog===!0&&Lt.refreshFogUniforms(vs,ct),Lt.refreshMaterialUniforms(vs,W,st,$,g.state.transmissionRenderTarget[C.id]),hu.upload(P,wg(It),vs,St)),W.isShaderMaterial&&W.uniformsNeedUpdate===!0&&(hu.upload(P,wg(It),vs,St),W.uniformsNeedUpdate=!1),W.isSpriteMaterial&&ze.setValue(P,"center",U.center),ze.setValue(P,"modelViewMatrix",U.modelViewMatrix),ze.setValue(P,"normalMatrix",U.normalMatrix),ze.setValue(P,"modelMatrix",U.matrixWorld),W.isShaderMaterial||W.isRawShaderMaterial){const Ji=W.uniformsGroups;for(let Vd=0,hM=Ji.length;Vd<hM;Vd++){const Ag=Ji[Vd];we.update(Ag,cn),we.bind(Ag,cn)}}return cn}function oM(C,z){C.ambientLightColor.needsUpdate=z,C.lightProbe.needsUpdate=z,C.directionalLights.needsUpdate=z,C.directionalLightShadows.needsUpdate=z,C.pointLights.needsUpdate=z,C.pointLightShadows.needsUpdate=z,C.spotLights.needsUpdate=z,C.spotLightShadows.needsUpdate=z,C.rectAreaLights.needsUpdate=z,C.hemisphereLights.needsUpdate=z}function aM(C){return C.isMeshLambertMaterial||C.isMeshToonMaterial||C.isMeshPhongMaterial||C.isMeshStandardMaterial||C.isShadowMaterial||C.isShaderMaterial&&C.lights===!0}this.getActiveCubeFace=function(){return E},this.getActiveMipmapLevel=function(){return b},this.getRenderTarget=function(){return w},this.setRenderTargetTextures=function(C,z,H){yt.get(C.texture).__webglTexture=z,yt.get(C.depthTexture).__webglTexture=H;const W=yt.get(C);W.__hasExternalTextures=!0,W.__autoAllocateDepthBuffer=H===void 0,W.__autoAllocateDepthBuffer||rt.has("WEBGL_multisampled_render_to_texture")===!0&&(console.warn("THREE.WebGLRenderer: Render-to-texture extension was disabled because an external texture was provided"),W.__useRenderToTexture=!1)},this.setRenderTargetFramebuffer=function(C,z){const H=yt.get(C);H.__webglFramebuffer=z,H.__useDefaultFramebuffer=z===void 0},this.setRenderTarget=function(C,z=0,H=0){w=C,E=z,b=H;let W=!0,U=null,ct=!1,bt=!1;if(C){const Rt=yt.get(C);if(Rt.__useDefaultFramebuffer!==void 0)K.bindFramebuffer(P.FRAMEBUFFER,null),W=!1;else if(Rt.__webglFramebuffer===void 0)St.setupRenderTarget(C);else if(Rt.__hasExternalTextures)St.rebindTextures(C,yt.get(C.texture).__webglTexture,yt.get(C.depthTexture).__webglTexture);else if(C.depthBuffer){const Pt=C.depthTexture;if(Rt.__boundDepthTexture!==Pt){if(Pt!==null&&yt.has(Pt)&&(C.width!==Pt.image.width||C.height!==Pt.image.height))throw new Error("WebGLRenderTarget: Attached DepthTexture is initialized to the incorrect size.");St.setupDepthRenderbuffer(C)}}const Ut=C.texture;(Ut.isData3DTexture||Ut.isDataArrayTexture||Ut.isCompressedArrayTexture)&&(bt=!0);const kt=yt.get(C).__webglFramebuffer;C.isWebGLCubeRenderTarget?(Array.isArray(kt[z])?U=kt[z][H]:U=kt[z],ct=!0):C.samples>0&&St.useMultisampledRTT(C)===!1?U=yt.get(C).__webglMultisampledFramebuffer:Array.isArray(kt)?U=kt[H]:U=kt,M.copy(C.viewport),I.copy(C.scissor),N=C.scissorTest}else M.copy(pt).multiplyScalar(st).floor(),I.copy(mt).multiplyScalar(st).floor(),N=Kt;if(K.bindFramebuffer(P.FRAMEBUFFER,U)&&W&&K.drawBuffers(C,U),K.viewport(M),K.scissor(I),K.setScissorTest(N),ct){const Rt=yt.get(C.texture);P.framebufferTexture2D(P.FRAMEBUFFER,P.COLOR_ATTACHMENT0,P.TEXTURE_CUBE_MAP_POSITIVE_X+z,Rt.__webglTexture,H)}else if(bt){const Rt=yt.get(C.texture),Ut=z||0;P.framebufferTextureLayer(P.FRAMEBUFFER,P.COLOR_ATTACHMENT0,Rt.__webglTexture,H||0,Ut)}T=-1},this.readRenderTargetPixels=function(C,z,H,W,U,ct,bt){if(!(C&&C.isWebGLRenderTarget)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");return}let Ct=yt.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&bt!==void 0&&(Ct=Ct[bt]),Ct){K.bindFramebuffer(P.FRAMEBUFFER,Ct);try{const Rt=C.texture,Ut=Rt.format,kt=Rt.type;if(!xt.textureFormatReadable(Ut)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.");return}if(!xt.textureTypeReadable(kt)){console.error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.");return}z>=0&&z<=C.width-W&&H>=0&&H<=C.height-U&&P.readPixels(z,H,W,U,Gt.convert(Ut),Gt.convert(kt),ct)}finally{const Rt=w!==null?yt.get(w).__webglFramebuffer:null;K.bindFramebuffer(P.FRAMEBUFFER,Rt)}}},this.readRenderTargetPixelsAsync=async function(C,z,H,W,U,ct,bt){if(!(C&&C.isWebGLRenderTarget))throw new Error("THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.");let Ct=yt.get(C).__webglFramebuffer;if(C.isWebGLCubeRenderTarget&&bt!==void 0&&(Ct=Ct[bt]),Ct){K.bindFramebuffer(P.FRAMEBUFFER,Ct);try{const Rt=C.texture,Ut=Rt.format,kt=Rt.type;if(!xt.textureFormatReadable(Ut))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in RGBA or implementation defined format.");if(!xt.textureTypeReadable(kt))throw new Error("THREE.WebGLRenderer.readRenderTargetPixelsAsync: renderTarget is not in UnsignedByteType or implementation defined type.");if(z>=0&&z<=C.width-W&&H>=0&&H<=C.height-U){const Pt=P.createBuffer();P.bindBuffer(P.PIXEL_PACK_BUFFER,Pt),P.bufferData(P.PIXEL_PACK_BUFFER,ct.byteLength,P.STREAM_READ),P.readPixels(z,H,W,U,Gt.convert(Ut),Gt.convert(kt),0),P.flush();const ce=P.fenceSync(P.SYNC_GPU_COMMANDS_COMPLETE,0);await p1(P,ce,4);try{P.bindBuffer(P.PIXEL_PACK_BUFFER,Pt),P.getBufferSubData(P.PIXEL_PACK_BUFFER,0,ct)}finally{P.deleteBuffer(Pt),P.deleteSync(ce)}return ct}}finally{const Rt=w!==null?yt.get(w).__webglFramebuffer:null;K.bindFramebuffer(P.FRAMEBUFFER,Rt)}}},this.copyFramebufferToTexture=function(C,z=null,H=0){C.isTexture!==!0&&(ia("WebGLRenderer: copyFramebufferToTexture function signature has changed."),z=arguments[0]||null,C=arguments[1]);const W=Math.pow(2,-H),U=Math.floor(C.image.width*W),ct=Math.floor(C.image.height*W),bt=z!==null?z.x:0,Ct=z!==null?z.y:0;St.setTexture2D(C,0),P.copyTexSubImage2D(P.TEXTURE_2D,H,0,0,bt,Ct,U,ct),K.unbindTexture()},this.copyTextureToTexture=function(C,z,H=null,W=null,U=0){C.isTexture!==!0&&(ia("WebGLRenderer: copyTextureToTexture function signature has changed."),W=arguments[0]||null,C=arguments[1],z=arguments[2],U=arguments[3]||0,H=null);let ct,bt,Ct,Rt,Ut,kt;H!==null?(ct=H.max.x-H.min.x,bt=H.max.y-H.min.y,Ct=H.min.x,Rt=H.min.y):(ct=C.image.width,bt=C.image.height,Ct=0,Rt=0),W!==null?(Ut=W.x,kt=W.y):(Ut=0,kt=0);const Pt=Gt.convert(z.format),ce=Gt.convert(z.type);St.setTexture2D(z,0),P.pixelStorei(P.UNPACK_FLIP_Y_WEBGL,z.flipY),P.pixelStorei(P.UNPACK_PREMULTIPLY_ALPHA_WEBGL,z.premultiplyAlpha),P.pixelStorei(P.UNPACK_ALIGNMENT,z.unpackAlignment);const Ce=P.getParameter(P.UNPACK_ROW_LENGTH),Re=P.getParameter(P.UNPACK_IMAGE_HEIGHT),Fi=P.getParameter(P.UNPACK_SKIP_PIXELS),ue=P.getParameter(P.UNPACK_SKIP_ROWS),It=P.getParameter(P.UNPACK_SKIP_IMAGES),Qe=C.isCompressedTexture?C.mipmaps[U]:C.image;P.pixelStorei(P.UNPACK_ROW_LENGTH,Qe.width),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,Qe.height),P.pixelStorei(P.UNPACK_SKIP_PIXELS,Ct),P.pixelStorei(P.UNPACK_SKIP_ROWS,Rt),C.isDataTexture?P.texSubImage2D(P.TEXTURE_2D,U,Ut,kt,ct,bt,Pt,ce,Qe.data):C.isCompressedTexture?P.compressedTexSubImage2D(P.TEXTURE_2D,U,Ut,kt,Qe.width,Qe.height,Pt,Qe.data):P.texSubImage2D(P.TEXTURE_2D,U,Ut,kt,ct,bt,Pt,ce,Qe),P.pixelStorei(P.UNPACK_ROW_LENGTH,Ce),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,Re),P.pixelStorei(P.UNPACK_SKIP_PIXELS,Fi),P.pixelStorei(P.UNPACK_SKIP_ROWS,ue),P.pixelStorei(P.UNPACK_SKIP_IMAGES,It),U===0&&z.generateMipmaps&&P.generateMipmap(P.TEXTURE_2D),K.unbindTexture()},this.copyTextureToTexture3D=function(C,z,H=null,W=null,U=0){C.isTexture!==!0&&(ia("WebGLRenderer: copyTextureToTexture3D function signature has changed."),H=arguments[0]||null,W=arguments[1]||null,C=arguments[2],z=arguments[3],U=arguments[4]||0);let ct,bt,Ct,Rt,Ut,kt,Pt,ce,Ce;const Re=C.isCompressedTexture?C.mipmaps[U]:C.image;H!==null?(ct=H.max.x-H.min.x,bt=H.max.y-H.min.y,Ct=H.max.z-H.min.z,Rt=H.min.x,Ut=H.min.y,kt=H.min.z):(ct=Re.width,bt=Re.height,Ct=Re.depth,Rt=0,Ut=0,kt=0),W!==null?(Pt=W.x,ce=W.y,Ce=W.z):(Pt=0,ce=0,Ce=0);const Fi=Gt.convert(z.format),ue=Gt.convert(z.type);let It;if(z.isData3DTexture)St.setTexture3D(z,0),It=P.TEXTURE_3D;else if(z.isDataArrayTexture||z.isCompressedArrayTexture)St.setTexture2DArray(z,0),It=P.TEXTURE_2D_ARRAY;else{console.warn("THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.");return}P.pixelStorei(P.UNPACK_FLIP_Y_WEBGL,z.flipY),P.pixelStorei(P.UNPACK_PREMULTIPLY_ALPHA_WEBGL,z.premultiplyAlpha),P.pixelStorei(P.UNPACK_ALIGNMENT,z.unpackAlignment);const Qe=P.getParameter(P.UNPACK_ROW_LENGTH),de=P.getParameter(P.UNPACK_IMAGE_HEIGHT),cn=P.getParameter(P.UNPACK_SKIP_PIXELS),Yr=P.getParameter(P.UNPACK_SKIP_ROWS),zi=P.getParameter(P.UNPACK_SKIP_IMAGES);P.pixelStorei(P.UNPACK_ROW_LENGTH,Re.width),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,Re.height),P.pixelStorei(P.UNPACK_SKIP_PIXELS,Rt),P.pixelStorei(P.UNPACK_SKIP_ROWS,Ut),P.pixelStorei(P.UNPACK_SKIP_IMAGES,kt),C.isDataTexture||C.isData3DTexture?P.texSubImage3D(It,U,Pt,ce,Ce,ct,bt,Ct,Fi,ue,Re.data):z.isCompressedArrayTexture?P.compressedTexSubImage3D(It,U,Pt,ce,Ce,ct,bt,Ct,Fi,Re.data):P.texSubImage3D(It,U,Pt,ce,Ce,ct,bt,Ct,Fi,ue,Re),P.pixelStorei(P.UNPACK_ROW_LENGTH,Qe),P.pixelStorei(P.UNPACK_IMAGE_HEIGHT,de),P.pixelStorei(P.UNPACK_SKIP_PIXELS,cn),P.pixelStorei(P.UNPACK_SKIP_ROWS,Yr),P.pixelStorei(P.UNPACK_SKIP_IMAGES,zi),U===0&&z.generateMipmaps&&P.generateMipmap(It),K.unbindTexture()},this.initRenderTarget=function(C){yt.get(C).__webglFramebuffer===void 0&&St.setupRenderTarget(C)},this.initTexture=function(C){C.isCubeTexture?St.setTextureCube(C,0):C.isData3DTexture?St.setTexture3D(C,0):C.isDataArrayTexture||C.isCompressedArrayTexture?St.setTexture2DArray(C,0):St.setTexture2D(C,0),K.unbindTexture()},this.resetState=function(){E=0,b=0,w=null,K.reset(),Qt.reset()},typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}get coordinateSystem(){return Nn}get outputColorSpace(){return this._outputColorSpace}set outputColorSpace(t){this._outputColorSpace=t;const e=this.getContext();e.drawingBufferColorSpace=t===cd?"display-p3":"srgb",e.unpackColorSpace=ae.workingColorSpace===Zh?"display-p3":"srgb"}}class _d{constructor(t,e=25e-5){this.isFogExp2=!0,this.name="",this.color=new vt(t),this.density=e}clone(){return new _d(this.color,this.density)}toJSON(){return{type:"FogExp2",name:this.name,color:this.color.getHex(),density:this.density}}}class yd{constructor(t,e=1,i=1e3){this.isFog=!0,this.name="",this.color=new vt(t),this.near=e,this.far=i}clone(){return new yd(this.color,this.near,this.far)}toJSON(){return{type:"Fog",name:this.name,color:this.color.getHex(),near:this.near,far:this.far}}}class Bm extends pe{constructor(){super(),this.isScene=!0,this.type="Scene",this.background=null,this.environment=null,this.fog=null,this.backgroundBlurriness=0,this.backgroundIntensity=1,this.backgroundRotation=new Tn,this.environmentIntensity=1,this.environmentRotation=new Tn,this.overrideMaterial=null,typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("observe",{detail:this}))}copy(t,e){return super.copy(t,e),t.background!==null&&(this.background=t.background.clone()),t.environment!==null&&(this.environment=t.environment.clone()),t.fog!==null&&(this.fog=t.fog.clone()),this.backgroundBlurriness=t.backgroundBlurriness,this.backgroundIntensity=t.backgroundIntensity,this.backgroundRotation.copy(t.backgroundRotation),this.environmentIntensity=t.environmentIntensity,this.environmentRotation.copy(t.environmentRotation),t.overrideMaterial!==null&&(this.overrideMaterial=t.overrideMaterial.clone()),this.matrixAutoUpdate=t.matrixAutoUpdate,this}toJSON(t){const e=super.toJSON(t);return this.fog!==null&&(e.object.fog=this.fog.toJSON()),this.backgroundBlurriness>0&&(e.object.backgroundBlurriness=this.backgroundBlurriness),this.backgroundIntensity!==1&&(e.object.backgroundIntensity=this.backgroundIntensity),e.object.backgroundRotation=this.backgroundRotation.toArray(),this.environmentIntensity!==1&&(e.object.environmentIntensity=this.environmentIntensity),e.object.environmentRotation=this.environmentRotation.toArray(),e}}class xd{constructor(t,e){this.isInterleavedBuffer=!0,this.array=t,this.stride=e,this.count=t!==void 0?t.length/e:0,this.usage=Ch,this._updateRange={offset:0,count:-1},this.updateRanges=[],this.version=0,this.uuid=Yi()}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}get updateRange(){return ia("THREE.InterleavedBuffer: updateRange() is deprecated and will be removed in r169. Use addUpdateRange() instead."),this._updateRange}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.array=new t.array.constructor(t.array),this.count=t.count,this.stride=t.stride,this.usage=t.usage,this}copyAt(t,e,i){t*=this.stride,i*=e.stride;for(let n=0,s=this.stride;n<s;n++)this.array[t+n]=e.array[i+n];return this}set(t,e=0){return this.array.set(t,e),this}clone(t){t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Yi()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=this.array.slice(0).buffer);const e=new this.array.constructor(t.arrayBuffers[this.array.buffer._uuid]),i=new this.constructor(e,this.stride);return i.setUsage(this.usage),i}onUpload(t){return this.onUploadCallback=t,this}toJSON(t){return t.arrayBuffers===void 0&&(t.arrayBuffers={}),this.array.buffer._uuid===void 0&&(this.array.buffer._uuid=Yi()),t.arrayBuffers[this.array.buffer._uuid]===void 0&&(t.arrayBuffers[this.array.buffer._uuid]=Array.from(new Uint32Array(this.array.buffer))),{uuid:this.uuid,buffer:this.array.buffer._uuid,type:this.array.constructor.name,stride:this.stride}}}const gi=new R;class $i{constructor(t,e,i,n=!1){this.isInterleavedBufferAttribute=!0,this.name="",this.data=t,this.itemSize=e,this.offset=i,this.normalized=n}get count(){return this.data.count}get array(){return this.data.array}set needsUpdate(t){this.data.needsUpdate=t}applyMatrix4(t){for(let e=0,i=this.data.count;e<i;e++)gi.fromBufferAttribute(this,e),gi.applyMatrix4(t),this.setXYZ(e,gi.x,gi.y,gi.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)gi.fromBufferAttribute(this,e),gi.applyNormalMatrix(t),this.setXYZ(e,gi.x,gi.y,gi.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)gi.fromBufferAttribute(this,e),gi.transformDirection(t),this.setXYZ(e,gi.x,gi.y,gi.z);return this}getComponent(t,e){let i=this.array[t*this.data.stride+this.offset+e];return this.normalized&&(i=bi(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=$t(i,this.array)),this.data.array[t*this.data.stride+this.offset+e]=i,this}setX(t,e){return this.normalized&&(e=$t(e,this.array)),this.data.array[t*this.data.stride+this.offset]=e,this}setY(t,e){return this.normalized&&(e=$t(e,this.array)),this.data.array[t*this.data.stride+this.offset+1]=e,this}setZ(t,e){return this.normalized&&(e=$t(e,this.array)),this.data.array[t*this.data.stride+this.offset+2]=e,this}setW(t,e){return this.normalized&&(e=$t(e,this.array)),this.data.array[t*this.data.stride+this.offset+3]=e,this}getX(t){let e=this.data.array[t*this.data.stride+this.offset];return this.normalized&&(e=bi(e,this.array)),e}getY(t){let e=this.data.array[t*this.data.stride+this.offset+1];return this.normalized&&(e=bi(e,this.array)),e}getZ(t){let e=this.data.array[t*this.data.stride+this.offset+2];return this.normalized&&(e=bi(e,this.array)),e}getW(t){let e=this.data.array[t*this.data.stride+this.offset+3];return this.normalized&&(e=bi(e,this.array)),e}setXY(t,e,i){return t=t*this.data.stride+this.offset,this.normalized&&(e=$t(e,this.array),i=$t(i,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=i,this}setXYZ(t,e,i,n){return t=t*this.data.stride+this.offset,this.normalized&&(e=$t(e,this.array),i=$t(i,this.array),n=$t(n,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this}setXYZW(t,e,i,n,s){return t=t*this.data.stride+this.offset,this.normalized&&(e=$t(e,this.array),i=$t(i,this.array),n=$t(n,this.array),s=$t(s,this.array)),this.data.array[t+0]=e,this.data.array[t+1]=i,this.data.array[t+2]=n,this.data.array[t+3]=s,this}clone(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.clone(): Cloning an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[n+s])}return new _e(new this.array.constructor(e),this.itemSize,this.normalized)}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.clone(t)),new $i(t.interleavedBuffers[this.data.uuid],this.itemSize,this.offset,this.normalized)}toJSON(t){if(t===void 0){console.log("THREE.InterleavedBufferAttribute.toJSON(): Serializing an interleaved buffer attribute will de-interleave buffer data.");const e=[];for(let i=0;i<this.count;i++){const n=i*this.data.stride+this.offset;for(let s=0;s<this.itemSize;s++)e.push(this.data.array[n+s])}return{itemSize:this.itemSize,type:this.array.constructor.name,array:e,normalized:this.normalized}}else return t.interleavedBuffers===void 0&&(t.interleavedBuffers={}),t.interleavedBuffers[this.data.uuid]===void 0&&(t.interleavedBuffers[this.data.uuid]=this.data.toJSON(t)),{isInterleavedBufferAttribute:!0,itemSize:this.itemSize,data:this.data.uuid,offset:this.offset,normalized:this.normalized}}}class km extends si{constructor(t){super(),this.isSpriteMaterial=!0,this.type="SpriteMaterial",this.color=new vt(16777215),this.map=null,this.alphaMap=null,this.rotation=0,this.sizeAttenuation=!0,this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.rotation=t.rotation,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}let Eo;const Oa=new R,To=new R,Co=new R,Ro=new Q,Fa=new Q,$v=new Ft,Kl=new R,za=new R,jl=new R,h0=new Q,Nf=new Q,l0=new Q;class Xv extends pe{constructor(t=new km){if(super(),this.isSprite=!0,this.type="Sprite",Eo===void 0){Eo=new Xt;const e=new Float32Array([-.5,-.5,0,0,0,.5,-.5,0,1,0,.5,.5,0,1,1,-.5,.5,0,0,1]),i=new xd(e,5);Eo.setIndex([0,1,2,0,2,3]),Eo.setAttribute("position",new $i(i,3,0,!1)),Eo.setAttribute("uv",new $i(i,2,3,!1))}this.geometry=Eo,this.material=t,this.center=new Q(.5,.5)}raycast(t,e){t.camera===null&&console.error('THREE.Sprite: "Raycaster.camera" needs to be set in order to raycast against sprites.'),To.setFromMatrixScale(this.matrixWorld),$v.copy(t.camera.matrixWorld),this.modelViewMatrix.multiplyMatrices(t.camera.matrixWorldInverse,this.matrixWorld),Co.setFromMatrixPosition(this.modelViewMatrix),t.camera.isPerspectiveCamera&&this.material.sizeAttenuation===!1&&To.multiplyScalar(-Co.z);const i=this.material.rotation;let n,s;i!==0&&(s=Math.cos(i),n=Math.sin(i));const o=this.center;Ql(Kl.set(-.5,-.5,0),Co,o,To,n,s),Ql(za.set(.5,-.5,0),Co,o,To,n,s),Ql(jl.set(.5,.5,0),Co,o,To,n,s),h0.set(0,0),Nf.set(1,0),l0.set(1,1);let a=t.ray.intersectTriangle(Kl,za,jl,!1,Oa);if(a===null&&(Ql(za.set(-.5,.5,0),Co,o,To,n,s),Nf.set(0,1),a=t.ray.intersectTriangle(Kl,jl,za,!1,Oa),a===null))return;const h=t.ray.origin.distanceTo(Oa);h<t.near||h>t.far||e.push({distance:h,point:Oa.clone(),uv:$s.getInterpolation(Oa,Kl,za,jl,h0,Nf,l0,new Q),face:null,object:this})}copy(t,e){return super.copy(t,e),t.center!==void 0&&this.center.copy(t.center),this.material=t.material,this}}function Ql(r,t,e,i,n,s){Ro.subVectors(r,e).addScalar(.5).multiply(i),n!==void 0?(Fa.x=s*Ro.x-n*Ro.y,Fa.y=n*Ro.x+s*Ro.y):Fa.copy(Ro),r.copy(t),r.x+=Fa.x,r.y+=Fa.y,r.applyMatrix4($v)}const tc=new R,c0=new R;class qv extends pe{constructor(){super(),this._currentLevel=0,this.type="LOD",Object.defineProperties(this,{levels:{enumerable:!0,value:[]},isLOD:{value:!0}}),this.autoUpdate=!0}copy(t){super.copy(t,!1);const e=t.levels;for(let i=0,n=e.length;i<n;i++){const s=e[i];this.addLevel(s.object.clone(),s.distance,s.hysteresis)}return this.autoUpdate=t.autoUpdate,this}addLevel(t,e=0,i=0){e=Math.abs(e);const n=this.levels;let s;for(s=0;s<n.length&&!(e<n[s].distance);s++);return n.splice(s,0,{distance:e,hysteresis:i,object:t}),this.add(t),this}getCurrentLevel(){return this._currentLevel}getObjectForDistance(t){const e=this.levels;if(e.length>0){let i,n;for(i=1,n=e.length;i<n;i++){let s=e[i].distance;if(e[i].object.visible&&(s-=s*e[i].hysteresis),t<s)break}return e[i-1].object}return null}raycast(t,e){if(this.levels.length>0){tc.setFromMatrixPosition(this.matrixWorld);const n=t.ray.origin.distanceTo(tc);this.getObjectForDistance(n).raycast(t,e)}}update(t){const e=this.levels;if(e.length>1){tc.setFromMatrixPosition(t.matrixWorld),c0.setFromMatrixPosition(this.matrixWorld);const i=tc.distanceTo(c0)/t.zoom;e[0].object.visible=!0;let n,s;for(n=1,s=e.length;n<s;n++){let o=e[n].distance;if(e[n].object.visible&&(o-=o*e[n].hysteresis),i>=o)e[n-1].object.visible=!1,e[n].object.visible=!0;else break}for(this._currentLevel=n-1;n<s;n++)e[n].object.visible=!1}}toJSON(t){const e=super.toJSON(t);this.autoUpdate===!1&&(e.object.autoUpdate=!1),e.object.levels=[];const i=this.levels;for(let n=0,s=i.length;n<s;n++){const o=i[n];e.object.levels.push({object:o.object.uuid,distance:o.distance,hysteresis:o.hysteresis})}return e}}const u0=new R,d0=new se,f0=new se,TC=new R,p0=new Ft,ec=new R,Bf=new He,m0=new Ft,kf=new ga;class Yv extends ge{constructor(t,e){super(t,e),this.isSkinnedMesh=!0,this.type="SkinnedMesh",this.bindMode=Wp,this.bindMatrix=new Ft,this.bindMatrixInverse=new Ft,this.boundingBox=null,this.boundingSphere=null}computeBoundingBox(){const t=this.geometry;this.boundingBox===null&&(this.boundingBox=new Le),this.boundingBox.makeEmpty();const e=t.getAttribute("position");for(let i=0;i<e.count;i++)this.getVertexPosition(i,ec),this.boundingBox.expandByPoint(ec)}computeBoundingSphere(){const t=this.geometry;this.boundingSphere===null&&(this.boundingSphere=new He),this.boundingSphere.makeEmpty();const e=t.getAttribute("position");for(let i=0;i<e.count;i++)this.getVertexPosition(i,ec),this.boundingSphere.expandByPoint(ec)}copy(t,e){return super.copy(t,e),this.bindMode=t.bindMode,this.bindMatrix.copy(t.bindMatrix),this.bindMatrixInverse.copy(t.bindMatrixInverse),this.skeleton=t.skeleton,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}raycast(t,e){const i=this.material,n=this.matrixWorld;i!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Bf.copy(this.boundingSphere),Bf.applyMatrix4(n),t.ray.intersectsSphere(Bf)!==!1&&(m0.copy(n).invert(),kf.copy(t.ray).applyMatrix4(m0),!(this.boundingBox!==null&&kf.intersectsBox(this.boundingBox)===!1)&&this._computeIntersections(t,e,kf)))}getVertexPosition(t,e){return super.getVertexPosition(t,e),this.applyBoneTransform(t,e),e}bind(t,e){this.skeleton=t,e===void 0&&(this.updateMatrixWorld(!0),this.skeleton.calculateInverses(),e=this.matrixWorld),this.bindMatrix.copy(e),this.bindMatrixInverse.copy(e).invert()}pose(){this.skeleton.pose()}normalizeSkinWeights(){const t=new se,e=this.geometry.attributes.skinWeight;for(let i=0,n=e.count;i<n;i++){t.fromBufferAttribute(e,i);const s=1/t.manhattanLength();s!==1/0?t.multiplyScalar(s):t.set(1,0,0,0),e.setXYZW(i,t.x,t.y,t.z,t.w)}}updateMatrixWorld(t){super.updateMatrixWorld(t),this.bindMode===Wp?this.bindMatrixInverse.copy(this.matrixWorld).invert():this.bindMode===av?this.bindMatrixInverse.copy(this.bindMatrix).invert():console.warn("THREE.SkinnedMesh: Unrecognized bindMode: "+this.bindMode)}applyBoneTransform(t,e){const i=this.skeleton,n=this.geometry;d0.fromBufferAttribute(n.attributes.skinIndex,t),f0.fromBufferAttribute(n.attributes.skinWeight,t),u0.copy(e).applyMatrix4(this.bindMatrix),e.set(0,0,0);for(let s=0;s<4;s++){const o=f0.getComponent(s);if(o!==0){const a=d0.getComponent(s);p0.multiplyMatrices(i.bones[a].matrixWorld,i.boneInverses[a]),e.addScaledVector(TC.copy(u0).applyMatrix4(p0),o)}}return e.applyMatrix4(this.bindMatrixInverse)}}class Vm extends pe{constructor(){super(),this.isBone=!0,this.type="Bone"}}class Bn extends Ke{constructor(t=null,e=1,i=1,n,s,o,a,h,l=Ze,c=Ze,u,d){super(null,o,a,h,l,c,n,s,u,d),this.isDataTexture=!0,this.image={data:t,width:e,height:i},this.generateMipmaps=!1,this.flipY=!1,this.unpackAlignment=1}}const g0=new Ft,CC=new Ft;class vd{constructor(t=[],e=[]){this.uuid=Yi(),this.bones=t.slice(0),this.boneInverses=e,this.boneMatrices=null,this.boneTexture=null,this.init()}init(){const t=this.bones,e=this.boneInverses;if(this.boneMatrices=new Float32Array(t.length*16),e.length===0)this.calculateInverses();else if(t.length!==e.length){console.warn("THREE.Skeleton: Number of inverse bone matrices does not match amount of bones."),this.boneInverses=[];for(let i=0,n=this.bones.length;i<n;i++)this.boneInverses.push(new Ft)}}calculateInverses(){this.boneInverses.length=0;for(let t=0,e=this.bones.length;t<e;t++){const i=new Ft;this.bones[t]&&i.copy(this.bones[t].matrixWorld).invert(),this.boneInverses.push(i)}}pose(){for(let t=0,e=this.bones.length;t<e;t++){const i=this.bones[t];i&&i.matrixWorld.copy(this.boneInverses[t]).invert()}for(let t=0,e=this.bones.length;t<e;t++){const i=this.bones[t];i&&(i.parent&&i.parent.isBone?(i.matrix.copy(i.parent.matrixWorld).invert(),i.matrix.multiply(i.matrixWorld)):i.matrix.copy(i.matrixWorld),i.matrix.decompose(i.position,i.quaternion,i.scale))}}update(){const t=this.bones,e=this.boneInverses,i=this.boneMatrices,n=this.boneTexture;for(let s=0,o=t.length;s<o;s++){const a=t[s]?t[s].matrixWorld:CC;g0.multiplyMatrices(a,e[s]),g0.toArray(i,s*16)}n!==null&&(n.needsUpdate=!0)}clone(){return new vd(this.bones,this.boneInverses)}computeBoneTexture(){let t=Math.sqrt(this.bones.length*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4);e.set(this.boneMatrices);const i=new Bn(e,t,t,Mi,Pi);return i.needsUpdate=!0,this.boneMatrices=e,this.boneTexture=i,this}getBoneByName(t){for(let e=0,i=this.bones.length;e<i;e++){const n=this.bones[e];if(n.name===t)return n}}dispose(){this.boneTexture!==null&&(this.boneTexture.dispose(),this.boneTexture=null)}fromJSON(t,e){this.uuid=t.uuid;for(let i=0,n=t.bones.length;i<n;i++){const s=t.bones[i];let o=e[s];o===void 0&&(console.warn("THREE.Skeleton: No bone found with UUID:",s),o=new Vm),this.bones.push(o),this.boneInverses.push(new Ft().fromArray(t.boneInverses[i]))}return this.init(),this}toJSON(){const t={metadata:{version:4.6,type:"Skeleton",generator:"Skeleton.toJSON"},bones:[],boneInverses:[]};t.uuid=this.uuid;const e=this.bones,i=this.boneInverses;for(let n=0,s=e.length;n<s;n++){const o=e[n];t.bones.push(o.uuid);const a=i[n];t.boneInverses.push(a.toArray())}return t}}class ua extends _e{constructor(t,e,i,n=1){super(t,e,i),this.isInstancedBufferAttribute=!0,this.meshPerAttribute=n}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}toJSON(){const t=super.toJSON();return t.meshPerAttribute=this.meshPerAttribute,t.isInstancedBufferAttribute=!0,t}}const Po=new Ft,_0=new Ft,ic=[],y0=new Le,RC=new Ft,Ua=new ge,Na=new He;class Zv extends ge{constructor(t,e,i){super(t,e),this.isInstancedMesh=!0,this.instanceMatrix=new ua(new Float32Array(i*16),16),this.instanceColor=null,this.morphTexture=null,this.count=i,this.boundingBox=null,this.boundingSphere=null;for(let n=0;n<i;n++)this.setMatrixAt(n,RC)}computeBoundingBox(){const t=this.geometry,e=this.count;this.boundingBox===null&&(this.boundingBox=new Le),t.boundingBox===null&&t.computeBoundingBox(),this.boundingBox.makeEmpty();for(let i=0;i<e;i++)this.getMatrixAt(i,Po),y0.copy(t.boundingBox).applyMatrix4(Po),this.boundingBox.union(y0)}computeBoundingSphere(){const t=this.geometry,e=this.count;this.boundingSphere===null&&(this.boundingSphere=new He),t.boundingSphere===null&&t.computeBoundingSphere(),this.boundingSphere.makeEmpty();for(let i=0;i<e;i++)this.getMatrixAt(i,Po),Na.copy(t.boundingSphere).applyMatrix4(Po),this.boundingSphere.union(Na)}copy(t,e){return super.copy(t,e),this.instanceMatrix.copy(t.instanceMatrix),t.morphTexture!==null&&(this.morphTexture=t.morphTexture.clone()),t.instanceColor!==null&&(this.instanceColor=t.instanceColor.clone()),this.count=t.count,t.boundingBox!==null&&(this.boundingBox=t.boundingBox.clone()),t.boundingSphere!==null&&(this.boundingSphere=t.boundingSphere.clone()),this}getColorAt(t,e){e.fromArray(this.instanceColor.array,t*3)}getMatrixAt(t,e){e.fromArray(this.instanceMatrix.array,t*16)}getMorphAt(t,e){const i=e.morphTargetInfluences,n=this.morphTexture.source.data.data,s=i.length+1,o=t*s+1;for(let a=0;a<i.length;a++)i[a]=n[o+a]}raycast(t,e){const i=this.matrixWorld,n=this.count;if(Ua.geometry=this.geometry,Ua.material=this.material,Ua.material!==void 0&&(this.boundingSphere===null&&this.computeBoundingSphere(),Na.copy(this.boundingSphere),Na.applyMatrix4(i),t.ray.intersectsSphere(Na)!==!1))for(let s=0;s<n;s++){this.getMatrixAt(s,Po),_0.multiplyMatrices(i,Po),Ua.matrixWorld=_0,Ua.raycast(t,ic);for(let o=0,a=ic.length;o<a;o++){const h=ic[o];h.instanceId=s,h.object=this,e.push(h)}ic.length=0}}setColorAt(t,e){this.instanceColor===null&&(this.instanceColor=new ua(new Float32Array(this.instanceMatrix.count*3).fill(1),3)),e.toArray(this.instanceColor.array,t*3)}setMatrixAt(t,e){e.toArray(this.instanceMatrix.array,t*16)}setMorphAt(t,e){const i=e.morphTargetInfluences,n=i.length+1;this.morphTexture===null&&(this.morphTexture=new Bn(new Float32Array(n*this.count),n,this.count,od,Pi));const s=this.morphTexture.source.data.data;let o=0;for(let l=0;l<i.length;l++)o+=i[l];const a=this.geometry.morphTargetsRelative?1:1-o,h=n*t;s[h]=a,s.set(i,h+1)}updateMorphTargets(){}dispose(){return this.dispatchEvent({type:"dispose"}),this.morphTexture!==null&&(this.morphTexture.dispose(),this.morphTexture=null),this}}function PC(r,t){return r.z-t.z}function IC(r,t){return t.z-r.z}class LC{constructor(){this.index=0,this.pool=[],this.list=[]}push(t,e,i){const n=this.pool,s=this.list;this.index>=n.length&&n.push({start:-1,count:-1,z:-1,index:-1});const o=n[this.index];s.push(o),this.index++,o.start=t.start,o.count=t.count,o.z=e,o.index=i}reset(){this.list.length=0,this.index=0}}const Ls=new Ft,Vf=new Ft,DC=new Ft,OC=new vt(1,1,1),x0=new Ft,Hf=new Kh,nc=new Le,cr=new He,Ba=new R,v0=new R,FC=new R,Gf=new LC,li=new ge,sc=[];function zC(r,t,e=0){const i=t.itemSize;if(r.isInterleavedBufferAttribute||r.array.constructor!==t.array.constructor){const n=r.count;for(let s=0;s<n;s++)for(let o=0;o<i;o++)t.setComponent(s+e,o,r.getComponent(s,o))}else t.array.set(r.array,e*i);t.needsUpdate=!0}class Jv extends ge{get maxInstanceCount(){return this._maxInstanceCount}constructor(t,e,i=e*2,n){super(new Xt,n),this.isBatchedMesh=!0,this.perObjectFrustumCulled=!0,this.sortObjects=!0,this.boundingBox=null,this.boundingSphere=null,this.customSort=null,this._drawInfo=[],this._drawRanges=[],this._reservedRanges=[],this._bounds=[],this._maxInstanceCount=t,this._maxVertexCount=e,this._maxIndexCount=i,this._geometryInitialized=!1,this._geometryCount=0,this._multiDrawCounts=new Int32Array(t),this._multiDrawStarts=new Int32Array(t),this._multiDrawCount=0,this._multiDrawInstances=null,this._visibilityChanged=!0,this._matricesTexture=null,this._indirectTexture=null,this._colorsTexture=null,this._initMatricesTexture(),this._initIndirectTexture()}_initMatricesTexture(){let t=Math.sqrt(this._maxInstanceCount*4);t=Math.ceil(t/4)*4,t=Math.max(t,4);const e=new Float32Array(t*t*4),i=new Bn(e,t,t,Mi,Pi);this._matricesTexture=i}_initIndirectTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Uint32Array(t*t),i=new Bn(e,t,t,Yh,_s);this._indirectTexture=i}_initColorsTexture(){let t=Math.sqrt(this._maxInstanceCount);t=Math.ceil(t);const e=new Float32Array(t*t*4).fill(1),i=new Bn(e,t,t,Mi,Pi);i.colorSpace=ae.workingColorSpace,this._colorsTexture=i}_initializeGeometry(t){const e=this.geometry,i=this._maxVertexCount,n=this._maxIndexCount;if(this._geometryInitialized===!1){for(const s in t.attributes){const o=t.getAttribute(s),{array:a,itemSize:h,normalized:l}=o,c=new a.constructor(i*h),u=new _e(c,h,l);e.setAttribute(s,u)}if(t.getIndex()!==null){const s=i>65535?new Uint32Array(n):new Uint16Array(n);e.setIndex(new _e(s,1))}this._geometryInitialized=!0}}_validateGeometry(t){const e=this.geometry;if(!!t.getIndex()!=!!e.getIndex())throw new Error('BatchedMesh: All geometries must consistently have "index".');for(const i in e.attributes){if(!t.hasAttribute(i))throw new Error(`BatchedMesh: Added geometry missing "${i}". All geometries must have consistent attributes.`);const n=t.getAttribute(i),s=e.getAttribute(i);if(n.itemSize!==s.itemSize||n.normalized!==s.normalized)throw new Error("BatchedMesh: All attributes must have a consistent itemSize and normalized value.")}}setCustomSort(t){return this.customSort=t,this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Le);const t=this.boundingBox,e=this._drawInfo;t.makeEmpty();for(let i=0,n=e.length;i<n;i++){if(e[i].active===!1)continue;const s=e[i].geometryIndex;this.getMatrixAt(i,Ls),this.getBoundingBoxAt(s,nc).applyMatrix4(Ls),t.union(nc)}}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new He);const t=this.boundingSphere,e=this._drawInfo;t.makeEmpty();for(let i=0,n=e.length;i<n;i++){if(e[i].active===!1)continue;const s=e[i].geometryIndex;this.getMatrixAt(i,Ls),this.getBoundingSphereAt(s,cr).applyMatrix4(Ls),t.union(cr)}}addInstance(t){if(this._drawInfo.length>=this._maxInstanceCount)throw new Error("BatchedMesh: Maximum item count reached.");this._drawInfo.push({visible:!0,active:!0,geometryIndex:t});const e=this._drawInfo.length-1,i=this._matricesTexture,n=i.image.data;DC.toArray(n,e*16),i.needsUpdate=!0;const s=this._colorsTexture;return s&&(OC.toArray(s.image.data,e*4),s.needsUpdate=!0),e}addGeometry(t,e=-1,i=-1){if(this._initializeGeometry(t),this._validateGeometry(t),this._drawInfo.length>=this._maxInstanceCount)throw new Error("BatchedMesh: Maximum item count reached.");const n={vertexStart:-1,vertexCount:-1,indexStart:-1,indexCount:-1};let s=null;const o=this._reservedRanges,a=this._drawRanges,h=this._bounds;this._geometryCount!==0&&(s=o[o.length-1]),e===-1?n.vertexCount=t.getAttribute("position").count:n.vertexCount=e,s===null?n.vertexStart=0:n.vertexStart=s.vertexStart+s.vertexCount;const l=t.getIndex(),c=l!==null;if(c&&(i===-1?n.indexCount=l.count:n.indexCount=i,s===null?n.indexStart=0:n.indexStart=s.indexStart+s.indexCount),n.indexStart!==-1&&n.indexStart+n.indexCount>this._maxIndexCount||n.vertexStart+n.vertexCount>this._maxVertexCount)throw new Error("BatchedMesh: Reserved space request exceeds the maximum buffer size.");const u=this._geometryCount;return this._geometryCount++,o.push(n),a.push({start:c?n.indexStart:n.vertexStart,count:-1}),h.push({boxInitialized:!1,box:new Le,sphereInitialized:!1,sphere:new He}),this.setGeometryAt(u,t),u}setGeometryAt(t,e){if(t>=this._geometryCount)throw new Error("BatchedMesh: Maximum geometry count reached.");this._validateGeometry(e);const i=this.geometry,n=i.getIndex()!==null,s=i.getIndex(),o=e.getIndex(),a=this._reservedRanges[t];if(n&&o.count>a.indexCount||e.attributes.position.count>a.vertexCount)throw new Error("BatchedMesh: Reserved space not large enough for provided geometry.");const h=a.vertexStart,l=a.vertexCount;for(const f in i.attributes){const p=e.getAttribute(f),_=i.getAttribute(f);zC(p,_,h);const g=p.itemSize;for(let m=p.count,x=l;m<x;m++){const y=h+m;for(let v=0;v<g;v++)_.setComponent(y,v,0)}_.needsUpdate=!0,_.addUpdateRange(h*g,l*g)}if(n){const f=a.indexStart;for(let p=0;p<o.count;p++)s.setX(f+p,h+o.getX(p));for(let p=o.count,_=a.indexCount;p<_;p++)s.setX(f+p,h);s.needsUpdate=!0,s.addUpdateRange(f,a.indexCount)}const c=this._bounds[t];e.boundingBox!==null?(c.box.copy(e.boundingBox),c.boxInitialized=!0):c.boxInitialized=!1,e.boundingSphere!==null?(c.sphere.copy(e.boundingSphere),c.sphereInitialized=!0):c.sphereInitialized=!1;const u=this._drawRanges[t],d=e.getAttribute("position");return u.count=n?o.count:d.count,this._visibilityChanged=!0,t}getBoundingBoxAt(t,e){if(t>=this._geometryCount)return null;const i=this._bounds[t],n=i.box,s=this.geometry;if(i.boxInitialized===!1){n.makeEmpty();const o=s.index,a=s.attributes.position,h=this._drawRanges[t];for(let l=h.start,c=h.start+h.count;l<c;l++){let u=l;o&&(u=o.getX(u)),n.expandByPoint(Ba.fromBufferAttribute(a,u))}i.boxInitialized=!0}return e.copy(n),e}getBoundingSphereAt(t,e){if(t>=this._geometryCount)return null;const i=this._bounds[t],n=i.sphere,s=this.geometry;if(i.sphereInitialized===!1){n.makeEmpty(),this.getBoundingBoxAt(t,nc),nc.getCenter(n.center);const o=s.index,a=s.attributes.position,h=this._drawRanges[t];let l=0;for(let c=h.start,u=h.start+h.count;c<u;c++){let d=c;o&&(d=o.getX(d)),Ba.fromBufferAttribute(a,d),l=Math.max(l,n.center.distanceToSquared(Ba))}n.radius=Math.sqrt(l),i.sphereInitialized=!0}return e.copy(n),e}setMatrixAt(t,e){const i=this._drawInfo,n=this._matricesTexture,s=this._matricesTexture.image.data;return t>=i.length||i[t].active===!1?this:(e.toArray(s,t*16),n.needsUpdate=!0,this)}getMatrixAt(t,e){const i=this._drawInfo,n=this._matricesTexture.image.data;return t>=i.length||i[t].active===!1?null:e.fromArray(n,t*16)}setColorAt(t,e){this._colorsTexture===null&&this._initColorsTexture();const i=this._colorsTexture,n=this._colorsTexture.image.data,s=this._drawInfo;return t>=s.length||s[t].active===!1?this:(e.toArray(n,t*4),i.needsUpdate=!0,this)}getColorAt(t,e){const i=this._colorsTexture.image.data,n=this._drawInfo;return t>=n.length||n[t].active===!1?null:e.fromArray(i,t*4)}setVisibleAt(t,e){const i=this._drawInfo;return t>=i.length||i[t].active===!1||i[t].visible===e?this:(i[t].visible=e,this._visibilityChanged=!0,this)}getVisibleAt(t){const e=this._drawInfo;return t>=e.length||e[t].active===!1?!1:e[t].visible}raycast(t,e){const i=this._drawInfo,n=this._drawRanges,s=this.matrixWorld,o=this.geometry;li.material=this.material,li.geometry.index=o.index,li.geometry.attributes=o.attributes,li.geometry.boundingBox===null&&(li.geometry.boundingBox=new Le),li.geometry.boundingSphere===null&&(li.geometry.boundingSphere=new He);for(let a=0,h=i.length;a<h;a++){if(!i[a].visible||!i[a].active)continue;const l=i[a].geometryIndex,c=n[l];li.geometry.setDrawRange(c.start,c.count),this.getMatrixAt(a,li.matrixWorld).premultiply(s),this.getBoundingBoxAt(l,li.geometry.boundingBox),this.getBoundingSphereAt(l,li.geometry.boundingSphere),li.raycast(t,sc);for(let u=0,d=sc.length;u<d;u++){const f=sc[u];f.object=this,f.batchId=a,e.push(f)}sc.length=0}li.material=null,li.geometry.index=null,li.geometry.attributes={},li.geometry.setDrawRange(0,1/0)}copy(t){return super.copy(t),this.geometry=t.geometry.clone(),this.perObjectFrustumCulled=t.perObjectFrustumCulled,this.sortObjects=t.sortObjects,this.boundingBox=t.boundingBox!==null?t.boundingBox.clone():null,this.boundingSphere=t.boundingSphere!==null?t.boundingSphere.clone():null,this._drawRanges=t._drawRanges.map(e=>({...e})),this._reservedRanges=t._reservedRanges.map(e=>({...e})),this._drawInfo=t._drawInfo.map(e=>({...e})),this._bounds=t._bounds.map(e=>({boxInitialized:e.boxInitialized,box:e.box.clone(),sphereInitialized:e.sphereInitialized,sphere:e.sphere.clone()})),this._maxInstanceCount=t._maxInstanceCount,this._maxVertexCount=t._maxVertexCount,this._maxIndexCount=t._maxIndexCount,this._geometryInitialized=t._geometryInitialized,this._geometryCount=t._geometryCount,this._multiDrawCounts=t._multiDrawCounts.slice(),this._multiDrawStarts=t._multiDrawStarts.slice(),this._matricesTexture=t._matricesTexture.clone(),this._matricesTexture.image.data=this._matricesTexture.image.data.slice(),this._colorsTexture!==null&&(this._colorsTexture=t._colorsTexture.clone(),this._colorsTexture.image.data=this._colorsTexture.image.data.slice()),this}dispose(){return this.geometry.dispose(),this._matricesTexture.dispose(),this._matricesTexture=null,this._indirectTexture.dispose(),this._indirectTexture=null,this._colorsTexture!==null&&(this._colorsTexture.dispose(),this._colorsTexture=null),this}onBeforeRender(t,e,i,n,s){if(!this._visibilityChanged&&!this.perObjectFrustumCulled&&!this.sortObjects)return;const o=n.getIndex(),a=o===null?1:o.array.BYTES_PER_ELEMENT,h=this._drawInfo,l=this._multiDrawStarts,c=this._multiDrawCounts,u=this._drawRanges,d=this.perObjectFrustumCulled,f=this._indirectTexture,p=f.image.data;d&&(x0.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse).multiply(this.matrixWorld),Hf.setFromProjectionMatrix(x0,t.coordinateSystem));let _=0;if(this.sortObjects){Vf.copy(this.matrixWorld).invert(),Ba.setFromMatrixPosition(i.matrixWorld).applyMatrix4(Vf),v0.set(0,0,-1).transformDirection(i.matrixWorld).transformDirection(Vf);for(let x=0,y=h.length;x<y;x++)if(h[x].visible&&h[x].active){const v=h[x].geometryIndex;this.getMatrixAt(x,Ls),this.getBoundingSphereAt(v,cr).applyMatrix4(Ls);let E=!1;if(d&&(E=!Hf.intersectsSphere(cr)),!E){const b=FC.subVectors(cr.center,Ba).dot(v0);Gf.push(u[v],b,x)}}const g=Gf.list,m=this.customSort;m===null?g.sort(s.transparent?IC:PC):m.call(this,g,i);for(let x=0,y=g.length;x<y;x++){const v=g[x];l[_]=v.start*a,c[_]=v.count,p[_]=v.index,_++}Gf.reset()}else for(let g=0,m=h.length;g<m;g++)if(h[g].visible&&h[g].active){const x=h[g].geometryIndex;let y=!1;if(d&&(this.getMatrixAt(g,Ls),this.getBoundingSphereAt(x,cr).applyMatrix4(Ls),y=!Hf.intersectsSphere(cr)),!y){const v=u[x];l[_]=v.start*a,c[_]=v.count,p[_]=g,_++}}f.needsUpdate=!0,this._multiDrawCount=_,this._visibilityChanged=!1}onBeforeShadow(t,e,i,n,s,o){this.onBeforeRender(t,null,n,s,o)}}let Je=class extends si{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new vt(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}};const Gu=new R,Wu=new R,b0=new Ft,ka=new ga,rc=new He,Wf=new R,M0=new R;let Hn=class extends pe{constructor(t=new Xt,e=new Je){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,i=[0];for(let n=1,s=e.count;n<s;n++)Gu.fromBufferAttribute(e,n-1),Wu.fromBufferAttribute(e,n),i[n]=i[n-1],i[n]+=Gu.distanceTo(Wu);t.setAttribute("lineDistance",new Tt(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const i=this.geometry,n=this.matrixWorld,s=t.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),rc.copy(i.boundingSphere),rc.applyMatrix4(n),rc.radius+=s,t.ray.intersectsSphere(rc)===!1)return;b0.copy(n).invert(),ka.copy(t.ray).applyMatrix4(b0);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),h=a*a,l=this.isLineSegments?2:1,c=i.index,d=i.attributes.position;if(c!==null){const f=Math.max(0,o.start),p=Math.min(c.count,o.start+o.count);for(let _=f,g=p-1;_<g;_+=l){const m=c.getX(_),x=c.getX(_+1),y=oc(this,t,ka,h,m,x);y&&e.push(y)}if(this.isLineLoop){const _=c.getX(p-1),g=c.getX(f),m=oc(this,t,ka,h,_,g);m&&e.push(m)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let _=f,g=p-1;_<g;_+=l){const m=oc(this,t,ka,h,_,_+1);m&&e.push(m)}if(this.isLineLoop){const _=oc(this,t,ka,h,p-1,f);_&&e.push(_)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const n=e[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}};function oc(r,t,e,i,n,s){const o=r.geometry.attributes.position;if(Gu.fromBufferAttribute(o,n),Wu.fromBufferAttribute(o,s),e.distanceSqToSegment(Gu,Wu,Wf,M0)>i)return;Wf.applyMatrix4(r.matrixWorld);const h=t.ray.origin.distanceTo(Wf);if(!(h<t.near||h>t.far))return{distance:h,point:M0.clone().applyMatrix4(r.matrixWorld),index:n,face:null,faceIndex:null,object:r}}const w0=new R,S0=new R;let ln=class extends Hn{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,i=[];for(let n=0,s=e.count;n<s;n+=2)w0.fromBufferAttribute(e,n),S0.fromBufferAttribute(e,n+1),i[n]=n===0?0:i[n-1],i[n+1]=i[n]+w0.distanceTo(S0);t.setAttribute("lineDistance",new Tt(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}};class Kv extends Hn{constructor(t,e){super(t,e),this.isLineLoop=!0,this.type="LineLoop"}}class Hm extends si{constructor(t){super(),this.isPointsMaterial=!0,this.type="PointsMaterial",this.color=new vt(16777215),this.map=null,this.alphaMap=null,this.size=1,this.sizeAttenuation=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.alphaMap=t.alphaMap,this.size=t.size,this.sizeAttenuation=t.sizeAttenuation,this.fog=t.fog,this}}const A0=new Ft,Kp=new ga,ac=new He,hc=new R;class jv extends pe{constructor(t=new Xt,e=new Hm){super(),this.isPoints=!0,this.type="Points",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}raycast(t,e){const i=this.geometry,n=this.matrixWorld,s=t.params.Points.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),ac.copy(i.boundingSphere),ac.applyMatrix4(n),ac.radius+=s,t.ray.intersectsSphere(ac)===!1)return;A0.copy(n).invert(),Kp.copy(t.ray).applyMatrix4(A0);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),h=a*a,l=i.index,u=i.attributes.position;if(l!==null){const d=Math.max(0,o.start),f=Math.min(l.count,o.start+o.count);for(let p=d,_=f;p<_;p++){const g=l.getX(p);hc.fromBufferAttribute(u,g),E0(hc,g,h,n,t,e,this)}}else{const d=Math.max(0,o.start),f=Math.min(u.count,o.start+o.count);for(let p=d,_=f;p<_;p++)hc.fromBufferAttribute(u,p),E0(hc,p,h,n,t,e,this)}}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const n=e[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function E0(r,t,e,i,n,s,o){const a=Kp.distanceSqToPoint(r);if(a<e){const h=new R;Kp.closestPointToPoint(r,h),h.applyMatrix4(i);const l=n.ray.origin.distanceTo(h);if(l<n.near||l>n.far)return;s.push({distance:l,distanceToRay:Math.sqrt(a),point:h,index:t,face:null,object:o})}}class UC extends Ke{constructor(t,e,i,n,s,o,a,h,l){super(t,e,i,n,s,o,a,h,l),this.isVideoTexture=!0,this.minFilter=o!==void 0?o:ke,this.magFilter=s!==void 0?s:ke,this.generateMipmaps=!1;const c=this;function u(){c.needsUpdate=!0,t.requestVideoFrameCallback(u)}"requestVideoFrameCallback"in t&&t.requestVideoFrameCallback(u)}clone(){return new this.constructor(this.image).copy(this)}update(){const t=this.image;"requestVideoFrameCallback"in t===!1&&t.readyState>=t.HAVE_CURRENT_DATA&&(this.needsUpdate=!0)}}class NC extends Ke{constructor(t,e){super({width:t,height:e}),this.isFramebufferTexture=!0,this.magFilter=Ze,this.minFilter=Ze,this.generateMipmaps=!1,this.needsUpdate=!0}}class bd extends Ke{constructor(t,e,i,n,s,o,a,h,l,c,u,d){super(null,o,a,h,l,c,n,s,u,d),this.isCompressedTexture=!0,this.image={width:e,height:i},this.mipmaps=t,this.flipY=!1,this.generateMipmaps=!1}}class BC extends bd{constructor(t,e,i,n,s,o){super(t,e,i,s,o),this.isCompressedArrayTexture=!0,this.image.depth=n,this.wrapR=rn,this.layerUpdates=new Set}addLayerUpdate(t){this.layerUpdates.add(t)}clearLayerUpdates(){this.layerUpdates.clear()}}class kC extends bd{constructor(t,e,i){super(void 0,t[0].width,t[0].height,e,i,gs),this.isCompressedCubeTexture=!0,this.isCubeTexture=!0,this.image=t}}class VC extends Ke{constructor(t,e,i,n,s,o,a,h,l){super(t,e,i,n,s,o,a,h,l),this.isCanvasTexture=!0,this.needsUpdate=!0}}let Cn=class{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const i=this.getUtoTmapping(t);return this.getPoint(i,e)}getPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return e}getSpacedPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let i,n=this.getPoint(0),s=0;e.push(0);for(let o=1;o<=t;o++)i=this.getPoint(o/t),s+=i.distanceTo(n),e.push(s),n=i;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const i=this.getLengths();let n=0;const s=i.length;let o;e?o=e:o=t*i[s-1];let a=0,h=s-1,l;for(;a<=h;)if(n=Math.floor(a+(h-a)/2),l=i[n]-o,l<0)a=n+1;else if(l>0)h=n-1;else{h=n;break}if(n=h,i[n]===o)return n/(s-1);const c=i[n],d=i[n+1]-c,f=(o-c)/d;return(n+f)/(s-1)}getTangent(t,e){let n=t-1e-4,s=t+1e-4;n<0&&(n=0),s>1&&(s=1);const o=this.getPoint(n),a=this.getPoint(s),h=e||(o.isVector2?new Q:new R);return h.copy(a).sub(o).normalize(),h}getTangentAt(t,e){const i=this.getUtoTmapping(t);return this.getTangent(i,e)}computeFrenetFrames(t,e){const i=new R,n=[],s=[],o=[],a=new R,h=new Ft;for(let f=0;f<=t;f++){const p=f/t;n[f]=this.getTangentAt(p,new R)}s[0]=new R,o[0]=new R;let l=Number.MAX_VALUE;const c=Math.abs(n[0].x),u=Math.abs(n[0].y),d=Math.abs(n[0].z);c<=l&&(l=c,i.set(1,0,0)),u<=l&&(l=u,i.set(0,1,0)),d<=l&&i.set(0,0,1),a.crossVectors(n[0],i).normalize(),s[0].crossVectors(n[0],a),o[0].crossVectors(n[0],s[0]);for(let f=1;f<=t;f++){if(s[f]=s[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(n[f-1],n[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(Ie(n[f-1].dot(n[f]),-1,1));s[f].applyMatrix4(h.makeRotationAxis(a,p))}o[f].crossVectors(n[f],s[f])}if(e===!0){let f=Math.acos(Ie(s[0].dot(s[t]),-1,1));f/=t,n[0].dot(a.crossVectors(s[0],s[t]))>0&&(f=-f);for(let p=1;p<=t;p++)s[p].applyMatrix4(h.makeRotationAxis(n[p],f*p)),o[p].crossVectors(n[p],s[p])}return{tangents:n,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}},Md=class extends Cn{constructor(t=0,e=0,i=1,n=1,s=0,o=Math.PI*2,a=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=i,this.yRadius=n,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=h}getPoint(t,e=new Q){const i=e,n=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=n;for(;s>n;)s-=n;s<Number.EPSILON&&(o?s=0:s=n),this.aClockwise===!0&&!o&&(s===n?s=-n:s=s-n);const a=this.aStartAngle+t*s;let h=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const c=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=h-this.aX,f=l-this.aY;h=d*c-f*u+this.aX,l=d*u+f*c+this.aY}return i.set(h,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}},Qv=class extends Md{constructor(t,e,i,n,s,o){super(t,e,i,i,n,s,o),this.isArcCurve=!0,this.type="ArcCurve"}};function Gm(){let r=0,t=0,e=0,i=0;function n(s,o,a,h){r=s,t=a,e=-3*s+3*o-2*a-h,i=2*s-2*o+a+h}return{initCatmullRom:function(s,o,a,h,l){n(o,a,l*(a-s),l*(h-o))},initNonuniformCatmullRom:function(s,o,a,h,l,c,u){let d=(o-s)/l-(a-s)/(l+c)+(a-o)/c,f=(a-o)/c-(h-o)/(c+u)+(h-a)/u;d*=c,f*=c,n(o,a,d,f)},calc:function(s){const o=s*s,a=o*s;return r+t*s+e*o+i*a}}}const lc=new R,$f=new Gm,Xf=new Gm,qf=new Gm;let tb=class extends Cn{constructor(t=[],e=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=i,this.tension=n}getPoint(t,e=new R){const i=e,n=this.points,s=n.length,o=(s-(this.closed?0:1))*t;let a=Math.floor(o),h=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:h===0&&a===s-1&&(a=s-2,h=1);let l,c;this.closed||a>0?l=n[(a-1)%s]:(lc.subVectors(n[0],n[1]).add(n[0]),l=lc);const u=n[a%s],d=n[(a+1)%s];if(this.closed||a+2<s?c=n[(a+2)%s]:(lc.subVectors(n[s-1],n[s-2]).add(n[s-1]),c=lc),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(l.distanceToSquared(u),f),_=Math.pow(u.distanceToSquared(d),f),g=Math.pow(d.distanceToSquared(c),f);_<1e-4&&(_=1),p<1e-4&&(p=_),g<1e-4&&(g=_),$f.initNonuniformCatmullRom(l.x,u.x,d.x,c.x,p,_,g),Xf.initNonuniformCatmullRom(l.y,u.y,d.y,c.y,p,_,g),qf.initNonuniformCatmullRom(l.z,u.z,d.z,c.z,p,_,g)}else this.curveType==="catmullrom"&&($f.initCatmullRom(l.x,u.x,d.x,c.x,this.tension),Xf.initCatmullRom(l.y,u.y,d.y,c.y,this.tension),qf.initCatmullRom(l.z,u.z,d.z,c.z,this.tension));return i.set($f.calc(h),Xf.calc(h),qf.calc(h)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const n=t.points[e];this.points.push(new R().fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}};function T0(r,t,e,i,n){const s=(i-t)*.5,o=(n-e)*.5,a=r*r,h=r*a;return(2*e-2*i+s+o)*h+(-3*e+3*i-2*s-o)*a+s*r+e}function HC(r,t){const e=1-r;return e*e*t}function GC(r,t){return 2*(1-r)*r*t}function WC(r,t){return r*r*t}function fh(r,t,e,i){return HC(r,t)+GC(r,e)+WC(r,i)}function $C(r,t){const e=1-r;return e*e*e*t}function XC(r,t){const e=1-r;return 3*e*e*r*t}function qC(r,t){return 3*(1-r)*r*r*t}function YC(r,t){return r*r*r*t}function ph(r,t,e,i,n){return $C(r,t)+XC(r,e)+qC(r,i)+YC(r,n)}let Wm=class extends Cn{constructor(t=new Q,e=new Q,i=new Q,n=new Q){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=i,this.v3=n}getPoint(t,e=new Q){const i=e,n=this.v0,s=this.v1,o=this.v2,a=this.v3;return i.set(ph(t,n.x,s.x,o.x,a.x),ph(t,n.y,s.y,o.y,a.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}},eb=class extends Cn{constructor(t=new R,e=new R,i=new R,n=new R){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=i,this.v3=n}getPoint(t,e=new R){const i=e,n=this.v0,s=this.v1,o=this.v2,a=this.v3;return i.set(ph(t,n.x,s.x,o.x,a.x),ph(t,n.y,s.y,o.y,a.y),ph(t,n.z,s.z,o.z,a.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}},$m=class extends Cn{constructor(t=new Q,e=new Q){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new Q){const i=e;return t===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new Q){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},ib=class extends Cn{constructor(t=new R,e=new R){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new R){const i=e;return t===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new R){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},Xm=class extends Cn{constructor(t=new Q,e=new Q,i=new Q){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new Q){const i=e,n=this.v0,s=this.v1,o=this.v2;return i.set(fh(t,n.x,s.x,o.x),fh(t,n.y,s.y,o.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},qm=class extends Cn{constructor(t=new R,e=new R,i=new R){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new R){const i=e,n=this.v0,s=this.v1,o=this.v2;return i.set(fh(t,n.x,s.x,o.x),fh(t,n.y,s.y,o.y),fh(t,n.z,s.z,o.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}},Ym=class extends Cn{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new Q){const i=e,n=this.points,s=(n.length-1)*t,o=Math.floor(s),a=s-o,h=n[o===0?o:o-1],l=n[o],c=n[o>n.length-2?n.length-1:o+1],u=n[o>n.length-3?n.length-1:o+2];return i.set(T0(a,h.x,l.x,c.x,u.x),T0(a,h.y,l.y,c.y,u.y)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const n=t.points[e];this.points.push(new Q().fromArray(n))}return this}};var $u=Object.freeze({__proto__:null,ArcCurve:Qv,CatmullRomCurve3:tb,CubicBezierCurve:Wm,CubicBezierCurve3:eb,EllipseCurve:Md,LineCurve:$m,LineCurve3:ib,QuadraticBezierCurve:Xm,QuadraticBezierCurve3:qm,SplineCurve:Ym});let nb=class extends Cn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const i=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new $u[i](e,t))}return this}getPoint(t,e){const i=t*this.getLength(),n=this.getCurveLengths();let s=0;for(;s<n.length;){if(n[s]>=i){const o=n[s]-i,a=this.curves[s],h=a.getLength(),l=h===0?0:1-o/h;return a.getPointAt(l,e)}s++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let i=0,n=this.curves.length;i<n;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let i;for(let n=0,s=this.curves;n<s.length;n++){const o=s[n],a=o.isEllipseCurve?t*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?t*o.points.length:t,h=o.getPoints(a);for(let l=0;l<h.length;l++){const c=h[l];i&&i.equals(c)||(e.push(c),i=c)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,i=this.curves.length;e<i;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const n=t.curves[e];this.curves.push(new $u[n.type]().fromJSON(n))}return this}},Ih=class extends nb{constructor(t){super(),this.type="Path",this.currentPoint=new Q,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const i=new $m(this.currentPoint.clone(),new Q(t,e));return this.curves.push(i),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,i,n){const s=new Xm(this.currentPoint.clone(),new Q(t,e),new Q(i,n));return this.curves.push(s),this.currentPoint.set(i,n),this}bezierCurveTo(t,e,i,n,s,o){const a=new Wm(this.currentPoint.clone(),new Q(t,e),new Q(i,n),new Q(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),i=new Ym(e);return this.curves.push(i),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,i,n,s,o){const a=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+a,e+h,i,n,s,o),this}absarc(t,e,i,n,s,o){return this.absellipse(t,e,i,i,n,s,o),this}ellipse(t,e,i,n,s,o,a,h){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,i,n,s,o,a,h),this}absellipse(t,e,i,n,s,o,a,h){const l=new Md(t,e,i,n,s,o,a,h);if(this.curves.length>0){const u=l.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}};class jh extends Xt{constructor(t=[new Q(0,-.5),new Q(.5,0),new Q(0,.5)],e=12,i=0,n=Math.PI*2){super(),this.type="LatheGeometry",this.parameters={points:t,segments:e,phiStart:i,phiLength:n},e=Math.floor(e),n=Ie(n,0,Math.PI*2);const s=[],o=[],a=[],h=[],l=[],c=1/e,u=new R,d=new Q,f=new R,p=new R,_=new R;let g=0,m=0;for(let x=0;x<=t.length-1;x++)switch(x){case 0:g=t[x+1].x-t[x].x,m=t[x+1].y-t[x].y,f.x=m*1,f.y=-g,f.z=m*0,_.copy(f),f.normalize(),h.push(f.x,f.y,f.z);break;case t.length-1:h.push(_.x,_.y,_.z);break;default:g=t[x+1].x-t[x].x,m=t[x+1].y-t[x].y,f.x=m*1,f.y=-g,f.z=m*0,p.copy(f),f.x+=_.x,f.y+=_.y,f.z+=_.z,f.normalize(),h.push(f.x,f.y,f.z),_.copy(p)}for(let x=0;x<=e;x++){const y=i+x*c*n,v=Math.sin(y),E=Math.cos(y);for(let b=0;b<=t.length-1;b++){u.x=t[b].x*v,u.y=t[b].y,u.z=t[b].x*E,o.push(u.x,u.y,u.z),d.x=x/e,d.y=b/(t.length-1),a.push(d.x,d.y);const w=h[3*b+0]*v,T=h[3*b+1],S=h[3*b+0]*E;l.push(w,T,S)}}for(let x=0;x<e;x++)for(let y=0;y<t.length-1;y++){const v=y+x*t.length,E=v,b=v+t.length,w=v+t.length+1,T=v+1;s.push(E,b,T),s.push(w,T,b)}this.setIndex(s),this.setAttribute("position",new Tt(o,3)),this.setAttribute("uv",new Tt(a,2)),this.setAttribute("normal",new Tt(l,3))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new jh(t.points,t.segments,t.phiStart,t.phiLength)}}class wd extends jh{constructor(t=1,e=1,i=4,n=8){const s=new Ih;s.absarc(0,-e/2,t,Math.PI*1.5,0),s.absarc(0,e/2,t,0,Math.PI*.5),super(s.getPoints(i),n),this.type="CapsuleGeometry",this.parameters={radius:t,length:e,capSegments:i,radialSegments:n}}static fromJSON(t){return new wd(t.radius,t.length,t.capSegments,t.radialSegments)}}class Sd extends Xt{constructor(t=1,e=32,i=0,n=Math.PI*2){super(),this.type="CircleGeometry",this.parameters={radius:t,segments:e,thetaStart:i,thetaLength:n},e=Math.max(3,e);const s=[],o=[],a=[],h=[],l=new R,c=new Q;o.push(0,0,0),a.push(0,0,1),h.push(.5,.5);for(let u=0,d=3;u<=e;u++,d+=3){const f=i+u/e*n;l.x=t*Math.cos(f),l.y=t*Math.sin(f),o.push(l.x,l.y,l.z),a.push(0,0,1),c.x=(o[d]/t+1)/2,c.y=(o[d+1]/t+1)/2,h.push(c.x,c.y)}for(let u=1;u<=e;u++)s.push(u,u+1,0);this.setIndex(s),this.setAttribute("position",new Tt(o,3)),this.setAttribute("normal",new Tt(a,3)),this.setAttribute("uv",new Tt(h,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Sd(t.radius,t.segments,t.thetaStart,t.thetaLength)}}class xa extends Xt{constructor(t=1,e=1,i=1,n=32,s=1,o=!1,a=0,h=Math.PI*2){super(),this.type="CylinderGeometry",this.parameters={radiusTop:t,radiusBottom:e,height:i,radialSegments:n,heightSegments:s,openEnded:o,thetaStart:a,thetaLength:h};const l=this;n=Math.floor(n),s=Math.floor(s);const c=[],u=[],d=[],f=[];let p=0;const _=[],g=i/2;let m=0;x(),o===!1&&(t>0&&y(!0),e>0&&y(!1)),this.setIndex(c),this.setAttribute("position",new Tt(u,3)),this.setAttribute("normal",new Tt(d,3)),this.setAttribute("uv",new Tt(f,2));function x(){const v=new R,E=new R;let b=0;const w=(e-t)/i;for(let T=0;T<=s;T++){const S=[],M=T/s,I=M*(e-t)+t;for(let N=0;N<=n;N++){const O=N/n,B=O*h+a,Y=Math.sin(B),$=Math.cos(B);E.x=I*Y,E.y=-M*i+g,E.z=I*$,u.push(E.x,E.y,E.z),v.set(Y,w,$).normalize(),d.push(v.x,v.y,v.z),f.push(O,1-M),S.push(p++)}_.push(S)}for(let T=0;T<n;T++)for(let S=0;S<s;S++){const M=_[S][T],I=_[S+1][T],N=_[S+1][T+1],O=_[S][T+1];c.push(M,I,O),c.push(I,N,O),b+=6}l.addGroup(m,b,0),m+=b}function y(v){const E=p,b=new Q,w=new R;let T=0;const S=v===!0?t:e,M=v===!0?1:-1;for(let N=1;N<=n;N++)u.push(0,g*M,0),d.push(0,M,0),f.push(.5,.5),p++;const I=p;for(let N=0;N<=n;N++){const B=N/n*h+a,Y=Math.cos(B),$=Math.sin(B);w.x=S*$,w.y=g*M,w.z=S*Y,u.push(w.x,w.y,w.z),d.push(0,M,0),b.x=Y*.5+.5,b.y=$*.5*M+.5,f.push(b.x,b.y),p++}for(let N=0;N<n;N++){const O=E+N,B=I+N;v===!0?c.push(B,B+1,O):c.push(B+1,B,O),T+=3}l.addGroup(m,T,v===!0?1:2),m+=T}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new xa(t.radiusTop,t.radiusBottom,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Ad extends xa{constructor(t=1,e=1,i=32,n=1,s=!1,o=0,a=Math.PI*2){super(0,t,e,i,n,s,o,a),this.type="ConeGeometry",this.parameters={radius:t,height:e,radialSegments:i,heightSegments:n,openEnded:s,thetaStart:o,thetaLength:a}}static fromJSON(t){return new Ad(t.radius,t.height,t.radialSegments,t.heightSegments,t.openEnded,t.thetaStart,t.thetaLength)}}class Ks extends Xt{constructor(t=[],e=[],i=1,n=0){super(),this.type="PolyhedronGeometry",this.parameters={vertices:t,indices:e,radius:i,detail:n};const s=[],o=[];a(n),l(i),c(),this.setAttribute("position",new Tt(s,3)),this.setAttribute("normal",new Tt(s.slice(),3)),this.setAttribute("uv",new Tt(o,2)),n===0?this.computeVertexNormals():this.normalizeNormals();function a(x){const y=new R,v=new R,E=new R;for(let b=0;b<e.length;b+=3)f(e[b+0],y),f(e[b+1],v),f(e[b+2],E),h(y,v,E,x)}function h(x,y,v,E){const b=E+1,w=[];for(let T=0;T<=b;T++){w[T]=[];const S=x.clone().lerp(v,T/b),M=y.clone().lerp(v,T/b),I=b-T;for(let N=0;N<=I;N++)N===0&&T===b?w[T][N]=S:w[T][N]=S.clone().lerp(M,N/I)}for(let T=0;T<b;T++)for(let S=0;S<2*(b-T)-1;S++){const M=Math.floor(S/2);S%2===0?(d(w[T][M+1]),d(w[T+1][M]),d(w[T][M])):(d(w[T][M+1]),d(w[T+1][M+1]),d(w[T+1][M]))}}function l(x){const y=new R;for(let v=0;v<s.length;v+=3)y.x=s[v+0],y.y=s[v+1],y.z=s[v+2],y.normalize().multiplyScalar(x),s[v+0]=y.x,s[v+1]=y.y,s[v+2]=y.z}function c(){const x=new R;for(let y=0;y<s.length;y+=3){x.x=s[y+0],x.y=s[y+1],x.z=s[y+2];const v=g(x)/2/Math.PI+.5,E=m(x)/Math.PI+.5;o.push(v,1-E)}p(),u()}function u(){for(let x=0;x<o.length;x+=6){const y=o[x+0],v=o[x+2],E=o[x+4],b=Math.max(y,v,E),w=Math.min(y,v,E);b>.9&&w<.1&&(y<.2&&(o[x+0]+=1),v<.2&&(o[x+2]+=1),E<.2&&(o[x+4]+=1))}}function d(x){s.push(x.x,x.y,x.z)}function f(x,y){const v=x*3;y.x=t[v+0],y.y=t[v+1],y.z=t[v+2]}function p(){const x=new R,y=new R,v=new R,E=new R,b=new Q,w=new Q,T=new Q;for(let S=0,M=0;S<s.length;S+=9,M+=6){x.set(s[S+0],s[S+1],s[S+2]),y.set(s[S+3],s[S+4],s[S+5]),v.set(s[S+6],s[S+7],s[S+8]),b.set(o[M+0],o[M+1]),w.set(o[M+2],o[M+3]),T.set(o[M+4],o[M+5]),E.copy(x).add(y).add(v).divideScalar(3);const I=g(E);_(b,M+0,x,I),_(w,M+2,y,I),_(T,M+4,v,I)}}function _(x,y,v,E){E<0&&x.x===1&&(o[y]=x.x-1),v.x===0&&v.z===0&&(o[y]=E/2/Math.PI+.5)}function g(x){return Math.atan2(x.z,-x.x)}function m(x){return Math.atan2(-x.y,Math.sqrt(x.x*x.x+x.z*x.z))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ks(t.vertices,t.indices,t.radius,t.details)}}class Ed extends Ks{constructor(t=1,e=0){const i=(1+Math.sqrt(5))/2,n=1/i,s=[-1,-1,-1,-1,-1,1,-1,1,-1,-1,1,1,1,-1,-1,1,-1,1,1,1,-1,1,1,1,0,-n,-i,0,-n,i,0,n,-i,0,n,i,-n,-i,0,-n,i,0,n,-i,0,n,i,0,-i,0,-n,i,0,-n,-i,0,n,i,0,n],o=[3,11,7,3,7,15,3,15,13,7,19,17,7,17,6,7,6,15,17,4,8,17,8,10,17,10,6,8,0,16,8,16,2,8,2,10,0,12,1,0,1,18,0,18,16,6,10,2,6,2,13,6,13,15,2,16,18,2,18,3,2,3,13,18,1,9,18,9,11,18,11,3,4,14,12,4,12,0,4,0,8,11,9,5,11,5,19,11,19,7,19,5,14,19,14,4,19,4,17,1,12,14,1,14,5,1,5,9];super(s,o,t,e),this.type="DodecahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Ed(t.radius,t.detail)}}const cc=new R,uc=new R,Yf=new R,dc=new $s;class Zm extends Xt{constructor(t=null,e=1){if(super(),this.type="EdgesGeometry",this.parameters={geometry:t,thresholdAngle:e},t!==null){const n=Math.pow(10,4),s=Math.cos(Dr*e),o=t.getIndex(),a=t.getAttribute("position"),h=o?o.count:a.count,l=[0,0,0],c=["a","b","c"],u=new Array(3),d={},f=[];for(let p=0;p<h;p+=3){o?(l[0]=o.getX(p),l[1]=o.getX(p+1),l[2]=o.getX(p+2)):(l[0]=p,l[1]=p+1,l[2]=p+2);const{a:_,b:g,c:m}=dc;if(_.fromBufferAttribute(a,l[0]),g.fromBufferAttribute(a,l[1]),m.fromBufferAttribute(a,l[2]),dc.getNormal(Yf),u[0]=`${Math.round(_.x*n)},${Math.round(_.y*n)},${Math.round(_.z*n)}`,u[1]=`${Math.round(g.x*n)},${Math.round(g.y*n)},${Math.round(g.z*n)}`,u[2]=`${Math.round(m.x*n)},${Math.round(m.y*n)},${Math.round(m.z*n)}`,!(u[0]===u[1]||u[1]===u[2]||u[2]===u[0]))for(let x=0;x<3;x++){const y=(x+1)%3,v=u[x],E=u[y],b=dc[c[x]],w=dc[c[y]],T=`${v}_${E}`,S=`${E}_${v}`;S in d&&d[S]?(Yf.dot(d[S].normal)<=s&&(f.push(b.x,b.y,b.z),f.push(w.x,w.y,w.z)),d[S]=null):T in d||(d[T]={index0:l[x],index1:l[y],normal:Yf.clone()})}}for(const p in d)if(d[p]){const{index0:_,index1:g}=d[p];cc.fromBufferAttribute(a,_),uc.fromBufferAttribute(a,g),f.push(cc.x,cc.y,cc.z),f.push(uc.x,uc.y,uc.z)}this.setAttribute("position",new Tt(f,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}let Or=class extends Ih{constructor(t){super(t),this.uuid=Yi(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let i=0,n=this.holes.length;i<n;i++)e[i]=this.holes[i].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,i=this.holes.length;e<i;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const n=t.holes[e];this.holes.push(new Ih().fromJSON(n))}return this}};const ZC={triangulate:function(r,t,e=2){const i=t&&t.length,n=i?t[0]*e:r.length;let s=sb(r,0,n,e,!0);const o=[];if(!s||s.next===s.prev)return o;let a,h,l,c,u,d,f;if(i&&(s=t2(r,t,s,e)),r.length>80*e){a=l=r[0],h=c=r[1];for(let p=e;p<n;p+=e)u=r[p],d=r[p+1],u<a&&(a=u),d<h&&(h=d),u>l&&(l=u),d>c&&(c=d);f=Math.max(l-a,c-h),f=f!==0?32767/f:0}return Lh(s,o,e,a,h,f,0),o}};function sb(r,t,e,i,n){let s,o;if(n===u2(r,t,e,i)>0)for(s=t;s<e;s+=i)o=C0(s,r[s],r[s+1],o);else for(s=e-i;s>=t;s-=i)o=C0(s,r[s],r[s+1],o);return o&&Td(o,o.next)&&(Oh(o),o=o.next),o}function Hr(r,t){if(!r)return r;t||(t=r);let e=r,i;do if(i=!1,!e.steiner&&(Td(e,e.next)||Ee(e.prev,e,e.next)===0)){if(Oh(e),e=t=e.prev,e===e.next)break;i=!0}else e=e.next;while(i||e!==t);return t}function Lh(r,t,e,i,n,s,o){if(!r)return;!o&&s&&r2(r,i,n,s);let a=r,h,l;for(;r.prev!==r.next;){if(h=r.prev,l=r.next,s?KC(r,i,n,s):JC(r)){t.push(h.i/e|0),t.push(r.i/e|0),t.push(l.i/e|0),Oh(r),r=l.next,a=l.next;continue}if(r=l,r===a){o?o===1?(r=jC(Hr(r),t,e),Lh(r,t,e,i,n,s,2)):o===2&&QC(r,t,e,i,n,s):Lh(Hr(r),t,e,i,n,s,1);break}}}function JC(r){const t=r.prev,e=r,i=r.next;if(Ee(t,e,i)>=0)return!1;const n=t.x,s=e.x,o=i.x,a=t.y,h=e.y,l=i.y,c=n<s?n<o?n:o:s<o?s:o,u=a<h?a<l?a:l:h<l?h:l,d=n>s?n>o?n:o:s>o?s:o,f=a>h?a>l?a:l:h>l?h:l;let p=i.next;for(;p!==t;){if(p.x>=c&&p.x<=d&&p.y>=u&&p.y<=f&&jo(n,a,s,h,o,l,p.x,p.y)&&Ee(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function KC(r,t,e,i){const n=r.prev,s=r,o=r.next;if(Ee(n,s,o)>=0)return!1;const a=n.x,h=s.x,l=o.x,c=n.y,u=s.y,d=o.y,f=a<h?a<l?a:l:h<l?h:l,p=c<u?c<d?c:d:u<d?u:d,_=a>h?a>l?a:l:h>l?h:l,g=c>u?c>d?c:d:u>d?u:d,m=jp(f,p,t,e,i),x=jp(_,g,t,e,i);let y=r.prevZ,v=r.nextZ;for(;y&&y.z>=m&&v&&v.z<=x;){if(y.x>=f&&y.x<=_&&y.y>=p&&y.y<=g&&y!==n&&y!==o&&jo(a,c,h,u,l,d,y.x,y.y)&&Ee(y.prev,y,y.next)>=0||(y=y.prevZ,v.x>=f&&v.x<=_&&v.y>=p&&v.y<=g&&v!==n&&v!==o&&jo(a,c,h,u,l,d,v.x,v.y)&&Ee(v.prev,v,v.next)>=0))return!1;v=v.nextZ}for(;y&&y.z>=m;){if(y.x>=f&&y.x<=_&&y.y>=p&&y.y<=g&&y!==n&&y!==o&&jo(a,c,h,u,l,d,y.x,y.y)&&Ee(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;v&&v.z<=x;){if(v.x>=f&&v.x<=_&&v.y>=p&&v.y<=g&&v!==n&&v!==o&&jo(a,c,h,u,l,d,v.x,v.y)&&Ee(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}function jC(r,t,e){let i=r;do{const n=i.prev,s=i.next.next;!Td(n,s)&&rb(n,i,i.next,s)&&Dh(n,s)&&Dh(s,n)&&(t.push(n.i/e|0),t.push(i.i/e|0),t.push(s.i/e|0),Oh(i),Oh(i.next),i=r=s),i=i.next}while(i!==r);return Hr(i)}function QC(r,t,e,i,n,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&h2(o,a)){let h=ob(o,a);o=Hr(o,o.next),h=Hr(h,h.next),Lh(o,t,e,i,n,s,0),Lh(h,t,e,i,n,s,0);return}a=a.next}o=o.next}while(o!==r)}function t2(r,t,e,i){const n=[];let s,o,a,h,l;for(s=0,o=t.length;s<o;s++)a=t[s]*i,h=s<o-1?t[s+1]*i:r.length,l=sb(r,a,h,i,!1),l===l.next&&(l.steiner=!0),n.push(a2(l));for(n.sort(e2),s=0;s<n.length;s++)e=i2(n[s],e);return e}function e2(r,t){return r.x-t.x}function i2(r,t){const e=n2(r,t);if(!e)return t;const i=ob(e,r);return Hr(i,i.next),Hr(e,e.next)}function n2(r,t){let e=t,i=-1/0,n;const s=r.x,o=r.y;do{if(o<=e.y&&o>=e.next.y&&e.next.y!==e.y){const d=e.x+(o-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(d<=s&&d>i&&(i=d,n=e.x<e.next.x?e:e.next,d===s))return n}e=e.next}while(e!==t);if(!n)return null;const a=n,h=n.x,l=n.y;let c=1/0,u;e=n;do s>=e.x&&e.x>=h&&s!==e.x&&jo(o<l?s:i,o,h,l,o<l?i:s,o,e.x,e.y)&&(u=Math.abs(o-e.y)/(s-e.x),Dh(e,r)&&(u<c||u===c&&(e.x>n.x||e.x===n.x&&s2(n,e)))&&(n=e,c=u)),e=e.next;while(e!==a);return n}function s2(r,t){return Ee(r.prev,r,t.prev)<0&&Ee(t.next,r,r.next)<0}function r2(r,t,e,i){let n=r;do n.z===0&&(n.z=jp(n.x,n.y,t,e,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==r);n.prevZ.nextZ=null,n.prevZ=null,o2(n)}function o2(r){let t,e,i,n,s,o,a,h,l=1;do{for(e=r,r=null,s=null,o=0;e;){for(o++,i=e,a=0,t=0;t<l&&(a++,i=i.nextZ,!!i);t++);for(h=l;a>0||h>0&&i;)a!==0&&(h===0||!i||e.z<=i.z)?(n=e,e=e.nextZ,a--):(n=i,i=i.nextZ,h--),s?s.nextZ=n:r=n,n.prevZ=s,s=n;e=i}s.nextZ=null,l*=2}while(o>1);return r}function jp(r,t,e,i,n){return r=(r-e)*n|0,t=(t-i)*n|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,r|t<<1}function a2(r){let t=r,e=r;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==r);return e}function jo(r,t,e,i,n,s,o,a){return(n-o)*(t-a)>=(r-o)*(s-a)&&(r-o)*(i-a)>=(e-o)*(t-a)&&(e-o)*(s-a)>=(n-o)*(i-a)}function h2(r,t){return r.next.i!==t.i&&r.prev.i!==t.i&&!l2(r,t)&&(Dh(r,t)&&Dh(t,r)&&c2(r,t)&&(Ee(r.prev,r,t.prev)||Ee(r,t.prev,t))||Td(r,t)&&Ee(r.prev,r,r.next)>0&&Ee(t.prev,t,t.next)>0)}function Ee(r,t,e){return(t.y-r.y)*(e.x-t.x)-(t.x-r.x)*(e.y-t.y)}function Td(r,t){return r.x===t.x&&r.y===t.y}function rb(r,t,e,i){const n=pc(Ee(r,t,e)),s=pc(Ee(r,t,i)),o=pc(Ee(e,i,r)),a=pc(Ee(e,i,t));return!!(n!==s&&o!==a||n===0&&fc(r,e,t)||s===0&&fc(r,i,t)||o===0&&fc(e,r,i)||a===0&&fc(e,t,i))}function fc(r,t,e){return t.x<=Math.max(r.x,e.x)&&t.x>=Math.min(r.x,e.x)&&t.y<=Math.max(r.y,e.y)&&t.y>=Math.min(r.y,e.y)}function pc(r){return r>0?1:r<0?-1:0}function l2(r,t){let e=r;do{if(e.i!==r.i&&e.next.i!==r.i&&e.i!==t.i&&e.next.i!==t.i&&rb(e,e.next,r,t))return!0;e=e.next}while(e!==r);return!1}function Dh(r,t){return Ee(r.prev,r,r.next)<0?Ee(r,t,r.next)>=0&&Ee(r,r.prev,t)>=0:Ee(r,t,r.prev)<0||Ee(r,r.next,t)<0}function c2(r,t){let e=r,i=!1;const n=(r.x+t.x)/2,s=(r.y+t.y)/2;do e.y>s!=e.next.y>s&&e.next.y!==e.y&&n<(e.next.x-e.x)*(s-e.y)/(e.next.y-e.y)+e.x&&(i=!i),e=e.next;while(e!==r);return i}function ob(r,t){const e=new Qp(r.i,r.x,r.y),i=new Qp(t.i,t.x,t.y),n=r.next,s=t.prev;return r.next=t,t.prev=r,e.next=n,n.prev=e,i.next=e,e.prev=i,s.next=i,i.prev=s,i}function C0(r,t,e,i){const n=new Qp(r,t,e);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function Oh(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function Qp(r,t,e){this.i=r,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function u2(r,t,e,i){let n=0;for(let s=t,o=e-i;s<e;s+=i)n+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return n}let qs=class ab{static area(t){const e=t.length;let i=0;for(let n=e-1,s=0;s<e;n=s++)i+=t[n].x*t[s].y-t[s].x*t[n].y;return i*.5}static isClockWise(t){return ab.area(t)<0}static triangulateShape(t,e){const i=[],n=[],s=[];R0(t),P0(i,t);let o=t.length;e.forEach(R0);for(let h=0;h<e.length;h++)n.push(o),o+=e[h].length,P0(i,e[h]);const a=ZC.triangulate(i,n);for(let h=0;h<a.length;h+=3)s.push(a.slice(h,h+3));return s}};function R0(r){const t=r.length;t>2&&r[t-1].equals(r[0])&&r.pop()}function P0(r,t){for(let e=0;e<t.length;e++)r.push(t[e].x),r.push(t[e].y)}class Cd extends Xt{constructor(t=new Or([new Q(.5,.5),new Q(-.5,.5),new Q(-.5,-.5),new Q(.5,-.5)]),e={}){super(),this.type="ExtrudeGeometry",this.parameters={shapes:t,options:e},t=Array.isArray(t)?t:[t];const i=this,n=[],s=[];for(let a=0,h=t.length;a<h;a++){const l=t[a];o(l)}this.setAttribute("position",new Tt(n,3)),this.setAttribute("uv",new Tt(s,2)),this.computeVertexNormals();function o(a){const h=[],l=e.curveSegments!==void 0?e.curveSegments:12,c=e.steps!==void 0?e.steps:1,u=e.depth!==void 0?e.depth:1;let d=e.bevelEnabled!==void 0?e.bevelEnabled:!0,f=e.bevelThickness!==void 0?e.bevelThickness:.2,p=e.bevelSize!==void 0?e.bevelSize:f-.1,_=e.bevelOffset!==void 0?e.bevelOffset:0,g=e.bevelSegments!==void 0?e.bevelSegments:3;const m=e.extrudePath,x=e.UVGenerator!==void 0?e.UVGenerator:d2;let y,v=!1,E,b,w,T;m&&(y=m.getSpacedPoints(c),v=!0,d=!1,E=m.computeFrenetFrames(c,!1),b=new R,w=new R,T=new R),d||(g=0,f=0,p=0,_=0);const S=a.extractPoints(l);let M=S.shape;const I=S.holes;if(!qs.isClockWise(M)){M=M.reverse();for(let P=0,ht=I.length;P<ht;P++){const rt=I[P];qs.isClockWise(rt)&&(I[P]=rt.reverse())}}const O=qs.triangulateShape(M,I),B=M;for(let P=0,ht=I.length;P<ht;P++){const rt=I[P];M=M.concat(rt)}function Y(P,ht,rt){return ht||console.error("THREE.ExtrudeGeometry: vec does not exist"),P.clone().addScaledVector(ht,rt)}const $=M.length,st=O.length;function X(P,ht,rt){let xt,K,Ot;const yt=P.x-ht.x,St=P.y-ht.y,L=rt.x-P.x,A=rt.y-P.y,G=yt*yt+St*St,et=yt*A-St*L;if(Math.abs(et)>Number.EPSILON){const tt=Math.sqrt(G),nt=Math.sqrt(L*L+A*A),Lt=ht.x-St/tt,gt=ht.y+yt/tt,wt=rt.x-A/nt,Wt=rt.y+L/nt,at=((wt-Lt)*A-(Wt-gt)*L)/(yt*A-St*L);xt=Lt+yt*at-P.x,K=gt+St*at-P.y;const Mt=xt*xt+K*K;if(Mt<=2)return new Q(xt,K);Ot=Math.sqrt(Mt/2)}else{let tt=!1;yt>Number.EPSILON?L>Number.EPSILON&&(tt=!0):yt<-Number.EPSILON?L<-Number.EPSILON&&(tt=!0):Math.sign(St)===Math.sign(A)&&(tt=!0),tt?(xt=-St,K=yt,Ot=Math.sqrt(G)):(xt=yt,K=St,Ot=Math.sqrt(G/2))}return new Q(xt/Ot,K/Ot)}const ut=[];for(let P=0,ht=B.length,rt=ht-1,xt=P+1;P<ht;P++,rt++,xt++)rt===ht&&(rt=0),xt===ht&&(xt=0),ut[P]=X(B[P],B[rt],B[xt]);const pt=[];let mt,Kt=ut.concat();for(let P=0,ht=I.length;P<ht;P++){const rt=I[P];mt=[];for(let xt=0,K=rt.length,Ot=K-1,yt=xt+1;xt<K;xt++,Ot++,yt++)Ot===K&&(Ot=0),yt===K&&(yt=0),mt[xt]=X(rt[xt],rt[Ot],rt[yt]);pt.push(mt),Kt=Kt.concat(mt)}for(let P=0;P<g;P++){const ht=P/g,rt=f*Math.cos(ht*Math.PI/2),xt=p*Math.sin(ht*Math.PI/2)+_;for(let K=0,Ot=B.length;K<Ot;K++){const yt=Y(B[K],ut[K],xt);_t(yt.x,yt.y,-rt)}for(let K=0,Ot=I.length;K<Ot;K++){const yt=I[K];mt=pt[K];for(let St=0,L=yt.length;St<L;St++){const A=Y(yt[St],mt[St],xt);_t(A.x,A.y,-rt)}}}const he=p+_;for(let P=0;P<$;P++){const ht=d?Y(M[P],Kt[P],he):M[P];v?(w.copy(E.normals[0]).multiplyScalar(ht.x),b.copy(E.binormals[0]).multiplyScalar(ht.y),T.copy(y[0]).add(w).add(b),_t(T.x,T.y,T.z)):_t(ht.x,ht.y,0)}for(let P=1;P<=c;P++)for(let ht=0;ht<$;ht++){const rt=d?Y(M[ht],Kt[ht],he):M[ht];v?(w.copy(E.normals[P]).multiplyScalar(rt.x),b.copy(E.binormals[P]).multiplyScalar(rt.y),T.copy(y[P]).add(w).add(b),_t(T.x,T.y,T.z)):_t(rt.x,rt.y,u/c*P)}for(let P=g-1;P>=0;P--){const ht=P/g,rt=f*Math.cos(ht*Math.PI/2),xt=p*Math.sin(ht*Math.PI/2)+_;for(let K=0,Ot=B.length;K<Ot;K++){const yt=Y(B[K],ut[K],xt);_t(yt.x,yt.y,u+rt)}for(let K=0,Ot=I.length;K<Ot;K++){const yt=I[K];mt=pt[K];for(let St=0,L=yt.length;St<L;St++){const A=Y(yt[St],mt[St],xt);v?_t(A.x,A.y+y[c-1].y,y[c-1].x+rt):_t(A.x,A.y,u+rt)}}}Z(),ot();function Z(){const P=n.length/3;if(d){let ht=0,rt=$*ht;for(let xt=0;xt<st;xt++){const K=O[xt];Dt(K[2]+rt,K[1]+rt,K[0]+rt)}ht=c+g*2,rt=$*ht;for(let xt=0;xt<st;xt++){const K=O[xt];Dt(K[0]+rt,K[1]+rt,K[2]+rt)}}else{for(let ht=0;ht<st;ht++){const rt=O[ht];Dt(rt[2],rt[1],rt[0])}for(let ht=0;ht<st;ht++){const rt=O[ht];Dt(rt[0]+$*c,rt[1]+$*c,rt[2]+$*c)}}i.addGroup(P,n.length/3-P,0)}function ot(){const P=n.length/3;let ht=0;At(B,ht),ht+=B.length;for(let rt=0,xt=I.length;rt<xt;rt++){const K=I[rt];At(K,ht),ht+=K.length}i.addGroup(P,n.length/3-P,1)}function At(P,ht){let rt=P.length;for(;--rt>=0;){const xt=rt;let K=rt-1;K<0&&(K=P.length-1);for(let Ot=0,yt=c+g*2;Ot<yt;Ot++){const St=$*Ot,L=$*(Ot+1),A=ht+xt+St,G=ht+K+St,et=ht+K+L,tt=ht+xt+L;Ht(A,G,et,tt)}}}function _t(P,ht,rt){h.push(P),h.push(ht),h.push(rt)}function Dt(P,ht,rt){Bt(P),Bt(ht),Bt(rt);const xt=n.length/3,K=x.generateTopUV(i,n,xt-3,xt-2,xt-1);re(K[0]),re(K[1]),re(K[2])}function Ht(P,ht,rt,xt){Bt(P),Bt(ht),Bt(xt),Bt(ht),Bt(rt),Bt(xt);const K=n.length/3,Ot=x.generateSideWallUV(i,n,K-6,K-3,K-2,K-1);re(Ot[0]),re(Ot[1]),re(Ot[3]),re(Ot[1]),re(Ot[2]),re(Ot[3])}function Bt(P){n.push(h[P*3+0]),n.push(h[P*3+1]),n.push(h[P*3+2])}function re(P){s.push(P.x),s.push(P.y)}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes,i=this.parameters.options;return f2(e,i,t)}static fromJSON(t,e){const i=[];for(let s=0,o=t.shapes.length;s<o;s++){const a=e[t.shapes[s]];i.push(a)}const n=t.options.extrudePath;return n!==void 0&&(t.options.extrudePath=new $u[n.type]().fromJSON(n)),new Cd(i,t.options)}}const d2={generateTopUV:function(r,t,e,i,n){const s=t[e*3],o=t[e*3+1],a=t[i*3],h=t[i*3+1],l=t[n*3],c=t[n*3+1];return[new Q(s,o),new Q(a,h),new Q(l,c)]},generateSideWallUV:function(r,t,e,i,n,s){const o=t[e*3],a=t[e*3+1],h=t[e*3+2],l=t[i*3],c=t[i*3+1],u=t[i*3+2],d=t[n*3],f=t[n*3+1],p=t[n*3+2],_=t[s*3],g=t[s*3+1],m=t[s*3+2];return Math.abs(a-c)<Math.abs(o-l)?[new Q(o,1-h),new Q(l,1-u),new Q(d,1-p),new Q(_,1-m)]:[new Q(a,1-h),new Q(c,1-u),new Q(f,1-p),new Q(g,1-m)]}};function f2(r,t,e){if(e.shapes=[],Array.isArray(r))for(let i=0,n=r.length;i<n;i++){const s=r[i];e.shapes.push(s.uuid)}else e.shapes.push(r.uuid);return e.options=Object.assign({},t),t.extrudePath!==void 0&&(e.options.extrudePath=t.extrudePath.toJSON()),e}class Rd extends Ks{constructor(t=1,e=0){const i=(1+Math.sqrt(5))/2,n=[-1,i,0,1,i,0,-1,-i,0,1,-i,0,0,-1,i,0,1,i,0,-1,-i,0,1,-i,i,0,-1,i,0,1,-i,0,-1,-i,0,1],s=[0,11,5,0,5,1,0,1,7,0,7,10,0,10,11,1,5,9,5,11,4,11,10,2,10,7,6,7,1,8,3,9,4,3,4,2,3,2,6,3,6,8,3,8,9,4,9,5,2,4,11,6,2,10,8,6,7,9,8,1];super(n,s,t,e),this.type="IcosahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Rd(t.radius,t.detail)}}class Qh extends Ks{constructor(t=1,e=0){const i=[1,0,0,-1,0,0,0,1,0,0,-1,0,0,0,1,0,0,-1],n=[0,2,4,0,4,3,0,3,5,0,5,2,1,2,5,1,5,3,1,3,4,1,4,2];super(i,n,t,e),this.type="OctahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Qh(t.radius,t.detail)}}class Pd extends Xt{constructor(t=.5,e=1,i=32,n=1,s=0,o=Math.PI*2){super(),this.type="RingGeometry",this.parameters={innerRadius:t,outerRadius:e,thetaSegments:i,phiSegments:n,thetaStart:s,thetaLength:o},i=Math.max(3,i),n=Math.max(1,n);const a=[],h=[],l=[],c=[];let u=t;const d=(e-t)/n,f=new R,p=new Q;for(let _=0;_<=n;_++){for(let g=0;g<=i;g++){const m=s+g/i*o;f.x=u*Math.cos(m),f.y=u*Math.sin(m),h.push(f.x,f.y,f.z),l.push(0,0,1),p.x=(f.x/e+1)/2,p.y=(f.y/e+1)/2,c.push(p.x,p.y)}u+=d}for(let _=0;_<n;_++){const g=_*(i+1);for(let m=0;m<i;m++){const x=m+g,y=x,v=x+i+1,E=x+i+2,b=x+1;a.push(y,v,b),a.push(v,E,b)}}this.setIndex(a),this.setAttribute("position",new Tt(h,3)),this.setAttribute("normal",new Tt(l,3)),this.setAttribute("uv",new Tt(c,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Pd(t.innerRadius,t.outerRadius,t.thetaSegments,t.phiSegments,t.thetaStart,t.thetaLength)}}let hb=class lb extends Xt{constructor(t=new Or([new Q(0,.5),new Q(-.5,-.5),new Q(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const i=[],n=[],s=[],o=[];let a=0,h=0;if(Array.isArray(t)===!1)l(t);else for(let c=0;c<t.length;c++)l(t[c]),this.addGroup(a,h,c),a+=h,h=0;this.setIndex(i),this.setAttribute("position",new Tt(n,3)),this.setAttribute("normal",new Tt(s,3)),this.setAttribute("uv",new Tt(o,2));function l(c){const u=n.length/3,d=c.extractPoints(e);let f=d.shape;const p=d.holes;qs.isClockWise(f)===!1&&(f=f.reverse());for(let g=0,m=p.length;g<m;g++){const x=p[g];qs.isClockWise(x)===!0&&(p[g]=x.reverse())}const _=qs.triangulateShape(f,p);for(let g=0,m=p.length;g<m;g++){const x=p[g];f=f.concat(x)}for(let g=0,m=f.length;g<m;g++){const x=f[g];n.push(x.x,x.y,0),s.push(0,0,1),o.push(x.x,x.y)}for(let g=0,m=_.length;g<m;g++){const x=_[g],y=x[0]+u,v=x[1]+u,E=x[2]+u;i.push(y,v,E),h+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return p2(e,t)}static fromJSON(t,e){const i=[];for(let n=0,s=t.shapes.length;n<s;n++){const o=e[t.shapes[n]];i.push(o)}return new lb(i,t.curveSegments)}};function p2(r,t){if(t.shapes=[],Array.isArray(r))for(let e=0,i=r.length;e<i;e++){const n=r[e];t.shapes.push(n.uuid)}else t.shapes.push(r.uuid);return t}let sa=class cb extends Xt{constructor(t=1,e=32,i=16,n=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:s,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),i=Math.max(2,Math.floor(i));const h=Math.min(o+a,Math.PI);let l=0;const c=[],u=new R,d=new R,f=[],p=[],_=[],g=[];for(let m=0;m<=i;m++){const x=[],y=m/i;let v=0;m===0&&o===0?v=.5/e:m===i&&h===Math.PI&&(v=-.5/e);for(let E=0;E<=e;E++){const b=E/e;u.x=-t*Math.cos(n+b*s)*Math.sin(o+y*a),u.y=t*Math.cos(o+y*a),u.z=t*Math.sin(n+b*s)*Math.sin(o+y*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),_.push(d.x,d.y,d.z),g.push(b+v,1-y),x.push(l++)}c.push(x)}for(let m=0;m<i;m++)for(let x=0;x<e;x++){const y=c[m][x+1],v=c[m][x],E=c[m+1][x],b=c[m+1][x+1];(m!==0||o>0)&&f.push(y,v,b),(m!==i-1||h<Math.PI)&&f.push(v,E,b)}this.setIndex(f),this.setAttribute("position",new Tt(p,3)),this.setAttribute("normal",new Tt(_,3)),this.setAttribute("uv",new Tt(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new cb(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}};class Id extends Ks{constructor(t=1,e=0){const i=[1,1,1,-1,-1,1,-1,1,-1,1,-1,-1],n=[2,1,0,0,3,2,1,3,0,2,3,1];super(i,n,t,e),this.type="TetrahedronGeometry",this.parameters={radius:t,detail:e}}static fromJSON(t){return new Id(t.radius,t.detail)}}class Ld extends Xt{constructor(t=1,e=.4,i=12,n=48,s=Math.PI*2){super(),this.type="TorusGeometry",this.parameters={radius:t,tube:e,radialSegments:i,tubularSegments:n,arc:s},i=Math.floor(i),n=Math.floor(n);const o=[],a=[],h=[],l=[],c=new R,u=new R,d=new R;for(let f=0;f<=i;f++)for(let p=0;p<=n;p++){const _=p/n*s,g=f/i*Math.PI*2;u.x=(t+e*Math.cos(g))*Math.cos(_),u.y=(t+e*Math.cos(g))*Math.sin(_),u.z=e*Math.sin(g),a.push(u.x,u.y,u.z),c.x=t*Math.cos(_),c.y=t*Math.sin(_),d.subVectors(u,c).normalize(),h.push(d.x,d.y,d.z),l.push(p/n),l.push(f/i)}for(let f=1;f<=i;f++)for(let p=1;p<=n;p++){const _=(n+1)*f+p-1,g=(n+1)*(f-1)+p-1,m=(n+1)*(f-1)+p,x=(n+1)*f+p;o.push(_,g,x),o.push(g,m,x)}this.setIndex(o),this.setAttribute("position",new Tt(a,3)),this.setAttribute("normal",new Tt(h,3)),this.setAttribute("uv",new Tt(l,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ld(t.radius,t.tube,t.radialSegments,t.tubularSegments,t.arc)}}class Dd extends Xt{constructor(t=1,e=.4,i=64,n=8,s=2,o=3){super(),this.type="TorusKnotGeometry",this.parameters={radius:t,tube:e,tubularSegments:i,radialSegments:n,p:s,q:o},i=Math.floor(i),n=Math.floor(n);const a=[],h=[],l=[],c=[],u=new R,d=new R,f=new R,p=new R,_=new R,g=new R,m=new R;for(let y=0;y<=i;++y){const v=y/i*s*Math.PI*2;x(v,s,o,t,f),x(v+.01,s,o,t,p),g.subVectors(p,f),m.addVectors(p,f),_.crossVectors(g,m),m.crossVectors(_,g),_.normalize(),m.normalize();for(let E=0;E<=n;++E){const b=E/n*Math.PI*2,w=-e*Math.cos(b),T=e*Math.sin(b);u.x=f.x+(w*m.x+T*_.x),u.y=f.y+(w*m.y+T*_.y),u.z=f.z+(w*m.z+T*_.z),h.push(u.x,u.y,u.z),d.subVectors(u,f).normalize(),l.push(d.x,d.y,d.z),c.push(y/i),c.push(E/n)}}for(let y=1;y<=i;y++)for(let v=1;v<=n;v++){const E=(n+1)*(y-1)+(v-1),b=(n+1)*y+(v-1),w=(n+1)*y+v,T=(n+1)*(y-1)+v;a.push(E,b,T),a.push(b,w,T)}this.setIndex(a),this.setAttribute("position",new Tt(h,3)),this.setAttribute("normal",new Tt(l,3)),this.setAttribute("uv",new Tt(c,2));function x(y,v,E,b,w){const T=Math.cos(y),S=Math.sin(y),M=E/v*y,I=Math.cos(M);w.x=b*(2+I)*.5*T,w.y=b*(2+I)*S*.5,w.z=b*Math.sin(M)*.5}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Dd(t.radius,t.tube,t.tubularSegments,t.radialSegments,t.p,t.q)}}class Od extends Xt{constructor(t=new qm(new R(-1,-1,0),new R(-1,1,0),new R(1,1,0)),e=64,i=1,n=8,s=!1){super(),this.type="TubeGeometry",this.parameters={path:t,tubularSegments:e,radius:i,radialSegments:n,closed:s};const o=t.computeFrenetFrames(e,s);this.tangents=o.tangents,this.normals=o.normals,this.binormals=o.binormals;const a=new R,h=new R,l=new Q;let c=new R;const u=[],d=[],f=[],p=[];_(),this.setIndex(p),this.setAttribute("position",new Tt(u,3)),this.setAttribute("normal",new Tt(d,3)),this.setAttribute("uv",new Tt(f,2));function _(){for(let y=0;y<e;y++)g(y);g(s===!1?e:0),x(),m()}function g(y){c=t.getPointAt(y/e,c);const v=o.normals[y],E=o.binormals[y];for(let b=0;b<=n;b++){const w=b/n*Math.PI*2,T=Math.sin(w),S=-Math.cos(w);h.x=S*v.x+T*E.x,h.y=S*v.y+T*E.y,h.z=S*v.z+T*E.z,h.normalize(),d.push(h.x,h.y,h.z),a.x=c.x+i*h.x,a.y=c.y+i*h.y,a.z=c.z+i*h.z,u.push(a.x,a.y,a.z)}}function m(){for(let y=1;y<=e;y++)for(let v=1;v<=n;v++){const E=(n+1)*(y-1)+(v-1),b=(n+1)*y+(v-1),w=(n+1)*y+v,T=(n+1)*(y-1)+v;p.push(E,b,T),p.push(b,w,T)}}function x(){for(let y=0;y<=e;y++)for(let v=0;v<=n;v++)l.x=y/e,l.y=v/n,f.push(l.x,l.y)}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON();return t.path=this.parameters.path.toJSON(),t}static fromJSON(t){return new Od(new $u[t.path.type]().fromJSON(t.path),t.tubularSegments,t.radius,t.radialSegments,t.closed)}}class Jm extends Xt{constructor(t=null){if(super(),this.type="WireframeGeometry",this.parameters={geometry:t},t!==null){const e=[],i=new Set,n=new R,s=new R;if(t.index!==null){const o=t.attributes.position,a=t.index;let h=t.groups;h.length===0&&(h=[{start:0,count:a.count,materialIndex:0}]);for(let l=0,c=h.length;l<c;++l){const u=h[l],d=u.start,f=u.count;for(let p=d,_=d+f;p<_;p+=3)for(let g=0;g<3;g++){const m=a.getX(p+g),x=a.getX(p+(g+1)%3);n.fromBufferAttribute(o,m),s.fromBufferAttribute(o,x),I0(n,s,i)===!0&&(e.push(n.x,n.y,n.z),e.push(s.x,s.y,s.z))}}}else{const o=t.attributes.position;for(let a=0,h=o.count/3;a<h;a++)for(let l=0;l<3;l++){const c=3*a+l,u=3*a+(l+1)%3;n.fromBufferAttribute(o,c),s.fromBufferAttribute(o,u),I0(n,s,i)===!0&&(e.push(n.x,n.y,n.z),e.push(s.x,s.y,s.z))}}this.setAttribute("position",new Tt(e,3))}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}}function I0(r,t,e){const i=`${r.x},${r.y},${r.z}-${t.x},${t.y},${t.z}`,n=`${t.x},${t.y},${t.z}-${r.x},${r.y},${r.z}`;return e.has(i)===!0||e.has(n)===!0?!1:(e.add(i),e.add(n),!0)}var L0=Object.freeze({__proto__:null,BoxGeometry:Js,CapsuleGeometry:wd,CircleGeometry:Sd,ConeGeometry:Ad,CylinderGeometry:xa,DodecahedronGeometry:Ed,EdgesGeometry:Zm,ExtrudeGeometry:Cd,IcosahedronGeometry:Rd,LatheGeometry:jh,OctahedronGeometry:Qh,PlaneGeometry:_a,PolyhedronGeometry:Ks,RingGeometry:Pd,ShapeGeometry:hb,SphereGeometry:sa,TetrahedronGeometry:Id,TorusGeometry:Ld,TorusKnotGeometry:Dd,TubeGeometry:Od,WireframeGeometry:Jm});class ub extends si{constructor(t){super(),this.isShadowMaterial=!0,this.type="ShadowMaterial",this.color=new vt(0),this.transparent=!0,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.fog=t.fog,this}}class db extends hn{constructor(t){super(t),this.isRawShaderMaterial=!0,this.type="RawShaderMaterial"}}class Km extends si{constructor(t){super(),this.isMeshStandardMaterial=!0,this.defines={STANDARD:""},this.type="MeshStandardMaterial",this.color=new vt(16777215),this.roughness=1,this.metalness=0,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new vt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Zs,this.normalScale=new Q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.roughnessMap=null,this.metalnessMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Tn,this.envMapIntensity=1,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={STANDARD:""},this.color.copy(t.color),this.roughness=t.roughness,this.metalness=t.metalness,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.roughnessMap=t.roughnessMap,this.metalnessMap=t.metalnessMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.envMapIntensity=t.envMapIntensity,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class fb extends Km{constructor(t){super(),this.isMeshPhysicalMaterial=!0,this.defines={STANDARD:"",PHYSICAL:""},this.type="MeshPhysicalMaterial",this.anisotropyRotation=0,this.anisotropyMap=null,this.clearcoatMap=null,this.clearcoatRoughness=0,this.clearcoatRoughnessMap=null,this.clearcoatNormalScale=new Q(1,1),this.clearcoatNormalMap=null,this.ior=1.5,Object.defineProperty(this,"reflectivity",{get:function(){return Ie(2.5*(this.ior-1)/(this.ior+1),0,1)},set:function(e){this.ior=(1+.4*e)/(1-.4*e)}}),this.iridescenceMap=null,this.iridescenceIOR=1.3,this.iridescenceThicknessRange=[100,400],this.iridescenceThicknessMap=null,this.sheenColor=new vt(0),this.sheenColorMap=null,this.sheenRoughness=1,this.sheenRoughnessMap=null,this.transmissionMap=null,this.thickness=0,this.thicknessMap=null,this.attenuationDistance=1/0,this.attenuationColor=new vt(1,1,1),this.specularIntensity=1,this.specularIntensityMap=null,this.specularColor=new vt(1,1,1),this.specularColorMap=null,this._anisotropy=0,this._clearcoat=0,this._dispersion=0,this._iridescence=0,this._sheen=0,this._transmission=0,this.setValues(t)}get anisotropy(){return this._anisotropy}set anisotropy(t){this._anisotropy>0!=t>0&&this.version++,this._anisotropy=t}get clearcoat(){return this._clearcoat}set clearcoat(t){this._clearcoat>0!=t>0&&this.version++,this._clearcoat=t}get iridescence(){return this._iridescence}set iridescence(t){this._iridescence>0!=t>0&&this.version++,this._iridescence=t}get dispersion(){return this._dispersion}set dispersion(t){this._dispersion>0!=t>0&&this.version++,this._dispersion=t}get sheen(){return this._sheen}set sheen(t){this._sheen>0!=t>0&&this.version++,this._sheen=t}get transmission(){return this._transmission}set transmission(t){this._transmission>0!=t>0&&this.version++,this._transmission=t}copy(t){return super.copy(t),this.defines={STANDARD:"",PHYSICAL:""},this.anisotropy=t.anisotropy,this.anisotropyRotation=t.anisotropyRotation,this.anisotropyMap=t.anisotropyMap,this.clearcoat=t.clearcoat,this.clearcoatMap=t.clearcoatMap,this.clearcoatRoughness=t.clearcoatRoughness,this.clearcoatRoughnessMap=t.clearcoatRoughnessMap,this.clearcoatNormalMap=t.clearcoatNormalMap,this.clearcoatNormalScale.copy(t.clearcoatNormalScale),this.dispersion=t.dispersion,this.ior=t.ior,this.iridescence=t.iridescence,this.iridescenceMap=t.iridescenceMap,this.iridescenceIOR=t.iridescenceIOR,this.iridescenceThicknessRange=[...t.iridescenceThicknessRange],this.iridescenceThicknessMap=t.iridescenceThicknessMap,this.sheen=t.sheen,this.sheenColor.copy(t.sheenColor),this.sheenColorMap=t.sheenColorMap,this.sheenRoughness=t.sheenRoughness,this.sheenRoughnessMap=t.sheenRoughnessMap,this.transmission=t.transmission,this.transmissionMap=t.transmissionMap,this.thickness=t.thickness,this.thicknessMap=t.thicknessMap,this.attenuationDistance=t.attenuationDistance,this.attenuationColor.copy(t.attenuationColor),this.specularIntensity=t.specularIntensity,this.specularIntensityMap=t.specularIntensityMap,this.specularColor.copy(t.specularColor),this.specularColorMap=t.specularColorMap,this}}class pb extends si{constructor(t){super(),this.isMeshPhongMaterial=!0,this.type="MeshPhongMaterial",this.color=new vt(16777215),this.specular=new vt(1118481),this.shininess=30,this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new vt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Zs,this.normalScale=new Q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Tn,this.combine=qh,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.specular.copy(t.specular),this.shininess=t.shininess,this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class mb extends si{constructor(t){super(),this.isMeshToonMaterial=!0,this.defines={TOON:""},this.type="MeshToonMaterial",this.color=new vt(16777215),this.map=null,this.gradientMap=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new vt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Zs,this.normalScale=new Q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.gradientMap=t.gradientMap,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}class gb extends si{constructor(t){super(),this.isMeshNormalMaterial=!0,this.type="MeshNormalMaterial",this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Zs,this.normalScale=new Q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.wireframe=!1,this.wireframeLinewidth=1,this.flatShading=!1,this.setValues(t)}copy(t){return super.copy(t),this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.flatShading=t.flatShading,this}}class _b extends si{constructor(t){super(),this.isMeshLambertMaterial=!0,this.type="MeshLambertMaterial",this.color=new vt(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.emissive=new vt(0),this.emissiveIntensity=1,this.emissiveMap=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Zs,this.normalScale=new Q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new Tn,this.combine=qh,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.emissive.copy(t.emissive),this.emissiveMap=t.emissiveMap,this.emissiveIntensity=t.emissiveIntensity,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.flatShading=t.flatShading,this.fog=t.fog,this}}class yb extends si{constructor(t){super(),this.isMeshMatcapMaterial=!0,this.defines={MATCAP:""},this.type="MeshMatcapMaterial",this.color=new vt(16777215),this.matcap=null,this.map=null,this.bumpMap=null,this.bumpScale=1,this.normalMap=null,this.normalMapType=Zs,this.normalScale=new Q(1,1),this.displacementMap=null,this.displacementScale=1,this.displacementBias=0,this.alphaMap=null,this.flatShading=!1,this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.defines={MATCAP:""},this.color.copy(t.color),this.matcap=t.matcap,this.map=t.map,this.bumpMap=t.bumpMap,this.bumpScale=t.bumpScale,this.normalMap=t.normalMap,this.normalMapType=t.normalMapType,this.normalScale.copy(t.normalScale),this.displacementMap=t.displacementMap,this.displacementScale=t.displacementScale,this.displacementBias=t.displacementBias,this.alphaMap=t.alphaMap,this.flatShading=t.flatShading,this.fog=t.fog,this}}class xb extends Je{constructor(t){super(),this.isLineDashedMaterial=!0,this.type="LineDashedMaterial",this.scale=1,this.dashSize=3,this.gapSize=1,this.setValues(t)}copy(t){return super.copy(t),this.scale=t.scale,this.dashSize=t.dashSize,this.gapSize=t.gapSize,this}}function Pr(r,t,e){return!r||!e&&r.constructor===t?r:typeof t.BYTES_PER_ELEMENT=="number"?new t(r):Array.prototype.slice.call(r)}function vb(r){return ArrayBuffer.isView(r)&&!(r instanceof DataView)}function bb(r){function t(n,s){return r[n]-r[s]}const e=r.length,i=new Array(e);for(let n=0;n!==e;++n)i[n]=n;return i.sort(t),i}function tm(r,t,e){const i=r.length,n=new r.constructor(i);for(let s=0,o=0;o!==i;++s){const a=e[s]*t;for(let h=0;h!==t;++h)n[o++]=r[a+h]}return n}function jm(r,t,e,i){let n=1,s=r[0];for(;s!==void 0&&s[i]===void 0;)s=r[n++];if(s===void 0)return;let o=s[i];if(o!==void 0)if(Array.isArray(o))do o=s[i],o!==void 0&&(t.push(s.time),e.push.apply(e,o)),s=r[n++];while(s!==void 0);else if(o.toArray!==void 0)do o=s[i],o!==void 0&&(t.push(s.time),o.toArray(e,e.length)),s=r[n++];while(s!==void 0);else do o=s[i],o!==void 0&&(t.push(s.time),e.push(o)),s=r[n++];while(s!==void 0)}function m2(r,t,e,i,n=30){const s=r.clone();s.name=t;const o=[];for(let h=0;h<s.tracks.length;++h){const l=s.tracks[h],c=l.getValueSize(),u=[],d=[];for(let f=0;f<l.times.length;++f){const p=l.times[f]*n;if(!(p<e||p>=i)){u.push(l.times[f]);for(let _=0;_<c;++_)d.push(l.values[f*c+_])}}u.length!==0&&(l.times=Pr(u,l.times.constructor),l.values=Pr(d,l.values.constructor),o.push(l))}s.tracks=o;let a=1/0;for(let h=0;h<s.tracks.length;++h)a>s.tracks[h].times[0]&&(a=s.tracks[h].times[0]);for(let h=0;h<s.tracks.length;++h)s.tracks[h].shift(-1*a);return s.resetDuration(),s}function g2(r,t=0,e=r,i=30){i<=0&&(i=30);const n=e.tracks.length,s=t/i;for(let o=0;o<n;++o){const a=e.tracks[o],h=a.ValueTypeName;if(h==="bool"||h==="string")continue;const l=r.tracks.find(function(m){return m.name===a.name&&m.ValueTypeName===h});if(l===void 0)continue;let c=0;const u=a.getValueSize();a.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(c=u/3);let d=0;const f=l.getValueSize();l.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline&&(d=f/3);const p=a.times.length-1;let _;if(s<=a.times[0]){const m=c,x=u-c;_=a.values.slice(m,x)}else if(s>=a.times[p]){const m=p*u+c,x=m+u-c;_=a.values.slice(m,x)}else{const m=a.createInterpolant(),x=c,y=u-c;m.evaluate(s),_=m.resultBuffer.slice(x,y)}h==="quaternion"&&new Ii().fromArray(_).normalize().conjugate().toArray(_);const g=l.times.length;for(let m=0;m<g;++m){const x=m*f+d;if(h==="quaternion")Ii.multiplyQuaternionsFlat(l.values,x,_,0,l.values,x);else{const y=f-d*2;for(let v=0;v<y;++v)l.values[x+v]-=_[v]}}}return r.blendMode=Rm,r}const _2={convertArray:Pr,isTypedArray:vb,getKeyframeOrder:bb,sortedArray:tm,flattenJSON:jm,subclip:m2,makeClipAdditive:g2};class tl{constructor(t,e,i,n){this.parameterPositions=t,this._cachedIndex=0,this.resultBuffer=n!==void 0?n:new e.constructor(i),this.sampleValues=e,this.valueSize=i,this.settings=null,this.DefaultSettings_={}}evaluate(t){const e=this.parameterPositions;let i=this._cachedIndex,n=e[i],s=e[i-1];t:{e:{let o;i:{n:if(!(t<n)){for(let a=i+2;;){if(n===void 0){if(t<s)break n;return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}if(i===a)break;if(s=n,n=e[++i],t<n)break e}o=e.length;break i}if(!(t>=s)){const a=e[1];t<a&&(i=2,s=a);for(let h=i-2;;){if(s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(i===h)break;if(n=s,s=e[--i-1],t>=s)break e}o=i,i=0;break i}break t}for(;i<o;){const a=i+o>>>1;t<e[a]?o=a:i=a+1}if(n=e[i],s=e[i-1],s===void 0)return this._cachedIndex=0,this.copySampleValue_(0);if(n===void 0)return i=e.length,this._cachedIndex=i,this.copySampleValue_(i-1)}this._cachedIndex=i,this.intervalChanged_(i,s,n)}return this.interpolate_(i,s,t,n)}getSettings_(){return this.settings||this.DefaultSettings_}copySampleValue_(t){const e=this.resultBuffer,i=this.sampleValues,n=this.valueSize,s=t*n;for(let o=0;o!==n;++o)e[o]=i[s+o];return e}interpolate_(){throw new Error("call to abstract method")}intervalChanged_(){}}class Mb extends tl{constructor(t,e,i,n){super(t,e,i,n),this._weightPrev=-0,this._offsetPrev=-0,this._weightNext=-0,this._offsetNext=-0,this.DefaultSettings_={endingStart:Er,endingEnd:Er}}intervalChanged_(t,e,i){const n=this.parameterPositions;let s=t-2,o=t+1,a=n[s],h=n[o];if(a===void 0)switch(this.getSettings_().endingStart){case Tr:s=t,a=2*e-i;break;case Sh:s=n.length-2,a=e+n[s]-n[s+1];break;default:s=t,a=i}if(h===void 0)switch(this.getSettings_().endingEnd){case Tr:o=t,h=2*i-e;break;case Sh:o=1,h=i+n[1]-n[0];break;default:o=t-1,h=e}const l=(i-e)*.5,c=this.valueSize;this._weightPrev=l/(e-a),this._weightNext=l/(h-i),this._offsetPrev=s*c,this._offsetNext=o*c}interpolate_(t,e,i,n){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,h=t*a,l=h-a,c=this._offsetPrev,u=this._offsetNext,d=this._weightPrev,f=this._weightNext,p=(i-e)/(n-e),_=p*p,g=_*p,m=-d*g+2*d*_-d*p,x=(1+d)*g+(-1.5-2*d)*_+(-.5+d)*p+1,y=(-1-f)*g+(1.5+f)*_+.5*p,v=f*g-f*_;for(let E=0;E!==a;++E)s[E]=m*o[c+E]+x*o[l+E]+y*o[h+E]+v*o[u+E];return s}}class Qm extends tl{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,h=t*a,l=h-a,c=(i-e)/(n-e),u=1-c;for(let d=0;d!==a;++d)s[d]=o[l+d]*u+o[h+d]*c;return s}}class wb extends tl{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t){return this.copySampleValue_(t-1)}}class Rn{constructor(t,e,i,n){if(t===void 0)throw new Error("THREE.KeyframeTrack: track name is undefined");if(e===void 0||e.length===0)throw new Error("THREE.KeyframeTrack: no keyframes in track named "+t);this.name=t,this.times=Pr(e,this.TimeBufferType),this.values=Pr(i,this.ValueBufferType),this.setInterpolation(n||this.DefaultInterpolation)}static toJSON(t){const e=t.constructor;let i;if(e.toJSON!==this.toJSON)i=e.toJSON(t);else{i={name:t.name,times:Pr(t.times,Array),values:Pr(t.values,Array)};const n=t.getInterpolation();n!==t.DefaultInterpolation&&(i.interpolation=n)}return i.type=t.ValueTypeName,i}InterpolantFactoryMethodDiscrete(t){return new wb(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodLinear(t){return new Qm(this.times,this.values,this.getValueSize(),t)}InterpolantFactoryMethodSmooth(t){return new Mb(this.times,this.values,this.getValueSize(),t)}setInterpolation(t){let e;switch(t){case wh:e=this.InterpolantFactoryMethodDiscrete;break;case Hu:e=this.InterpolantFactoryMethodLinear;break;case ru:e=this.InterpolantFactoryMethodSmooth;break}if(e===void 0){const i="unsupported interpolation for "+this.ValueTypeName+" keyframe track named "+this.name;if(this.createInterpolant===void 0)if(t!==this.DefaultInterpolation)this.setInterpolation(this.DefaultInterpolation);else throw new Error(i);return console.warn("THREE.KeyframeTrack:",i),this}return this.createInterpolant=e,this}getInterpolation(){switch(this.createInterpolant){case this.InterpolantFactoryMethodDiscrete:return wh;case this.InterpolantFactoryMethodLinear:return Hu;case this.InterpolantFactoryMethodSmooth:return ru}}getValueSize(){return this.values.length/this.times.length}shift(t){if(t!==0){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]+=t}return this}scale(t){if(t!==1){const e=this.times;for(let i=0,n=e.length;i!==n;++i)e[i]*=t}return this}trim(t,e){const i=this.times,n=i.length;let s=0,o=n-1;for(;s!==n&&i[s]<t;)++s;for(;o!==-1&&i[o]>e;)--o;if(++o,s!==0||o!==n){s>=o&&(o=Math.max(o,1),s=o-1);const a=this.getValueSize();this.times=i.slice(s,o),this.values=this.values.slice(s*a,o*a)}return this}validate(){let t=!0;const e=this.getValueSize();e-Math.floor(e)!==0&&(console.error("THREE.KeyframeTrack: Invalid value size in track.",this),t=!1);const i=this.times,n=this.values,s=i.length;s===0&&(console.error("THREE.KeyframeTrack: Track is empty.",this),t=!1);let o=null;for(let a=0;a!==s;a++){const h=i[a];if(typeof h=="number"&&isNaN(h)){console.error("THREE.KeyframeTrack: Time is not a valid number.",this,a,h),t=!1;break}if(o!==null&&o>h){console.error("THREE.KeyframeTrack: Out of order keys.",this,a,h,o),t=!1;break}o=h}if(n!==void 0&&vb(n))for(let a=0,h=n.length;a!==h;++a){const l=n[a];if(isNaN(l)){console.error("THREE.KeyframeTrack: Value is not a valid number.",this,a,l),t=!1;break}}return t}optimize(){const t=this.times.slice(),e=this.values.slice(),i=this.getValueSize(),n=this.getInterpolation()===ru,s=t.length-1;let o=1;for(let a=1;a<s;++a){let h=!1;const l=t[a],c=t[a+1];if(l!==c&&(a!==1||l!==t[0]))if(n)h=!0;else{const u=a*i,d=u-i,f=u+i;for(let p=0;p!==i;++p){const _=e[u+p];if(_!==e[d+p]||_!==e[f+p]){h=!0;break}}}if(h){if(a!==o){t[o]=t[a];const u=a*i,d=o*i;for(let f=0;f!==i;++f)e[d+f]=e[u+f]}++o}}if(s>0){t[o]=t[s];for(let a=s*i,h=o*i,l=0;l!==i;++l)e[h+l]=e[a+l];++o}return o!==t.length?(this.times=t.slice(0,o),this.values=e.slice(0,o*i)):(this.times=t,this.values=e),this}clone(){const t=this.times.slice(),e=this.values.slice(),i=this.constructor,n=new i(this.name,t,e);return n.createInterpolant=this.createInterpolant,n}}Rn.prototype.TimeBufferType=Float32Array;Rn.prototype.ValueBufferType=Float32Array;Rn.prototype.DefaultInterpolation=Hu;class $r extends Rn{constructor(t,e,i){super(t,e,i)}}$r.prototype.ValueTypeName="bool";$r.prototype.ValueBufferType=Array;$r.prototype.DefaultInterpolation=wh;$r.prototype.InterpolantFactoryMethodLinear=void 0;$r.prototype.InterpolantFactoryMethodSmooth=void 0;class tg extends Rn{}tg.prototype.ValueTypeName="color";class Fh extends Rn{}Fh.prototype.ValueTypeName="number";class Sb extends tl{constructor(t,e,i,n){super(t,e,i,n)}interpolate_(t,e,i,n){const s=this.resultBuffer,o=this.sampleValues,a=this.valueSize,h=(i-e)/(n-e);let l=t*a;for(let c=l+a;l!==c;l+=4)Ii.slerpFlat(s,0,o,l-a,o,l,h);return s}}class el extends Rn{InterpolantFactoryMethodLinear(t){return new Sb(this.times,this.values,this.getValueSize(),t)}}el.prototype.ValueTypeName="quaternion";el.prototype.InterpolantFactoryMethodSmooth=void 0;class Xr extends Rn{constructor(t,e,i){super(t,e,i)}}Xr.prototype.ValueTypeName="string";Xr.prototype.ValueBufferType=Array;Xr.prototype.DefaultInterpolation=wh;Xr.prototype.InterpolantFactoryMethodLinear=void 0;Xr.prototype.InterpolantFactoryMethodSmooth=void 0;class zh extends Rn{}zh.prototype.ValueTypeName="vector";class Uh{constructor(t="",e=-1,i=[],n=ld){this.name=t,this.tracks=i,this.duration=e,this.blendMode=n,this.uuid=Yi(),this.duration<0&&this.resetDuration()}static parse(t){const e=[],i=t.tracks,n=1/(t.fps||1);for(let o=0,a=i.length;o!==a;++o)e.push(x2(i[o]).scale(n));const s=new this(t.name,t.duration,e,t.blendMode);return s.uuid=t.uuid,s}static toJSON(t){const e=[],i=t.tracks,n={name:t.name,duration:t.duration,tracks:e,uuid:t.uuid,blendMode:t.blendMode};for(let s=0,o=i.length;s!==o;++s)e.push(Rn.toJSON(i[s]));return n}static CreateFromMorphTargetSequence(t,e,i,n){const s=e.length,o=[];for(let a=0;a<s;a++){let h=[],l=[];h.push((a+s-1)%s,a,(a+1)%s),l.push(0,1,0);const c=bb(h);h=tm(h,1,c),l=tm(l,1,c),!n&&h[0]===0&&(h.push(s),l.push(l[0])),o.push(new Fh(".morphTargetInfluences["+e[a].name+"]",h,l).scale(1/i))}return new this(t,-1,o)}static findByName(t,e){let i=t;if(!Array.isArray(t)){const n=t;i=n.geometry&&n.geometry.animations||n.animations}for(let n=0;n<i.length;n++)if(i[n].name===e)return i[n];return null}static CreateClipsFromMorphTargetSequences(t,e,i){const n={},s=/^([\w-]*?)([\d]+)$/;for(let a=0,h=t.length;a<h;a++){const l=t[a],c=l.name.match(s);if(c&&c.length>1){const u=c[1];let d=n[u];d||(n[u]=d=[]),d.push(l)}}const o=[];for(const a in n)o.push(this.CreateFromMorphTargetSequence(a,n[a],e,i));return o}static parseAnimation(t,e){if(!t)return console.error("THREE.AnimationClip: No animation in JSONLoader data."),null;const i=function(u,d,f,p,_){if(f.length!==0){const g=[],m=[];jm(f,g,m,p),g.length!==0&&_.push(new u(d,g,m))}},n=[],s=t.name||"default",o=t.fps||30,a=t.blendMode;let h=t.length||-1;const l=t.hierarchy||[];for(let u=0;u<l.length;u++){const d=l[u].keys;if(!(!d||d.length===0))if(d[0].morphTargets){const f={};let p;for(p=0;p<d.length;p++)if(d[p].morphTargets)for(let _=0;_<d[p].morphTargets.length;_++)f[d[p].morphTargets[_]]=-1;for(const _ in f){const g=[],m=[];for(let x=0;x!==d[p].morphTargets.length;++x){const y=d[p];g.push(y.time),m.push(y.morphTarget===_?1:0)}n.push(new Fh(".morphTargetInfluence["+_+"]",g,m))}h=f.length*o}else{const f=".bones["+e[u].name+"]";i(zh,f+".position",d,"pos",n),i(el,f+".quaternion",d,"rot",n),i(zh,f+".scale",d,"scl",n)}}return n.length===0?null:new this(s,h,n,a)}resetDuration(){const t=this.tracks;let e=0;for(let i=0,n=t.length;i!==n;++i){const s=this.tracks[i];e=Math.max(e,s.times[s.times.length-1])}return this.duration=e,this}trim(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].trim(0,this.duration);return this}validate(){let t=!0;for(let e=0;e<this.tracks.length;e++)t=t&&this.tracks[e].validate();return t}optimize(){for(let t=0;t<this.tracks.length;t++)this.tracks[t].optimize();return this}clone(){const t=[];for(let e=0;e<this.tracks.length;e++)t.push(this.tracks[e].clone());return new this.constructor(this.name,this.duration,t,this.blendMode)}toJSON(){return this.constructor.toJSON(this)}}function y2(r){switch(r.toLowerCase()){case"scalar":case"double":case"float":case"number":case"integer":return Fh;case"vector":case"vector2":case"vector3":case"vector4":return zh;case"color":return tg;case"quaternion":return el;case"bool":case"boolean":return $r;case"string":return Xr}throw new Error("THREE.KeyframeTrack: Unsupported typeName: "+r)}function x2(r){if(r.type===void 0)throw new Error("THREE.KeyframeTrack: track type undefined, can not parse");const t=y2(r.type);if(r.times===void 0){const e=[],i=[];jm(r.keys,e,i,"value"),r.times=e,r.values=i}return t.parse!==void 0?t.parse(r):new t(r.name,r.times,r.values,r.interpolation)}const us={enabled:!1,files:{},add:function(r,t){this.enabled!==!1&&(this.files[r]=t)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};let eg=class{constructor(t,e,i){const n=this;let s=!1,o=0,a=0,h;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(c){a++,s===!1&&n.onStart!==void 0&&n.onStart(c,o,a),s=!0},this.itemEnd=function(c){o++,n.onProgress!==void 0&&n.onProgress(c,o,a),o===a&&(s=!1,n.onLoad!==void 0&&n.onLoad())},this.itemError=function(c){n.onError!==void 0&&n.onError(c)},this.resolveURL=function(c){return h?h(c):c},this.setURLModifier=function(c){return h=c,this},this.addHandler=function(c,u){return l.push(c,u),this},this.removeHandler=function(c){const u=l.indexOf(c);return u!==-1&&l.splice(u,2),this},this.getHandler=function(c){for(let u=0,d=l.length;u<d;u+=2){const f=l[u],p=l[u+1];if(f.global&&(f.lastIndex=0),f.test(c))return p}return null}}};const Ab=new eg;let Oi=class{constructor(t){this.manager=t!==void 0?t:Ab,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const i=this;return new Promise(function(n,s){i.load(t,n,e,s)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}};Oi.DEFAULT_MATERIAL_NAME="__DEFAULT";const is={};let v2=class extends Error{constructor(t,e){super(t),this.response=e}},ys=class extends Oi{constructor(t){super(t)}load(t,e,i,n){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=us.get(t);if(s!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(s),this.manager.itemEnd(t)},0),s;if(is[t]!==void 0){is[t].push({onLoad:e,onProgress:i,onError:n});return}is[t]=[],is[t].push({onLoad:e,onProgress:i,onError:n});const o=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,h=this.responseType;fetch(o).then(l=>{if(l.status===200||l.status===0){if(l.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||l.body===void 0||l.body.getReader===void 0)return l;const c=is[t],u=l.body.getReader(),d=l.headers.get("X-File-Size")||l.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let _=0;const g=new ReadableStream({start(m){x();function x(){u.read().then(({done:y,value:v})=>{if(y)m.close();else{_+=v.byteLength;const E=new ProgressEvent("progress",{lengthComputable:p,loaded:_,total:f});for(let b=0,w=c.length;b<w;b++){const T=c[b];T.onProgress&&T.onProgress(E)}m.enqueue(v),x()}},y=>{m.error(y)})}}});return new Response(g)}else throw new v2(`fetch for "${l.url}" responded with ${l.status}: ${l.statusText}`,l)}).then(l=>{switch(h){case"arraybuffer":return l.arrayBuffer();case"blob":return l.blob();case"document":return l.text().then(c=>new DOMParser().parseFromString(c,a));case"json":return l.json();default:if(a===void 0)return l.text();{const u=/charset="?([^;"\s]*)"?/i.exec(a),d=u&&u[1]?u[1].toLowerCase():void 0,f=new TextDecoder(d);return l.arrayBuffer().then(p=>f.decode(p))}}}).then(l=>{us.add(t,l);const c=is[t];delete is[t];for(let u=0,d=c.length;u<d;u++){const f=c[u];f.onLoad&&f.onLoad(l)}}).catch(l=>{const c=is[t];if(c===void 0)throw this.manager.itemError(t),l;delete is[t];for(let u=0,d=c.length;u<d;u++){const f=c[u];f.onError&&f.onError(l)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}};class b2 extends Oi{constructor(t){super(t)}load(t,e,i,n){const s=this,o=new ys(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(a){try{e(s.parse(JSON.parse(a)))}catch(h){n?n(h):console.error(h),s.manager.itemError(t)}},i,n)}parse(t){const e=[];for(let i=0;i<t.length;i++){const n=Uh.parse(t[i]);e.push(n)}return e}}class M2 extends Oi{constructor(t){super(t)}load(t,e,i,n){const s=this,o=[],a=new bd,h=new ys(this.manager);h.setPath(this.path),h.setResponseType("arraybuffer"),h.setRequestHeader(this.requestHeader),h.setWithCredentials(s.withCredentials);let l=0;function c(u){h.load(t[u],function(d){const f=s.parse(d,!0);o[u]={width:f.width,height:f.height,format:f.format,mipmaps:f.mipmaps},l+=1,l===6&&(f.mipmapCount===1&&(a.minFilter=ke),a.image=o,a.format=f.format,a.needsUpdate=!0,e&&e(a))},i,n)}if(Array.isArray(t))for(let u=0,d=t.length;u<d;++u)c(u);else h.load(t,function(u){const d=s.parse(u,!0);if(d.isCubemap){const f=d.mipmaps.length/d.mipmapCount;for(let p=0;p<f;p++){o[p]={mipmaps:[]};for(let _=0;_<d.mipmapCount;_++)o[p].mipmaps.push(d.mipmaps[p*d.mipmapCount+_]),o[p].format=d.format,o[p].width=d.width,o[p].height=d.height}a.image=o}else a.image.width=d.width,a.image.height=d.height,a.mipmaps=d.mipmaps;d.mipmapCount===1&&(a.minFilter=ke),a.format=d.format,a.needsUpdate=!0,e&&e(a)},i,n);return a}}class Nh extends Oi{constructor(t){super(t)}load(t,e,i,n){this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,o=us.get(t);if(o!==void 0)return s.manager.itemStart(t),setTimeout(function(){e&&e(o),s.manager.itemEnd(t)},0),o;const a=Ph("img");function h(){c(),us.add(t,this),e&&e(this),s.manager.itemEnd(t)}function l(u){c(),n&&n(u),s.manager.itemError(t),s.manager.itemEnd(t)}function c(){a.removeEventListener("load",h,!1),a.removeEventListener("error",l,!1)}return a.addEventListener("load",h,!1),a.addEventListener("error",l,!1),t.slice(0,5)!=="data:"&&this.crossOrigin!==void 0&&(a.crossOrigin=this.crossOrigin),s.manager.itemStart(t),a.src=t,a}}class w2 extends Oi{constructor(t){super(t)}load(t,e,i,n){const s=new Jh;s.colorSpace=nn;const o=new Nh(this.manager);o.setCrossOrigin(this.crossOrigin),o.setPath(this.path);let a=0;function h(l){o.load(t[l],function(c){s.images[l]=c,a++,a===6&&(s.needsUpdate=!0,e&&e(s))},void 0,n)}for(let l=0;l<t.length;++l)h(l);return s}}class S2 extends Oi{constructor(t){super(t)}load(t,e,i,n){const s=this,o=new Bn,a=new ys(this.manager);return a.setResponseType("arraybuffer"),a.setRequestHeader(this.requestHeader),a.setPath(this.path),a.setWithCredentials(s.withCredentials),a.load(t,function(h){let l;try{l=s.parse(h)}catch(c){if(n!==void 0)n(c);else{console.error(c);return}}l.image!==void 0?o.image=l.image:l.data!==void 0&&(o.image.width=l.width,o.image.height=l.height,o.image.data=l.data),o.wrapS=l.wrapS!==void 0?l.wrapS:rn,o.wrapT=l.wrapT!==void 0?l.wrapT:rn,o.magFilter=l.magFilter!==void 0?l.magFilter:ke,o.minFilter=l.minFilter!==void 0?l.minFilter:ke,o.anisotropy=l.anisotropy!==void 0?l.anisotropy:1,l.colorSpace!==void 0&&(o.colorSpace=l.colorSpace),l.flipY!==void 0&&(o.flipY=l.flipY),l.format!==void 0&&(o.format=l.format),l.type!==void 0&&(o.type=l.type),l.mipmaps!==void 0&&(o.mipmaps=l.mipmaps,o.minFilter=Un),l.mipmapCount===1&&(o.minFilter=ke),l.generateMipmaps!==void 0&&(o.generateMipmaps=l.generateMipmaps),o.needsUpdate=!0,e&&e(o,l)},i,n),o}}class ig extends Oi{constructor(t){super(t)}load(t,e,i,n){const s=new Ke,o=new Nh(this.manager);return o.setCrossOrigin(this.crossOrigin),o.setPath(this.path),o.load(t,function(a){s.image=a,s.needsUpdate=!0,e!==void 0&&e(s)},i,n),s}}class js extends pe{constructor(t,e=1){super(),this.isLight=!0,this.type="Light",this.color=new vt(t),this.intensity=e}dispose(){}copy(t,e){return super.copy(t,e),this.color.copy(t.color),this.intensity=t.intensity,this}toJSON(t){const e=super.toJSON(t);return e.object.color=this.color.getHex(),e.object.intensity=this.intensity,this.groundColor!==void 0&&(e.object.groundColor=this.groundColor.getHex()),this.distance!==void 0&&(e.object.distance=this.distance),this.angle!==void 0&&(e.object.angle=this.angle),this.decay!==void 0&&(e.object.decay=this.decay),this.penumbra!==void 0&&(e.object.penumbra=this.penumbra),this.shadow!==void 0&&(e.object.shadow=this.shadow.toJSON()),this.target!==void 0&&(e.object.target=this.target.uuid),e}}class Eb extends js{constructor(t,e,i){super(t,i),this.isHemisphereLight=!0,this.type="HemisphereLight",this.position.copy(pe.DEFAULT_UP),this.updateMatrix(),this.groundColor=new vt(e)}copy(t,e){return super.copy(t,e),this.groundColor.copy(t.groundColor),this}}const Zf=new Ft,D0=new R,O0=new R;class ng{constructor(t){this.camera=t,this.intensity=1,this.bias=0,this.normalBias=0,this.radius=1,this.blurSamples=8,this.mapSize=new Q(512,512),this.map=null,this.mapPass=null,this.matrix=new Ft,this.autoUpdate=!0,this.needsUpdate=!1,this._frustum=new Kh,this._frameExtents=new Q(1,1),this._viewportCount=1,this._viewports=[new se(0,0,1,1)]}getViewportCount(){return this._viewportCount}getFrustum(){return this._frustum}updateMatrices(t){const e=this.camera,i=this.matrix;D0.setFromMatrixPosition(t.matrixWorld),e.position.copy(D0),O0.setFromMatrixPosition(t.target.matrixWorld),e.lookAt(O0),e.updateMatrixWorld(),Zf.multiplyMatrices(e.projectionMatrix,e.matrixWorldInverse),this._frustum.setFromProjectionMatrix(Zf),i.set(.5,0,0,.5,0,.5,0,.5,0,0,.5,.5,0,0,0,1),i.multiply(Zf)}getViewport(t){return this._viewports[t]}getFrameExtents(){return this._frameExtents}dispose(){this.map&&this.map.dispose(),this.mapPass&&this.mapPass.dispose()}copy(t){return this.camera=t.camera.clone(),this.intensity=t.intensity,this.bias=t.bias,this.radius=t.radius,this.mapSize.copy(t.mapSize),this}clone(){return new this.constructor().copy(this)}toJSON(){const t={};return this.intensity!==1&&(t.intensity=this.intensity),this.bias!==0&&(t.bias=this.bias),this.normalBias!==0&&(t.normalBias=this.normalBias),this.radius!==1&&(t.radius=this.radius),(this.mapSize.x!==512||this.mapSize.y!==512)&&(t.mapSize=this.mapSize.toArray()),t.camera=this.camera.toJSON(!1).object,delete t.camera.matrix,t}}class A2 extends ng{constructor(){super(new Ye(50,1,.5,500)),this.isSpotLightShadow=!0,this.focus=1}updateMatrices(t){const e=this.camera,i=la*2*t.angle*this.focus,n=this.mapSize.width/this.mapSize.height,s=t.distance||e.far;(i!==e.fov||n!==e.aspect||s!==e.far)&&(e.fov=i,e.aspect=n,e.far=s,e.updateProjectionMatrix()),super.updateMatrices(t)}copy(t){return super.copy(t),this.focus=t.focus,this}}class Tb extends js{constructor(t,e,i=0,n=Math.PI/3,s=0,o=2){super(t,e),this.isSpotLight=!0,this.type="SpotLight",this.position.copy(pe.DEFAULT_UP),this.updateMatrix(),this.target=new pe,this.distance=i,this.angle=n,this.penumbra=s,this.decay=o,this.map=null,this.shadow=new A2}get power(){return this.intensity*Math.PI}set power(t){this.intensity=t/Math.PI}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.angle=t.angle,this.penumbra=t.penumbra,this.decay=t.decay,this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}const F0=new Ft,Va=new R,Jf=new R;class E2 extends ng{constructor(){super(new Ye(90,1,.5,500)),this.isPointLightShadow=!0,this._frameExtents=new Q(4,2),this._viewportCount=6,this._viewports=[new se(2,1,1,1),new se(0,1,1,1),new se(3,1,1,1),new se(1,1,1,1),new se(3,0,1,1),new se(1,0,1,1)],this._cubeDirections=[new R(1,0,0),new R(-1,0,0),new R(0,0,1),new R(0,0,-1),new R(0,1,0),new R(0,-1,0)],this._cubeUps=[new R(0,1,0),new R(0,1,0),new R(0,1,0),new R(0,1,0),new R(0,0,1),new R(0,0,-1)]}updateMatrices(t,e=0){const i=this.camera,n=this.matrix,s=t.distance||i.far;s!==i.far&&(i.far=s,i.updateProjectionMatrix()),Va.setFromMatrixPosition(t.matrixWorld),i.position.copy(Va),Jf.copy(i.position),Jf.add(this._cubeDirections[e]),i.up.copy(this._cubeUps[e]),i.lookAt(Jf),i.updateMatrixWorld(),n.makeTranslation(-Va.x,-Va.y,-Va.z),F0.multiplyMatrices(i.projectionMatrix,i.matrixWorldInverse),this._frustum.setFromProjectionMatrix(F0)}}class Cb extends js{constructor(t,e,i=0,n=2){super(t,e),this.isPointLight=!0,this.type="PointLight",this.distance=i,this.decay=n,this.shadow=new E2}get power(){return this.intensity*4*Math.PI}set power(t){this.intensity=t/(4*Math.PI)}dispose(){this.shadow.dispose()}copy(t,e){return super.copy(t,e),this.distance=t.distance,this.decay=t.decay,this.shadow=t.shadow.clone(),this}}class T2 extends ng{constructor(){super(new md(-5,5,5,-5,.5,500)),this.isDirectionalLightShadow=!0}}class sg extends js{constructor(t,e){super(t,e),this.isDirectionalLight=!0,this.type="DirectionalLight",this.position.copy(pe.DEFAULT_UP),this.updateMatrix(),this.target=new pe,this.shadow=new T2}dispose(){this.shadow.dispose()}copy(t){return super.copy(t),this.target=t.target.clone(),this.shadow=t.shadow.clone(),this}}class rg extends js{constructor(t,e){super(t,e),this.isAmbientLight=!0,this.type="AmbientLight"}}class Rb extends js{constructor(t,e,i=10,n=10){super(t,e),this.isRectAreaLight=!0,this.type="RectAreaLight",this.width=i,this.height=n}get power(){return this.intensity*this.width*this.height*Math.PI}set power(t){this.intensity=t/(this.width*this.height*Math.PI)}copy(t){return super.copy(t),this.width=t.width,this.height=t.height,this}toJSON(t){const e=super.toJSON(t);return e.object.width=this.width,e.object.height=this.height,e}}class Pb{constructor(){this.isSphericalHarmonics3=!0,this.coefficients=[];for(let t=0;t<9;t++)this.coefficients.push(new R)}set(t){for(let e=0;e<9;e++)this.coefficients[e].copy(t[e]);return this}zero(){for(let t=0;t<9;t++)this.coefficients[t].set(0,0,0);return this}getAt(t,e){const i=t.x,n=t.y,s=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.282095),e.addScaledVector(o[1],.488603*n),e.addScaledVector(o[2],.488603*s),e.addScaledVector(o[3],.488603*i),e.addScaledVector(o[4],1.092548*(i*n)),e.addScaledVector(o[5],1.092548*(n*s)),e.addScaledVector(o[6],.315392*(3*s*s-1)),e.addScaledVector(o[7],1.092548*(i*s)),e.addScaledVector(o[8],.546274*(i*i-n*n)),e}getIrradianceAt(t,e){const i=t.x,n=t.y,s=t.z,o=this.coefficients;return e.copy(o[0]).multiplyScalar(.886227),e.addScaledVector(o[1],2*.511664*n),e.addScaledVector(o[2],2*.511664*s),e.addScaledVector(o[3],2*.511664*i),e.addScaledVector(o[4],2*.429043*i*n),e.addScaledVector(o[5],2*.429043*n*s),e.addScaledVector(o[6],.743125*s*s-.247708),e.addScaledVector(o[7],2*.429043*i*s),e.addScaledVector(o[8],.429043*(i*i-n*n)),e}add(t){for(let e=0;e<9;e++)this.coefficients[e].add(t.coefficients[e]);return this}addScaledSH(t,e){for(let i=0;i<9;i++)this.coefficients[i].addScaledVector(t.coefficients[i],e);return this}scale(t){for(let e=0;e<9;e++)this.coefficients[e].multiplyScalar(t);return this}lerp(t,e){for(let i=0;i<9;i++)this.coefficients[i].lerp(t.coefficients[i],e);return this}equals(t){for(let e=0;e<9;e++)if(!this.coefficients[e].equals(t.coefficients[e]))return!1;return!0}copy(t){return this.set(t.coefficients)}clone(){return new this.constructor().copy(this)}fromArray(t,e=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].fromArray(t,e+n*3);return this}toArray(t=[],e=0){const i=this.coefficients;for(let n=0;n<9;n++)i[n].toArray(t,e+n*3);return t}static getBasisAt(t,e){const i=t.x,n=t.y,s=t.z;e[0]=.282095,e[1]=.488603*n,e[2]=.488603*s,e[3]=.488603*i,e[4]=1.092548*i*n,e[5]=1.092548*n*s,e[6]=.315392*(3*s*s-1),e[7]=1.092548*i*s,e[8]=.546274*(i*i-n*n)}}class Ib extends js{constructor(t=new Pb,e=1){super(void 0,e),this.isLightProbe=!0,this.sh=t}copy(t){return super.copy(t),this.sh.copy(t.sh),this}fromJSON(t){return this.intensity=t.intensity,this.sh.fromArray(t.sh),this}toJSON(t){const e=super.toJSON(t);return e.object.sh=this.sh.toArray(),e}}class Fd extends Oi{constructor(t){super(t),this.textures={}}load(t,e,i,n){const s=this,o=new ys(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(t,function(a){try{e(s.parse(JSON.parse(a)))}catch(h){n?n(h):console.error(h),s.manager.itemError(t)}},i,n)}parse(t){const e=this.textures;function i(s){return e[s]===void 0&&console.warn("THREE.MaterialLoader: Undefined texture",s),e[s]}const n=Fd.createMaterialFromType(t.type);if(t.uuid!==void 0&&(n.uuid=t.uuid),t.name!==void 0&&(n.name=t.name),t.color!==void 0&&n.color!==void 0&&n.color.setHex(t.color),t.roughness!==void 0&&(n.roughness=t.roughness),t.metalness!==void 0&&(n.metalness=t.metalness),t.sheen!==void 0&&(n.sheen=t.sheen),t.sheenColor!==void 0&&(n.sheenColor=new vt().setHex(t.sheenColor)),t.sheenRoughness!==void 0&&(n.sheenRoughness=t.sheenRoughness),t.emissive!==void 0&&n.emissive!==void 0&&n.emissive.setHex(t.emissive),t.specular!==void 0&&n.specular!==void 0&&n.specular.setHex(t.specular),t.specularIntensity!==void 0&&(n.specularIntensity=t.specularIntensity),t.specularColor!==void 0&&n.specularColor!==void 0&&n.specularColor.setHex(t.specularColor),t.shininess!==void 0&&(n.shininess=t.shininess),t.clearcoat!==void 0&&(n.clearcoat=t.clearcoat),t.clearcoatRoughness!==void 0&&(n.clearcoatRoughness=t.clearcoatRoughness),t.dispersion!==void 0&&(n.dispersion=t.dispersion),t.iridescence!==void 0&&(n.iridescence=t.iridescence),t.iridescenceIOR!==void 0&&(n.iridescenceIOR=t.iridescenceIOR),t.iridescenceThicknessRange!==void 0&&(n.iridescenceThicknessRange=t.iridescenceThicknessRange),t.transmission!==void 0&&(n.transmission=t.transmission),t.thickness!==void 0&&(n.thickness=t.thickness),t.attenuationDistance!==void 0&&(n.attenuationDistance=t.attenuationDistance),t.attenuationColor!==void 0&&n.attenuationColor!==void 0&&n.attenuationColor.setHex(t.attenuationColor),t.anisotropy!==void 0&&(n.anisotropy=t.anisotropy),t.anisotropyRotation!==void 0&&(n.anisotropyRotation=t.anisotropyRotation),t.fog!==void 0&&(n.fog=t.fog),t.flatShading!==void 0&&(n.flatShading=t.flatShading),t.blending!==void 0&&(n.blending=t.blending),t.combine!==void 0&&(n.combine=t.combine),t.side!==void 0&&(n.side=t.side),t.shadowSide!==void 0&&(n.shadowSide=t.shadowSide),t.opacity!==void 0&&(n.opacity=t.opacity),t.transparent!==void 0&&(n.transparent=t.transparent),t.alphaTest!==void 0&&(n.alphaTest=t.alphaTest),t.alphaHash!==void 0&&(n.alphaHash=t.alphaHash),t.depthFunc!==void 0&&(n.depthFunc=t.depthFunc),t.depthTest!==void 0&&(n.depthTest=t.depthTest),t.depthWrite!==void 0&&(n.depthWrite=t.depthWrite),t.colorWrite!==void 0&&(n.colorWrite=t.colorWrite),t.blendSrc!==void 0&&(n.blendSrc=t.blendSrc),t.blendDst!==void 0&&(n.blendDst=t.blendDst),t.blendEquation!==void 0&&(n.blendEquation=t.blendEquation),t.blendSrcAlpha!==void 0&&(n.blendSrcAlpha=t.blendSrcAlpha),t.blendDstAlpha!==void 0&&(n.blendDstAlpha=t.blendDstAlpha),t.blendEquationAlpha!==void 0&&(n.blendEquationAlpha=t.blendEquationAlpha),t.blendColor!==void 0&&n.blendColor!==void 0&&n.blendColor.setHex(t.blendColor),t.blendAlpha!==void 0&&(n.blendAlpha=t.blendAlpha),t.stencilWriteMask!==void 0&&(n.stencilWriteMask=t.stencilWriteMask),t.stencilFunc!==void 0&&(n.stencilFunc=t.stencilFunc),t.stencilRef!==void 0&&(n.stencilRef=t.stencilRef),t.stencilFuncMask!==void 0&&(n.stencilFuncMask=t.stencilFuncMask),t.stencilFail!==void 0&&(n.stencilFail=t.stencilFail),t.stencilZFail!==void 0&&(n.stencilZFail=t.stencilZFail),t.stencilZPass!==void 0&&(n.stencilZPass=t.stencilZPass),t.stencilWrite!==void 0&&(n.stencilWrite=t.stencilWrite),t.wireframe!==void 0&&(n.wireframe=t.wireframe),t.wireframeLinewidth!==void 0&&(n.wireframeLinewidth=t.wireframeLinewidth),t.wireframeLinecap!==void 0&&(n.wireframeLinecap=t.wireframeLinecap),t.wireframeLinejoin!==void 0&&(n.wireframeLinejoin=t.wireframeLinejoin),t.rotation!==void 0&&(n.rotation=t.rotation),t.linewidth!==void 0&&(n.linewidth=t.linewidth),t.dashSize!==void 0&&(n.dashSize=t.dashSize),t.gapSize!==void 0&&(n.gapSize=t.gapSize),t.scale!==void 0&&(n.scale=t.scale),t.polygonOffset!==void 0&&(n.polygonOffset=t.polygonOffset),t.polygonOffsetFactor!==void 0&&(n.polygonOffsetFactor=t.polygonOffsetFactor),t.polygonOffsetUnits!==void 0&&(n.polygonOffsetUnits=t.polygonOffsetUnits),t.dithering!==void 0&&(n.dithering=t.dithering),t.alphaToCoverage!==void 0&&(n.alphaToCoverage=t.alphaToCoverage),t.premultipliedAlpha!==void 0&&(n.premultipliedAlpha=t.premultipliedAlpha),t.forceSinglePass!==void 0&&(n.forceSinglePass=t.forceSinglePass),t.visible!==void 0&&(n.visible=t.visible),t.toneMapped!==void 0&&(n.toneMapped=t.toneMapped),t.userData!==void 0&&(n.userData=t.userData),t.vertexColors!==void 0&&(typeof t.vertexColors=="number"?n.vertexColors=t.vertexColors>0:n.vertexColors=t.vertexColors),t.uniforms!==void 0)for(const s in t.uniforms){const o=t.uniforms[s];switch(n.uniforms[s]={},o.type){case"t":n.uniforms[s].value=i(o.value);break;case"c":n.uniforms[s].value=new vt().setHex(o.value);break;case"v2":n.uniforms[s].value=new Q().fromArray(o.value);break;case"v3":n.uniforms[s].value=new R().fromArray(o.value);break;case"v4":n.uniforms[s].value=new se().fromArray(o.value);break;case"m3":n.uniforms[s].value=new Zt().fromArray(o.value);break;case"m4":n.uniforms[s].value=new Ft().fromArray(o.value);break;default:n.uniforms[s].value=o.value}}if(t.defines!==void 0&&(n.defines=t.defines),t.vertexShader!==void 0&&(n.vertexShader=t.vertexShader),t.fragmentShader!==void 0&&(n.fragmentShader=t.fragmentShader),t.glslVersion!==void 0&&(n.glslVersion=t.glslVersion),t.extensions!==void 0)for(const s in t.extensions)n.extensions[s]=t.extensions[s];if(t.lights!==void 0&&(n.lights=t.lights),t.clipping!==void 0&&(n.clipping=t.clipping),t.size!==void 0&&(n.size=t.size),t.sizeAttenuation!==void 0&&(n.sizeAttenuation=t.sizeAttenuation),t.map!==void 0&&(n.map=i(t.map)),t.matcap!==void 0&&(n.matcap=i(t.matcap)),t.alphaMap!==void 0&&(n.alphaMap=i(t.alphaMap)),t.bumpMap!==void 0&&(n.bumpMap=i(t.bumpMap)),t.bumpScale!==void 0&&(n.bumpScale=t.bumpScale),t.normalMap!==void 0&&(n.normalMap=i(t.normalMap)),t.normalMapType!==void 0&&(n.normalMapType=t.normalMapType),t.normalScale!==void 0){let s=t.normalScale;Array.isArray(s)===!1&&(s=[s,s]),n.normalScale=new Q().fromArray(s)}return t.displacementMap!==void 0&&(n.displacementMap=i(t.displacementMap)),t.displacementScale!==void 0&&(n.displacementScale=t.displacementScale),t.displacementBias!==void 0&&(n.displacementBias=t.displacementBias),t.roughnessMap!==void 0&&(n.roughnessMap=i(t.roughnessMap)),t.metalnessMap!==void 0&&(n.metalnessMap=i(t.metalnessMap)),t.emissiveMap!==void 0&&(n.emissiveMap=i(t.emissiveMap)),t.emissiveIntensity!==void 0&&(n.emissiveIntensity=t.emissiveIntensity),t.specularMap!==void 0&&(n.specularMap=i(t.specularMap)),t.specularIntensityMap!==void 0&&(n.specularIntensityMap=i(t.specularIntensityMap)),t.specularColorMap!==void 0&&(n.specularColorMap=i(t.specularColorMap)),t.envMap!==void 0&&(n.envMap=i(t.envMap)),t.envMapRotation!==void 0&&n.envMapRotation.fromArray(t.envMapRotation),t.envMapIntensity!==void 0&&(n.envMapIntensity=t.envMapIntensity),t.reflectivity!==void 0&&(n.reflectivity=t.reflectivity),t.refractionRatio!==void 0&&(n.refractionRatio=t.refractionRatio),t.lightMap!==void 0&&(n.lightMap=i(t.lightMap)),t.lightMapIntensity!==void 0&&(n.lightMapIntensity=t.lightMapIntensity),t.aoMap!==void 0&&(n.aoMap=i(t.aoMap)),t.aoMapIntensity!==void 0&&(n.aoMapIntensity=t.aoMapIntensity),t.gradientMap!==void 0&&(n.gradientMap=i(t.gradientMap)),t.clearcoatMap!==void 0&&(n.clearcoatMap=i(t.clearcoatMap)),t.clearcoatRoughnessMap!==void 0&&(n.clearcoatRoughnessMap=i(t.clearcoatRoughnessMap)),t.clearcoatNormalMap!==void 0&&(n.clearcoatNormalMap=i(t.clearcoatNormalMap)),t.clearcoatNormalScale!==void 0&&(n.clearcoatNormalScale=new Q().fromArray(t.clearcoatNormalScale)),t.iridescenceMap!==void 0&&(n.iridescenceMap=i(t.iridescenceMap)),t.iridescenceThicknessMap!==void 0&&(n.iridescenceThicknessMap=i(t.iridescenceThicknessMap)),t.transmissionMap!==void 0&&(n.transmissionMap=i(t.transmissionMap)),t.thicknessMap!==void 0&&(n.thicknessMap=i(t.thicknessMap)),t.anisotropyMap!==void 0&&(n.anisotropyMap=i(t.anisotropyMap)),t.sheenColorMap!==void 0&&(n.sheenColorMap=i(t.sheenColorMap)),t.sheenRoughnessMap!==void 0&&(n.sheenRoughnessMap=i(t.sheenRoughnessMap)),n}setTextures(t){return this.textures=t,this}static createMaterialFromType(t){const e={ShadowMaterial:ub,SpriteMaterial:km,RawShaderMaterial:db,ShaderMaterial:hn,PointsMaterial:Hm,MeshPhysicalMaterial:fb,MeshStandardMaterial:Km,MeshPhongMaterial:pb,MeshToonMaterial:mb,MeshNormalMaterial:gb,MeshLambertMaterial:_b,MeshDepthMaterial:Um,MeshDistanceMaterial:Nm,MeshBasicMaterial:Oe,MeshMatcapMaterial:yb,LineDashedMaterial:xb,LineBasicMaterial:Je,Material:si};return new e[t]}}class em{static decodeText(t){if(console.warn("THREE.LoaderUtils: decodeText() has been deprecated with r165 and will be removed with r175. Use TextDecoder instead."),typeof TextDecoder<"u")return new TextDecoder().decode(t);let e="";for(let i=0,n=t.length;i<n;i++)e+=String.fromCharCode(t[i]);try{return decodeURIComponent(escape(e))}catch{return e}}static extractUrlBase(t){const e=t.lastIndexOf("/");return e===-1?"./":t.slice(0,e+1)}static resolveURL(t,e){return typeof t!="string"||t===""?"":(/^https?:\/\//i.test(e)&&/^\//.test(t)&&(e=e.replace(/(^https?:\/\/[^\/]+).*/i,"$1")),/^(https?:)?\/\//i.test(t)||/^data:.*,.*$/i.test(t)||/^blob:.*$/i.test(t)?t:e+t)}}class og extends Xt{constructor(){super(),this.isInstancedBufferGeometry=!0,this.type="InstancedBufferGeometry",this.instanceCount=1/0}copy(t){return super.copy(t),this.instanceCount=t.instanceCount,this}toJSON(){const t=super.toJSON();return t.instanceCount=this.instanceCount,t.isInstancedBufferGeometry=!0,t}}class Lb extends Oi{constructor(t){super(t)}load(t,e,i,n){const s=this,o=new ys(s.manager);o.setPath(s.path),o.setRequestHeader(s.requestHeader),o.setWithCredentials(s.withCredentials),o.load(t,function(a){try{e(s.parse(JSON.parse(a)))}catch(h){n?n(h):console.error(h),s.manager.itemError(t)}},i,n)}parse(t){const e={},i={};function n(f,p){if(e[p]!==void 0)return e[p];const g=f.interleavedBuffers[p],m=s(f,g.buffer),x=Jo(g.type,m),y=new xd(x,g.stride);return y.uuid=g.uuid,e[p]=y,y}function s(f,p){if(i[p]!==void 0)return i[p];const g=f.arrayBuffers[p],m=new Uint32Array(g).buffer;return i[p]=m,m}const o=t.isInstancedBufferGeometry?new og:new Xt,a=t.data.index;if(a!==void 0){const f=Jo(a.type,a.array);o.setIndex(new _e(f,1))}const h=t.data.attributes;for(const f in h){const p=h[f];let _;if(p.isInterleavedBufferAttribute){const g=n(t.data,p.data);_=new $i(g,p.itemSize,p.offset,p.normalized)}else{const g=Jo(p.type,p.array),m=p.isInstancedBufferAttribute?ua:_e;_=new m(g,p.itemSize,p.normalized)}p.name!==void 0&&(_.name=p.name),p.usage!==void 0&&_.setUsage(p.usage),o.setAttribute(f,_)}const l=t.data.morphAttributes;if(l)for(const f in l){const p=l[f],_=[];for(let g=0,m=p.length;g<m;g++){const x=p[g];let y;if(x.isInterleavedBufferAttribute){const v=n(t.data,x.data);y=new $i(v,x.itemSize,x.offset,x.normalized)}else{const v=Jo(x.type,x.array);y=new _e(v,x.itemSize,x.normalized)}x.name!==void 0&&(y.name=x.name),_.push(y)}o.morphAttributes[f]=_}t.data.morphTargetsRelative&&(o.morphTargetsRelative=!0);const u=t.data.groups||t.data.drawcalls||t.data.offsets;if(u!==void 0)for(let f=0,p=u.length;f!==p;++f){const _=u[f];o.addGroup(_.start,_.count,_.materialIndex)}const d=t.data.boundingSphere;if(d!==void 0){const f=new R;d.center!==void 0&&f.fromArray(d.center),o.boundingSphere=new He(f,d.radius)}return t.name&&(o.name=t.name),t.userData&&(o.userData=t.userData),o}}class C2 extends Oi{constructor(t){super(t)}load(t,e,i,n){const s=this,o=this.path===""?em.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||o;const a=new ys(this.manager);a.setPath(this.path),a.setRequestHeader(this.requestHeader),a.setWithCredentials(this.withCredentials),a.load(t,function(h){let l=null;try{l=JSON.parse(h)}catch(u){n!==void 0&&n(u),console.error("THREE:ObjectLoader: Can't parse "+t+".",u.message);return}const c=l.metadata;if(c===void 0||c.type===void 0||c.type.toLowerCase()==="geometry"){n!==void 0&&n(new Error("THREE.ObjectLoader: Can't load "+t)),console.error("THREE.ObjectLoader: Can't load "+t);return}s.parse(l,e)},i,n)}async loadAsync(t,e){const i=this,n=this.path===""?em.extractUrlBase(t):this.path;this.resourcePath=this.resourcePath||n;const s=new ys(this.manager);s.setPath(this.path),s.setRequestHeader(this.requestHeader),s.setWithCredentials(this.withCredentials);const o=await s.loadAsync(t,e),a=JSON.parse(o),h=a.metadata;if(h===void 0||h.type===void 0||h.type.toLowerCase()==="geometry")throw new Error("THREE.ObjectLoader: Can't load "+t);return await i.parseAsync(a)}parse(t,e){const i=this.parseAnimations(t.animations),n=this.parseShapes(t.shapes),s=this.parseGeometries(t.geometries,n),o=this.parseImages(t.images,function(){e!==void 0&&e(l)}),a=this.parseTextures(t.textures,o),h=this.parseMaterials(t.materials,a),l=this.parseObject(t.object,s,h,a,i),c=this.parseSkeletons(t.skeletons,l);if(this.bindSkeletons(l,c),this.bindLightTargets(l),e!==void 0){let u=!1;for(const d in o)if(o[d].data instanceof HTMLImageElement){u=!0;break}u===!1&&e(l)}return l}async parseAsync(t){const e=this.parseAnimations(t.animations),i=this.parseShapes(t.shapes),n=this.parseGeometries(t.geometries,i),s=await this.parseImagesAsync(t.images),o=this.parseTextures(t.textures,s),a=this.parseMaterials(t.materials,o),h=this.parseObject(t.object,n,a,o,e),l=this.parseSkeletons(t.skeletons,h);return this.bindSkeletons(h,l),this.bindLightTargets(h),h}parseShapes(t){const e={};if(t!==void 0)for(let i=0,n=t.length;i<n;i++){const s=new Or().fromJSON(t[i]);e[s.uuid]=s}return e}parseSkeletons(t,e){const i={},n={};if(e.traverse(function(s){s.isBone&&(n[s.uuid]=s)}),t!==void 0)for(let s=0,o=t.length;s<o;s++){const a=new vd().fromJSON(t[s],n);i[a.uuid]=a}return i}parseGeometries(t,e){const i={};if(t!==void 0){const n=new Lb;for(let s=0,o=t.length;s<o;s++){let a;const h=t[s];switch(h.type){case"BufferGeometry":case"InstancedBufferGeometry":a=n.parse(h);break;default:h.type in L0?a=L0[h.type].fromJSON(h,e):console.warn(`THREE.ObjectLoader: Unsupported geometry type "${h.type}"`)}a.uuid=h.uuid,h.name!==void 0&&(a.name=h.name),h.userData!==void 0&&(a.userData=h.userData),i[h.uuid]=a}}return i}parseMaterials(t,e){const i={},n={};if(t!==void 0){const s=new Fd;s.setTextures(e);for(let o=0,a=t.length;o<a;o++){const h=t[o];i[h.uuid]===void 0&&(i[h.uuid]=s.parse(h)),n[h.uuid]=i[h.uuid]}}return n}parseAnimations(t){const e={};if(t!==void 0)for(let i=0;i<t.length;i++){const n=t[i],s=Uh.parse(n);e[s.uuid]=s}return e}parseImages(t,e){const i=this,n={};let s;function o(h){return i.manager.itemStart(h),s.load(h,function(){i.manager.itemEnd(h)},void 0,function(){i.manager.itemError(h),i.manager.itemEnd(h)})}function a(h){if(typeof h=="string"){const l=h,c=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(l)?l:i.resourcePath+l;return o(c)}else return h.data?{data:Jo(h.type,h.data),width:h.width,height:h.height}:null}if(t!==void 0&&t.length>0){const h=new eg(e);s=new Nh(h),s.setCrossOrigin(this.crossOrigin);for(let l=0,c=t.length;l<c;l++){const u=t[l],d=u.url;if(Array.isArray(d)){const f=[];for(let p=0,_=d.length;p<_;p++){const g=d[p],m=a(g);m!==null&&(m instanceof HTMLImageElement?f.push(m):f.push(new Bn(m.data,m.width,m.height)))}n[u.uuid]=new Cr(f)}else{const f=a(u.url);n[u.uuid]=new Cr(f)}}}return n}async parseImagesAsync(t){const e=this,i={};let n;async function s(o){if(typeof o=="string"){const a=o,h=/^(\/\/)|([a-z]+:(\/\/)?)/i.test(a)?a:e.resourcePath+a;return await n.loadAsync(h)}else return o.data?{data:Jo(o.type,o.data),width:o.width,height:o.height}:null}if(t!==void 0&&t.length>0){n=new Nh(this.manager),n.setCrossOrigin(this.crossOrigin);for(let o=0,a=t.length;o<a;o++){const h=t[o],l=h.url;if(Array.isArray(l)){const c=[];for(let u=0,d=l.length;u<d;u++){const f=l[u],p=await s(f);p!==null&&(p instanceof HTMLImageElement?c.push(p):c.push(new Bn(p.data,p.width,p.height)))}i[h.uuid]=new Cr(c)}else{const c=await s(h.url);i[h.uuid]=new Cr(c)}}}return i}parseTextures(t,e){function i(s,o){return typeof s=="number"?s:(console.warn("THREE.ObjectLoader.parseTexture: Constant should be in numeric form.",s),o[s])}const n={};if(t!==void 0)for(let s=0,o=t.length;s<o;s++){const a=t[s];a.image===void 0&&console.warn('THREE.ObjectLoader: No "image" specified for',a.uuid),e[a.image]===void 0&&console.warn("THREE.ObjectLoader: Undefined image",a.image);const h=e[a.image],l=h.data;let c;Array.isArray(l)?(c=new Jh,l.length===6&&(c.needsUpdate=!0)):(l&&l.data?c=new Bn:c=new Ke,l&&(c.needsUpdate=!0)),c.source=h,c.uuid=a.uuid,a.name!==void 0&&(c.name=a.name),a.mapping!==void 0&&(c.mapping=i(a.mapping,R2)),a.channel!==void 0&&(c.channel=a.channel),a.offset!==void 0&&c.offset.fromArray(a.offset),a.repeat!==void 0&&c.repeat.fromArray(a.repeat),a.center!==void 0&&c.center.fromArray(a.center),a.rotation!==void 0&&(c.rotation=a.rotation),a.wrap!==void 0&&(c.wrapS=i(a.wrap[0],z0),c.wrapT=i(a.wrap[1],z0)),a.format!==void 0&&(c.format=a.format),a.internalFormat!==void 0&&(c.internalFormat=a.internalFormat),a.type!==void 0&&(c.type=a.type),a.colorSpace!==void 0&&(c.colorSpace=a.colorSpace),a.minFilter!==void 0&&(c.minFilter=i(a.minFilter,U0)),a.magFilter!==void 0&&(c.magFilter=i(a.magFilter,U0)),a.anisotropy!==void 0&&(c.anisotropy=a.anisotropy),a.flipY!==void 0&&(c.flipY=a.flipY),a.generateMipmaps!==void 0&&(c.generateMipmaps=a.generateMipmaps),a.premultiplyAlpha!==void 0&&(c.premultiplyAlpha=a.premultiplyAlpha),a.unpackAlignment!==void 0&&(c.unpackAlignment=a.unpackAlignment),a.compareFunction!==void 0&&(c.compareFunction=a.compareFunction),a.userData!==void 0&&(c.userData=a.userData),n[a.uuid]=c}return n}parseObject(t,e,i,n,s){let o;function a(d){return e[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined geometry",d),e[d]}function h(d){if(d!==void 0){if(Array.isArray(d)){const f=[];for(let p=0,_=d.length;p<_;p++){const g=d[p];i[g]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",g),f.push(i[g])}return f}return i[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined material",d),i[d]}}function l(d){return n[d]===void 0&&console.warn("THREE.ObjectLoader: Undefined texture",d),n[d]}let c,u;switch(t.type){case"Scene":o=new Bm,t.background!==void 0&&(Number.isInteger(t.background)?o.background=new vt(t.background):o.background=l(t.background)),t.environment!==void 0&&(o.environment=l(t.environment)),t.fog!==void 0&&(t.fog.type==="Fog"?o.fog=new yd(t.fog.color,t.fog.near,t.fog.far):t.fog.type==="FogExp2"&&(o.fog=new _d(t.fog.color,t.fog.density)),t.fog.name!==""&&(o.fog.name=t.fog.name)),t.backgroundBlurriness!==void 0&&(o.backgroundBlurriness=t.backgroundBlurriness),t.backgroundIntensity!==void 0&&(o.backgroundIntensity=t.backgroundIntensity),t.backgroundRotation!==void 0&&o.backgroundRotation.fromArray(t.backgroundRotation),t.environmentIntensity!==void 0&&(o.environmentIntensity=t.environmentIntensity),t.environmentRotation!==void 0&&o.environmentRotation.fromArray(t.environmentRotation);break;case"PerspectiveCamera":o=new Ye(t.fov,t.aspect,t.near,t.far),t.focus!==void 0&&(o.focus=t.focus),t.zoom!==void 0&&(o.zoom=t.zoom),t.filmGauge!==void 0&&(o.filmGauge=t.filmGauge),t.filmOffset!==void 0&&(o.filmOffset=t.filmOffset),t.view!==void 0&&(o.view=Object.assign({},t.view));break;case"OrthographicCamera":o=new md(t.left,t.right,t.top,t.bottom,t.near,t.far),t.zoom!==void 0&&(o.zoom=t.zoom),t.view!==void 0&&(o.view=Object.assign({},t.view));break;case"AmbientLight":o=new rg(t.color,t.intensity);break;case"DirectionalLight":o=new sg(t.color,t.intensity),o.target=t.target||"";break;case"PointLight":o=new Cb(t.color,t.intensity,t.distance,t.decay);break;case"RectAreaLight":o=new Rb(t.color,t.intensity,t.width,t.height);break;case"SpotLight":o=new Tb(t.color,t.intensity,t.distance,t.angle,t.penumbra,t.decay),o.target=t.target||"";break;case"HemisphereLight":o=new Eb(t.color,t.groundColor,t.intensity);break;case"LightProbe":o=new Ib().fromJSON(t);break;case"SkinnedMesh":c=a(t.geometry),u=h(t.material),o=new Yv(c,u),t.bindMode!==void 0&&(o.bindMode=t.bindMode),t.bindMatrix!==void 0&&o.bindMatrix.fromArray(t.bindMatrix),t.skeleton!==void 0&&(o.skeleton=t.skeleton);break;case"Mesh":c=a(t.geometry),u=h(t.material),o=new ge(c,u);break;case"InstancedMesh":c=a(t.geometry),u=h(t.material);const d=t.count,f=t.instanceMatrix,p=t.instanceColor;o=new Zv(c,u,d),o.instanceMatrix=new ua(new Float32Array(f.array),16),p!==void 0&&(o.instanceColor=new ua(new Float32Array(p.array),p.itemSize));break;case"BatchedMesh":c=a(t.geometry),u=h(t.material),o=new Jv(t.maxInstanceCount,t.maxVertexCount,t.maxIndexCount,u),o.geometry=c,o.perObjectFrustumCulled=t.perObjectFrustumCulled,o.sortObjects=t.sortObjects,o._drawRanges=t.drawRanges,o._reservedRanges=t.reservedRanges,o._visibility=t.visibility,o._active=t.active,o._bounds=t.bounds.map(_=>{const g=new Le;g.min.fromArray(_.boxMin),g.max.fromArray(_.boxMax);const m=new He;return m.radius=_.sphereRadius,m.center.fromArray(_.sphereCenter),{boxInitialized:_.boxInitialized,box:g,sphereInitialized:_.sphereInitialized,sphere:m}}),o._maxInstanceCount=t.maxInstanceCount,o._maxVertexCount=t.maxVertexCount,o._maxIndexCount=t.maxIndexCount,o._geometryInitialized=t.geometryInitialized,o._geometryCount=t.geometryCount,o._matricesTexture=l(t.matricesTexture.uuid),t.colorsTexture!==void 0&&(o._colorsTexture=l(t.colorsTexture.uuid));break;case"LOD":o=new qv;break;case"Line":o=new Hn(a(t.geometry),h(t.material));break;case"LineLoop":o=new Kv(a(t.geometry),h(t.material));break;case"LineSegments":o=new ln(a(t.geometry),h(t.material));break;case"PointCloud":case"Points":o=new jv(a(t.geometry),h(t.material));break;case"Sprite":o=new Xv(h(t.material));break;case"Group":o=new Rr;break;case"Bone":o=new Vm;break;default:o=new pe}if(o.uuid=t.uuid,t.name!==void 0&&(o.name=t.name),t.matrix!==void 0?(o.matrix.fromArray(t.matrix),t.matrixAutoUpdate!==void 0&&(o.matrixAutoUpdate=t.matrixAutoUpdate),o.matrixAutoUpdate&&o.matrix.decompose(o.position,o.quaternion,o.scale)):(t.position!==void 0&&o.position.fromArray(t.position),t.rotation!==void 0&&o.rotation.fromArray(t.rotation),t.quaternion!==void 0&&o.quaternion.fromArray(t.quaternion),t.scale!==void 0&&o.scale.fromArray(t.scale)),t.up!==void 0&&o.up.fromArray(t.up),t.castShadow!==void 0&&(o.castShadow=t.castShadow),t.receiveShadow!==void 0&&(o.receiveShadow=t.receiveShadow),t.shadow&&(t.shadow.intensity!==void 0&&(o.shadow.intensity=t.shadow.intensity),t.shadow.bias!==void 0&&(o.shadow.bias=t.shadow.bias),t.shadow.normalBias!==void 0&&(o.shadow.normalBias=t.shadow.normalBias),t.shadow.radius!==void 0&&(o.shadow.radius=t.shadow.radius),t.shadow.mapSize!==void 0&&o.shadow.mapSize.fromArray(t.shadow.mapSize),t.shadow.camera!==void 0&&(o.shadow.camera=this.parseObject(t.shadow.camera))),t.visible!==void 0&&(o.visible=t.visible),t.frustumCulled!==void 0&&(o.frustumCulled=t.frustumCulled),t.renderOrder!==void 0&&(o.renderOrder=t.renderOrder),t.userData!==void 0&&(o.userData=t.userData),t.layers!==void 0&&(o.layers.mask=t.layers),t.children!==void 0){const d=t.children;for(let f=0;f<d.length;f++)o.add(this.parseObject(d[f],e,i,n,s))}if(t.animations!==void 0){const d=t.animations;for(let f=0;f<d.length;f++){const p=d[f];o.animations.push(s[p])}}if(t.type==="LOD"){t.autoUpdate!==void 0&&(o.autoUpdate=t.autoUpdate);const d=t.levels;for(let f=0;f<d.length;f++){const p=d[f],_=o.getObjectByProperty("uuid",p.object);_!==void 0&&o.addLevel(_,p.distance,p.hysteresis)}}return o}bindSkeletons(t,e){Object.keys(e).length!==0&&t.traverse(function(i){if(i.isSkinnedMesh===!0&&i.skeleton!==void 0){const n=e[i.skeleton];n===void 0?console.warn("THREE.ObjectLoader: No skeleton found with UUID:",i.skeleton):i.bind(n,i.bindMatrix)}})}bindLightTargets(t){t.traverse(function(e){if(e.isDirectionalLight||e.isSpotLight){const i=e.target,n=t.getObjectByProperty("uuid",i);n!==void 0?e.target=n:e.target=new pe}})}}const R2={UVMapping:id,CubeReflectionMapping:gs,CubeRefractionMapping:Ys,EquirectangularReflectionMapping:xh,EquirectangularRefractionMapping:vh,CubeUVReflectionMapping:pa},z0={RepeatWrapping:bh,ClampToEdgeWrapping:rn,MirroredRepeatWrapping:Mh},U0={NearestFilter:Ze,NearestMipmapNearestFilter:xm,NearestMipmapLinearFilter:Zo,LinearFilter:ke,LinearMipmapNearestFilter:oh,LinearMipmapLinearFilter:Un};class P2 extends Oi{constructor(t){super(t),this.isImageBitmapLoader=!0,typeof createImageBitmap>"u"&&console.warn("THREE.ImageBitmapLoader: createImageBitmap() not supported."),typeof fetch>"u"&&console.warn("THREE.ImageBitmapLoader: fetch() not supported."),this.options={premultiplyAlpha:"none"}}setOptions(t){return this.options=t,this}load(t,e,i,n){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=this,o=us.get(t);if(o!==void 0){if(s.manager.itemStart(t),o.then){o.then(l=>{e&&e(l),s.manager.itemEnd(t)}).catch(l=>{n&&n(l)});return}return setTimeout(function(){e&&e(o),s.manager.itemEnd(t)},0),o}const a={};a.credentials=this.crossOrigin==="anonymous"?"same-origin":"include",a.headers=this.requestHeader;const h=fetch(t,a).then(function(l){return l.blob()}).then(function(l){return createImageBitmap(l,Object.assign(s.options,{colorSpaceConversion:"none"}))}).then(function(l){return us.add(t,l),e&&e(l),s.manager.itemEnd(t),l}).catch(function(l){n&&n(l),us.remove(t),s.manager.itemError(t),s.manager.itemEnd(t)});us.add(t,h),s.manager.itemStart(t)}}let mc;class ag{static getContext(){return mc===void 0&&(mc=new(window.AudioContext||window.webkitAudioContext)),mc}static setContext(t){mc=t}}class I2 extends Oi{constructor(t){super(t)}load(t,e,i,n){const s=this,o=new ys(this.manager);o.setResponseType("arraybuffer"),o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(h){try{const l=h.slice(0);ag.getContext().decodeAudioData(l,function(u){e(u)}).catch(a)}catch(l){a(l)}},i,n);function a(h){n?n(h):console.error(h),s.manager.itemError(t)}}}const N0=new Ft,B0=new Ft,ur=new Ft;class L2{constructor(){this.type="StereoCamera",this.aspect=1,this.eyeSep=.064,this.cameraL=new Ye,this.cameraL.layers.enable(1),this.cameraL.matrixAutoUpdate=!1,this.cameraR=new Ye,this.cameraR.layers.enable(2),this.cameraR.matrixAutoUpdate=!1,this._cache={focus:null,fov:null,aspect:null,near:null,far:null,zoom:null,eyeSep:null}}update(t){const e=this._cache;if(e.focus!==t.focus||e.fov!==t.fov||e.aspect!==t.aspect*this.aspect||e.near!==t.near||e.far!==t.far||e.zoom!==t.zoom||e.eyeSep!==this.eyeSep){e.focus=t.focus,e.fov=t.fov,e.aspect=t.aspect*this.aspect,e.near=t.near,e.far=t.far,e.zoom=t.zoom,e.eyeSep=this.eyeSep,ur.copy(t.projectionMatrix);const n=e.eyeSep/2,s=n*e.near/e.focus,o=e.near*Math.tan(Dr*e.fov*.5)/e.zoom;let a,h;B0.elements[12]=-n,N0.elements[12]=n,a=-o*e.aspect+s,h=o*e.aspect+s,ur.elements[0]=2*e.near/(h-a),ur.elements[8]=(h+a)/(h-a),this.cameraL.projectionMatrix.copy(ur),a=-o*e.aspect-s,h=o*e.aspect-s,ur.elements[0]=2*e.near/(h-a),ur.elements[8]=(h+a)/(h-a),this.cameraR.projectionMatrix.copy(ur)}this.cameraL.matrixWorld.copy(t.matrixWorld).multiply(B0),this.cameraR.matrixWorld.copy(t.matrixWorld).multiply(N0)}}class hg{constructor(t=!0){this.autoStart=t,this.startTime=0,this.oldTime=0,this.elapsedTime=0,this.running=!1}start(){this.startTime=k0(),this.oldTime=this.startTime,this.elapsedTime=0,this.running=!0}stop(){this.getElapsedTime(),this.running=!1,this.autoStart=!1}getElapsedTime(){return this.getDelta(),this.elapsedTime}getDelta(){let t=0;if(this.autoStart&&!this.running)return this.start(),0;if(this.running){const e=k0();t=(e-this.oldTime)/1e3,this.oldTime=e,this.elapsedTime+=t}return t}}function k0(){return(typeof performance>"u"?Date:performance).now()}const dr=new R,V0=new Ii,D2=new R,fr=new R;class O2 extends pe{constructor(){super(),this.type="AudioListener",this.context=ag.getContext(),this.gain=this.context.createGain(),this.gain.connect(this.context.destination),this.filter=null,this.timeDelta=0,this._clock=new hg}getInput(){return this.gain}removeFilter(){return this.filter!==null&&(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination),this.gain.connect(this.context.destination),this.filter=null),this}getFilter(){return this.filter}setFilter(t){return this.filter!==null?(this.gain.disconnect(this.filter),this.filter.disconnect(this.context.destination)):this.gain.disconnect(this.context.destination),this.filter=t,this.gain.connect(this.filter),this.filter.connect(this.context.destination),this}getMasterVolume(){return this.gain.gain.value}setMasterVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}updateMatrixWorld(t){super.updateMatrixWorld(t);const e=this.context.listener,i=this.up;if(this.timeDelta=this._clock.getDelta(),this.matrixWorld.decompose(dr,V0,D2),fr.set(0,0,-1).applyQuaternion(V0),e.positionX){const n=this.context.currentTime+this.timeDelta;e.positionX.linearRampToValueAtTime(dr.x,n),e.positionY.linearRampToValueAtTime(dr.y,n),e.positionZ.linearRampToValueAtTime(dr.z,n),e.forwardX.linearRampToValueAtTime(fr.x,n),e.forwardY.linearRampToValueAtTime(fr.y,n),e.forwardZ.linearRampToValueAtTime(fr.z,n),e.upX.linearRampToValueAtTime(i.x,n),e.upY.linearRampToValueAtTime(i.y,n),e.upZ.linearRampToValueAtTime(i.z,n)}else e.setPosition(dr.x,dr.y,dr.z),e.setOrientation(fr.x,fr.y,fr.z,i.x,i.y,i.z)}}class Db extends pe{constructor(t){super(),this.type="Audio",this.listener=t,this.context=t.context,this.gain=this.context.createGain(),this.gain.connect(t.getInput()),this.autoplay=!1,this.buffer=null,this.detune=0,this.loop=!1,this.loopStart=0,this.loopEnd=0,this.offset=0,this.duration=void 0,this.playbackRate=1,this.isPlaying=!1,this.hasPlaybackControl=!0,this.source=null,this.sourceType="empty",this._startedAt=0,this._progress=0,this._connected=!1,this.filters=[]}getOutput(){return this.gain}setNodeSource(t){return this.hasPlaybackControl=!1,this.sourceType="audioNode",this.source=t,this.connect(),this}setMediaElementSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaNode",this.source=this.context.createMediaElementSource(t),this.connect(),this}setMediaStreamSource(t){return this.hasPlaybackControl=!1,this.sourceType="mediaStreamNode",this.source=this.context.createMediaStreamSource(t),this.connect(),this}setBuffer(t){return this.buffer=t,this.sourceType="buffer",this.autoplay&&this.play(),this}play(t=0){if(this.isPlaying===!0){console.warn("THREE.Audio: Audio is already playing.");return}if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}this._startedAt=this.context.currentTime+t;const e=this.context.createBufferSource();return e.buffer=this.buffer,e.loop=this.loop,e.loopStart=this.loopStart,e.loopEnd=this.loopEnd,e.onended=this.onEnded.bind(this),e.start(this._startedAt,this._progress+this.offset,this.duration),this.isPlaying=!0,this.source=e,this.setDetune(this.detune),this.setPlaybackRate(this.playbackRate),this.connect()}pause(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.isPlaying===!0&&(this._progress+=Math.max(this.context.currentTime-this._startedAt,0)*this.playbackRate,this.loop===!0&&(this._progress=this._progress%(this.duration||this.buffer.duration)),this.source.stop(),this.source.onended=null,this.isPlaying=!1),this}stop(){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this._progress=0,this.source!==null&&(this.source.stop(),this.source.onended=null),this.isPlaying=!1,this}connect(){if(this.filters.length>0){this.source.connect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].connect(this.filters[t]);this.filters[this.filters.length-1].connect(this.getOutput())}else this.source.connect(this.getOutput());return this._connected=!0,this}disconnect(){if(this._connected!==!1){if(this.filters.length>0){this.source.disconnect(this.filters[0]);for(let t=1,e=this.filters.length;t<e;t++)this.filters[t-1].disconnect(this.filters[t]);this.filters[this.filters.length-1].disconnect(this.getOutput())}else this.source.disconnect(this.getOutput());return this._connected=!1,this}}getFilters(){return this.filters}setFilters(t){return t||(t=[]),this._connected===!0?(this.disconnect(),this.filters=t.slice(),this.connect()):this.filters=t.slice(),this}setDetune(t){return this.detune=t,this.isPlaying===!0&&this.source.detune!==void 0&&this.source.detune.setTargetAtTime(this.detune,this.context.currentTime,.01),this}getDetune(){return this.detune}getFilter(){return this.getFilters()[0]}setFilter(t){return this.setFilters(t?[t]:[])}setPlaybackRate(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.playbackRate=t,this.isPlaying===!0&&this.source.playbackRate.setTargetAtTime(this.playbackRate,this.context.currentTime,.01),this}getPlaybackRate(){return this.playbackRate}onEnded(){this.isPlaying=!1}getLoop(){return this.hasPlaybackControl===!1?(console.warn("THREE.Audio: this Audio has no playback control."),!1):this.loop}setLoop(t){if(this.hasPlaybackControl===!1){console.warn("THREE.Audio: this Audio has no playback control.");return}return this.loop=t,this.isPlaying===!0&&(this.source.loop=this.loop),this}setLoopStart(t){return this.loopStart=t,this}setLoopEnd(t){return this.loopEnd=t,this}getVolume(){return this.gain.gain.value}setVolume(t){return this.gain.gain.setTargetAtTime(t,this.context.currentTime,.01),this}}const pr=new R,H0=new Ii,F2=new R,mr=new R;class z2 extends Db{constructor(t){super(t),this.panner=this.context.createPanner(),this.panner.panningModel="HRTF",this.panner.connect(this.gain)}connect(){super.connect(),this.panner.connect(this.gain)}disconnect(){super.disconnect(),this.panner.disconnect(this.gain)}getOutput(){return this.panner}getRefDistance(){return this.panner.refDistance}setRefDistance(t){return this.panner.refDistance=t,this}getRolloffFactor(){return this.panner.rolloffFactor}setRolloffFactor(t){return this.panner.rolloffFactor=t,this}getDistanceModel(){return this.panner.distanceModel}setDistanceModel(t){return this.panner.distanceModel=t,this}getMaxDistance(){return this.panner.maxDistance}setMaxDistance(t){return this.panner.maxDistance=t,this}setDirectionalCone(t,e,i){return this.panner.coneInnerAngle=t,this.panner.coneOuterAngle=e,this.panner.coneOuterGain=i,this}updateMatrixWorld(t){if(super.updateMatrixWorld(t),this.hasPlaybackControl===!0&&this.isPlaying===!1)return;this.matrixWorld.decompose(pr,H0,F2),mr.set(0,0,1).applyQuaternion(H0);const e=this.panner;if(e.positionX){const i=this.context.currentTime+this.listener.timeDelta;e.positionX.linearRampToValueAtTime(pr.x,i),e.positionY.linearRampToValueAtTime(pr.y,i),e.positionZ.linearRampToValueAtTime(pr.z,i),e.orientationX.linearRampToValueAtTime(mr.x,i),e.orientationY.linearRampToValueAtTime(mr.y,i),e.orientationZ.linearRampToValueAtTime(mr.z,i)}else e.setPosition(pr.x,pr.y,pr.z),e.setOrientation(mr.x,mr.y,mr.z)}}class U2{constructor(t,e=2048){this.analyser=t.context.createAnalyser(),this.analyser.fftSize=e,this.data=new Uint8Array(this.analyser.frequencyBinCount),t.getOutput().connect(this.analyser)}getFrequencyData(){return this.analyser.getByteFrequencyData(this.data),this.data}getAverageFrequency(){let t=0;const e=this.getFrequencyData();for(let i=0;i<e.length;i++)t+=e[i];return t/e.length}}class Ob{constructor(t,e,i){this.binding=t,this.valueSize=i;let n,s,o;switch(e){case"quaternion":n=this._slerp,s=this._slerpAdditive,o=this._setAdditiveIdentityQuaternion,this.buffer=new Float64Array(i*6),this._workIndex=5;break;case"string":case"bool":n=this._select,s=this._select,o=this._setAdditiveIdentityOther,this.buffer=new Array(i*5);break;default:n=this._lerp,s=this._lerpAdditive,o=this._setAdditiveIdentityNumeric,this.buffer=new Float64Array(i*5)}this._mixBufferRegion=n,this._mixBufferRegionAdditive=s,this._setIdentity=o,this._origIndex=3,this._addIndex=4,this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,this.useCount=0,this.referenceCount=0}accumulate(t,e){const i=this.buffer,n=this.valueSize,s=t*n+n;let o=this.cumulativeWeight;if(o===0){for(let a=0;a!==n;++a)i[s+a]=i[a];o=e}else{o+=e;const a=e/o;this._mixBufferRegion(i,s,0,a,n)}this.cumulativeWeight=o}accumulateAdditive(t){const e=this.buffer,i=this.valueSize,n=i*this._addIndex;this.cumulativeWeightAdditive===0&&this._setIdentity(),this._mixBufferRegionAdditive(e,n,0,t,i),this.cumulativeWeightAdditive+=t}apply(t){const e=this.valueSize,i=this.buffer,n=t*e+e,s=this.cumulativeWeight,o=this.cumulativeWeightAdditive,a=this.binding;if(this.cumulativeWeight=0,this.cumulativeWeightAdditive=0,s<1){const h=e*this._origIndex;this._mixBufferRegion(i,n,h,1-s,e)}o>0&&this._mixBufferRegionAdditive(i,n,this._addIndex*e,1,e);for(let h=e,l=e+e;h!==l;++h)if(i[h]!==i[h+e]){a.setValue(i,n);break}}saveOriginalState(){const t=this.binding,e=this.buffer,i=this.valueSize,n=i*this._origIndex;t.getValue(e,n);for(let s=i,o=n;s!==o;++s)e[s]=e[n+s%i];this._setIdentity(),this.cumulativeWeight=0,this.cumulativeWeightAdditive=0}restoreOriginalState(){const t=this.valueSize*3;this.binding.setValue(this.buffer,t)}_setAdditiveIdentityNumeric(){const t=this._addIndex*this.valueSize,e=t+this.valueSize;for(let i=t;i<e;i++)this.buffer[i]=0}_setAdditiveIdentityQuaternion(){this._setAdditiveIdentityNumeric(),this.buffer[this._addIndex*this.valueSize+3]=1}_setAdditiveIdentityOther(){const t=this._origIndex*this.valueSize,e=this._addIndex*this.valueSize;for(let i=0;i<this.valueSize;i++)this.buffer[e+i]=this.buffer[t+i]}_select(t,e,i,n,s){if(n>=.5)for(let o=0;o!==s;++o)t[e+o]=t[i+o]}_slerp(t,e,i,n){Ii.slerpFlat(t,e,t,e,t,i,n)}_slerpAdditive(t,e,i,n,s){const o=this._workIndex*s;Ii.multiplyQuaternionsFlat(t,o,t,e,t,i),Ii.slerpFlat(t,e,t,e,t,o,n)}_lerp(t,e,i,n,s){const o=1-n;for(let a=0;a!==s;++a){const h=e+a;t[h]=t[h]*o+t[i+a]*n}}_lerpAdditive(t,e,i,n,s){for(let o=0;o!==s;++o){const a=e+o;t[a]=t[a]+t[i+o]*n}}}const lg="\\[\\]\\.:\\/",N2=new RegExp("["+lg+"]","g"),cg="[^"+lg+"]",B2="[^"+lg.replace("\\.","")+"]",k2=/((?:WC+[\/:])*)/.source.replace("WC",cg),V2=/(WCOD+)?/.source.replace("WCOD",B2),H2=/(?:\.(WC+)(?:\[(.+)\])?)?/.source.replace("WC",cg),G2=/\.(WC+)(?:\[(.+)\])?/.source.replace("WC",cg),W2=new RegExp("^"+k2+V2+H2+G2+"$"),$2=["material","materials","bones","map"];class X2{constructor(t,e,i){const n=i||ne.parseTrackName(e);this._targetGroup=t,this._bindings=t.subscribe_(e,n)}getValue(t,e){this.bind();const i=this._targetGroup.nCachedObjects_,n=this._bindings[i];n!==void 0&&n.getValue(t,e)}setValue(t,e){const i=this._bindings;for(let n=this._targetGroup.nCachedObjects_,s=i.length;n!==s;++n)i[n].setValue(t,e)}bind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].bind()}unbind(){const t=this._bindings;for(let e=this._targetGroup.nCachedObjects_,i=t.length;e!==i;++e)t[e].unbind()}}class ne{constructor(t,e,i){this.path=e,this.parsedPath=i||ne.parseTrackName(e),this.node=ne.findNode(t,this.parsedPath.nodeName),this.rootNode=t,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}static create(t,e,i){return t&&t.isAnimationObjectGroup?new ne.Composite(t,e,i):new ne(t,e,i)}static sanitizeNodeName(t){return t.replace(/\s/g,"_").replace(N2,"")}static parseTrackName(t){const e=W2.exec(t);if(e===null)throw new Error("PropertyBinding: Cannot parse trackName: "+t);const i={nodeName:e[2],objectName:e[3],objectIndex:e[4],propertyName:e[5],propertyIndex:e[6]},n=i.nodeName&&i.nodeName.lastIndexOf(".");if(n!==void 0&&n!==-1){const s=i.nodeName.substring(n+1);$2.indexOf(s)!==-1&&(i.nodeName=i.nodeName.substring(0,n),i.objectName=s)}if(i.propertyName===null||i.propertyName.length===0)throw new Error("PropertyBinding: can not parse propertyName from trackName: "+t);return i}static findNode(t,e){if(e===void 0||e===""||e==="."||e===-1||e===t.name||e===t.uuid)return t;if(t.skeleton){const i=t.skeleton.getBoneByName(e);if(i!==void 0)return i}if(t.children){const i=function(s){for(let o=0;o<s.length;o++){const a=s[o];if(a.name===e||a.uuid===e)return a;const h=i(a.children);if(h)return h}return null},n=i(t.children);if(n)return n}return null}_getValue_unavailable(){}_setValue_unavailable(){}_getValue_direct(t,e){t[e]=this.targetObject[this.propertyName]}_getValue_array(t,e){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)t[e++]=i[n]}_getValue_arrayElement(t,e){t[e]=this.resolvedProperty[this.propertyIndex]}_getValue_toArray(t,e){this.resolvedProperty.toArray(t,e)}_setValue_direct(t,e){this.targetObject[this.propertyName]=t[e]}_setValue_direct_setNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.needsUpdate=!0}_setValue_direct_setMatrixWorldNeedsUpdate(t,e){this.targetObject[this.propertyName]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_array(t,e){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=t[e++]}_setValue_array_setNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=t[e++];this.targetObject.needsUpdate=!0}_setValue_array_setMatrixWorldNeedsUpdate(t,e){const i=this.resolvedProperty;for(let n=0,s=i.length;n!==s;++n)i[n]=t[e++];this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_arrayElement(t,e){this.resolvedProperty[this.propertyIndex]=t[e]}_setValue_arrayElement_setNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.needsUpdate=!0}_setValue_arrayElement_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty[this.propertyIndex]=t[e],this.targetObject.matrixWorldNeedsUpdate=!0}_setValue_fromArray(t,e){this.resolvedProperty.fromArray(t,e)}_setValue_fromArray_setNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.needsUpdate=!0}_setValue_fromArray_setMatrixWorldNeedsUpdate(t,e){this.resolvedProperty.fromArray(t,e),this.targetObject.matrixWorldNeedsUpdate=!0}_getValue_unbound(t,e){this.bind(),this.getValue(t,e)}_setValue_unbound(t,e){this.bind(),this.setValue(t,e)}bind(){let t=this.node;const e=this.parsedPath,i=e.objectName,n=e.propertyName;let s=e.propertyIndex;if(t||(t=ne.findNode(this.rootNode,e.nodeName),this.node=t),this.getValue=this._getValue_unavailable,this.setValue=this._setValue_unavailable,!t){console.warn("THREE.PropertyBinding: No target node found for track: "+this.path+".");return}if(i){let l=e.objectIndex;switch(i){case"materials":if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.materials){console.error("THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.",this);return}t=t.material.materials;break;case"bones":if(!t.skeleton){console.error("THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.",this);return}t=t.skeleton.bones;for(let c=0;c<t.length;c++)if(t[c].name===l){l=c;break}break;case"map":if("map"in t){t=t.map;break}if(!t.material){console.error("THREE.PropertyBinding: Can not bind to material as node does not have a material.",this);return}if(!t.material.map){console.error("THREE.PropertyBinding: Can not bind to material.map as node.material does not have a map.",this);return}t=t.material.map;break;default:if(t[i]===void 0){console.error("THREE.PropertyBinding: Can not bind to objectName of node undefined.",this);return}t=t[i]}if(l!==void 0){if(t[l]===void 0){console.error("THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.",this,t);return}t=t[l]}}const o=t[n];if(o===void 0){const l=e.nodeName;console.error("THREE.PropertyBinding: Trying to update property for track: "+l+"."+n+" but it wasn't found.",t);return}let a=this.Versioning.None;this.targetObject=t,t.needsUpdate!==void 0?a=this.Versioning.NeedsUpdate:t.matrixWorldNeedsUpdate!==void 0&&(a=this.Versioning.MatrixWorldNeedsUpdate);let h=this.BindingType.Direct;if(s!==void 0){if(n==="morphTargetInfluences"){if(!t.geometry){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.",this);return}if(!t.geometry.morphAttributes){console.error("THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.",this);return}t.morphTargetDictionary[s]!==void 0&&(s=t.morphTargetDictionary[s])}h=this.BindingType.ArrayElement,this.resolvedProperty=o,this.propertyIndex=s}else o.fromArray!==void 0&&o.toArray!==void 0?(h=this.BindingType.HasFromToArray,this.resolvedProperty=o):Array.isArray(o)?(h=this.BindingType.EntireArray,this.resolvedProperty=o):this.propertyName=n;this.getValue=this.GetterByBindingType[h],this.setValue=this.SetterByBindingTypeAndVersioning[h][a]}unbind(){this.node=null,this.getValue=this._getValue_unbound,this.setValue=this._setValue_unbound}}ne.Composite=X2;ne.prototype.BindingType={Direct:0,EntireArray:1,ArrayElement:2,HasFromToArray:3};ne.prototype.Versioning={None:0,NeedsUpdate:1,MatrixWorldNeedsUpdate:2};ne.prototype.GetterByBindingType=[ne.prototype._getValue_direct,ne.prototype._getValue_array,ne.prototype._getValue_arrayElement,ne.prototype._getValue_toArray];ne.prototype.SetterByBindingTypeAndVersioning=[[ne.prototype._setValue_direct,ne.prototype._setValue_direct_setNeedsUpdate,ne.prototype._setValue_direct_setMatrixWorldNeedsUpdate],[ne.prototype._setValue_array,ne.prototype._setValue_array_setNeedsUpdate,ne.prototype._setValue_array_setMatrixWorldNeedsUpdate],[ne.prototype._setValue_arrayElement,ne.prototype._setValue_arrayElement_setNeedsUpdate,ne.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate],[ne.prototype._setValue_fromArray,ne.prototype._setValue_fromArray_setNeedsUpdate,ne.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];class q2{constructor(){this.isAnimationObjectGroup=!0,this.uuid=Yi(),this._objects=Array.prototype.slice.call(arguments),this.nCachedObjects_=0;const t={};this._indicesByUUID=t;for(let i=0,n=arguments.length;i!==n;++i)t[arguments[i].uuid]=i;this._paths=[],this._parsedPaths=[],this._bindings=[],this._bindingsIndicesByPath={};const e=this;this.stats={objects:{get total(){return e._objects.length},get inUse(){return this.total-e.nCachedObjects_}},get bindingsPerObject(){return e._bindings.length}}}add(){const t=this._objects,e=this._indicesByUUID,i=this._paths,n=this._parsedPaths,s=this._bindings,o=s.length;let a,h=t.length,l=this.nCachedObjects_;for(let c=0,u=arguments.length;c!==u;++c){const d=arguments[c],f=d.uuid;let p=e[f];if(p===void 0){p=h++,e[f]=p,t.push(d);for(let _=0,g=o;_!==g;++_)s[_].push(new ne(d,i[_],n[_]))}else if(p<l){a=t[p];const _=--l,g=t[_];e[g.uuid]=p,t[p]=g,e[f]=_,t[_]=d;for(let m=0,x=o;m!==x;++m){const y=s[m],v=y[_];let E=y[p];y[p]=v,E===void 0&&(E=new ne(d,i[m],n[m])),y[_]=E}}else t[p]!==a&&console.error("THREE.AnimationObjectGroup: Different objects with the same UUID detected. Clean the caches or recreate your infrastructure when reloading scenes.")}this.nCachedObjects_=l}remove(){const t=this._objects,e=this._indicesByUUID,i=this._bindings,n=i.length;let s=this.nCachedObjects_;for(let o=0,a=arguments.length;o!==a;++o){const h=arguments[o],l=h.uuid,c=e[l];if(c!==void 0&&c>=s){const u=s++,d=t[u];e[d.uuid]=c,t[c]=d,e[l]=u,t[u]=h;for(let f=0,p=n;f!==p;++f){const _=i[f],g=_[u],m=_[c];_[c]=g,_[u]=m}}}this.nCachedObjects_=s}uncache(){const t=this._objects,e=this._indicesByUUID,i=this._bindings,n=i.length;let s=this.nCachedObjects_,o=t.length;for(let a=0,h=arguments.length;a!==h;++a){const l=arguments[a],c=l.uuid,u=e[c];if(u!==void 0)if(delete e[c],u<s){const d=--s,f=t[d],p=--o,_=t[p];e[f.uuid]=u,t[u]=f,e[_.uuid]=d,t[d]=_,t.pop();for(let g=0,m=n;g!==m;++g){const x=i[g],y=x[d],v=x[p];x[u]=y,x[d]=v,x.pop()}}else{const d=--o,f=t[d];d>0&&(e[f.uuid]=u),t[u]=f,t.pop();for(let p=0,_=n;p!==_;++p){const g=i[p];g[u]=g[d],g.pop()}}}this.nCachedObjects_=s}subscribe_(t,e){const i=this._bindingsIndicesByPath;let n=i[t];const s=this._bindings;if(n!==void 0)return s[n];const o=this._paths,a=this._parsedPaths,h=this._objects,l=h.length,c=this.nCachedObjects_,u=new Array(l);n=s.length,i[t]=n,o.push(t),a.push(e),s.push(u);for(let d=c,f=h.length;d!==f;++d){const p=h[d];u[d]=new ne(p,t,e)}return u}unsubscribe_(t){const e=this._bindingsIndicesByPath,i=e[t];if(i!==void 0){const n=this._paths,s=this._parsedPaths,o=this._bindings,a=o.length-1,h=o[a],l=t[a];e[l]=i,o[i]=h,o.pop(),s[i]=s[a],s.pop(),n[i]=n[a],n.pop()}}}class Fb{constructor(t,e,i=null,n=e.blendMode){this._mixer=t,this._clip=e,this._localRoot=i,this.blendMode=n;const s=e.tracks,o=s.length,a=new Array(o),h={endingStart:Er,endingEnd:Er};for(let l=0;l!==o;++l){const c=s[l].createInterpolant(null);a[l]=c,c.settings=h}this._interpolantSettings=h,this._interpolants=a,this._propertyBindings=new Array(o),this._cacheIndex=null,this._byClipCacheIndex=null,this._timeScaleInterpolant=null,this._weightInterpolant=null,this.loop=lv,this._loopCount=-1,this._startTime=null,this.time=0,this.timeScale=1,this._effectiveTimeScale=1,this.weight=1,this._effectiveWeight=1,this.repetitions=1/0,this.paused=!1,this.enabled=!0,this.clampWhenFinished=!1,this.zeroSlopeAtStart=!0,this.zeroSlopeAtEnd=!0}play(){return this._mixer._activateAction(this),this}stop(){return this._mixer._deactivateAction(this),this.reset()}reset(){return this.paused=!1,this.enabled=!0,this.time=0,this._loopCount=-1,this._startTime=null,this.stopFading().stopWarping()}isRunning(){return this.enabled&&!this.paused&&this.timeScale!==0&&this._startTime===null&&this._mixer._isActiveAction(this)}isScheduled(){return this._mixer._isActiveAction(this)}startAt(t){return this._startTime=t,this}setLoop(t,e){return this.loop=t,this.repetitions=e,this}setEffectiveWeight(t){return this.weight=t,this._effectiveWeight=this.enabled?t:0,this.stopFading()}getEffectiveWeight(){return this._effectiveWeight}fadeIn(t){return this._scheduleFading(t,0,1)}fadeOut(t){return this._scheduleFading(t,1,0)}crossFadeFrom(t,e,i){if(t.fadeOut(e),this.fadeIn(e),i){const n=this._clip.duration,s=t._clip.duration,o=s/n,a=n/s;t.warp(1,o,e),this.warp(a,1,e)}return this}crossFadeTo(t,e,i){return t.crossFadeFrom(this,e,i)}stopFading(){const t=this._weightInterpolant;return t!==null&&(this._weightInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}setEffectiveTimeScale(t){return this.timeScale=t,this._effectiveTimeScale=this.paused?0:t,this.stopWarping()}getEffectiveTimeScale(){return this._effectiveTimeScale}setDuration(t){return this.timeScale=this._clip.duration/t,this.stopWarping()}syncWith(t){return this.time=t.time,this.timeScale=t.timeScale,this.stopWarping()}halt(t){return this.warp(this._effectiveTimeScale,0,t)}warp(t,e,i){const n=this._mixer,s=n.time,o=this.timeScale;let a=this._timeScaleInterpolant;a===null&&(a=n._lendControlInterpolant(),this._timeScaleInterpolant=a);const h=a.parameterPositions,l=a.sampleValues;return h[0]=s,h[1]=s+i,l[0]=t/o,l[1]=e/o,this}stopWarping(){const t=this._timeScaleInterpolant;return t!==null&&(this._timeScaleInterpolant=null,this._mixer._takeBackControlInterpolant(t)),this}getMixer(){return this._mixer}getClip(){return this._clip}getRoot(){return this._localRoot||this._mixer._root}_update(t,e,i,n){if(!this.enabled){this._updateWeight(t);return}const s=this._startTime;if(s!==null){const h=(t-s)*i;h<0||i===0?e=0:(this._startTime=null,e=i*h)}e*=this._updateTimeScale(t);const o=this._updateTime(e),a=this._updateWeight(t);if(a>0){const h=this._interpolants,l=this._propertyBindings;switch(this.blendMode){case Rm:for(let c=0,u=h.length;c!==u;++c)h[c].evaluate(o),l[c].accumulateAdditive(a);break;case ld:default:for(let c=0,u=h.length;c!==u;++c)h[c].evaluate(o),l[c].accumulate(n,a)}}}_updateWeight(t){let e=0;if(this.enabled){e=this.weight;const i=this._weightInterpolant;if(i!==null){const n=i.evaluate(t)[0];e*=n,t>i.parameterPositions[1]&&(this.stopFading(),n===0&&(this.enabled=!1))}}return this._effectiveWeight=e,e}_updateTimeScale(t){let e=0;if(!this.paused){e=this.timeScale;const i=this._timeScaleInterpolant;if(i!==null){const n=i.evaluate(t)[0];e*=n,t>i.parameterPositions[1]&&(this.stopWarping(),e===0?this.paused=!0:this.timeScale=e)}}return this._effectiveTimeScale=e,e}_updateTime(t){const e=this._clip.duration,i=this.loop;let n=this.time+t,s=this._loopCount;const o=i===cv;if(t===0)return s===-1?n:o&&(s&1)===1?e-n:n;if(i===hv){s===-1&&(this._loopCount=0,this._setEndings(!0,!0,!1));t:{if(n>=e)n=e;else if(n<0)n=0;else{this.time=n;break t}this.clampWhenFinished?this.paused=!0:this.enabled=!1,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:t<0?-1:1})}}else{if(s===-1&&(t>=0?(s=0,this._setEndings(!0,this.repetitions===0,o)):this._setEndings(this.repetitions===0,!0,o)),n>=e||n<0){const a=Math.floor(n/e);n-=e*a,s+=Math.abs(a);const h=this.repetitions-s;if(h<=0)this.clampWhenFinished?this.paused=!0:this.enabled=!1,n=t>0?e:0,this.time=n,this._mixer.dispatchEvent({type:"finished",action:this,direction:t>0?1:-1});else{if(h===1){const l=t<0;this._setEndings(l,!l,o)}else this._setEndings(!1,!1,o);this._loopCount=s,this.time=n,this._mixer.dispatchEvent({type:"loop",action:this,loopDelta:a})}}else this.time=n;if(o&&(s&1)===1)return e-n}return n}_setEndings(t,e,i){const n=this._interpolantSettings;i?(n.endingStart=Tr,n.endingEnd=Tr):(t?n.endingStart=this.zeroSlopeAtStart?Tr:Er:n.endingStart=Sh,e?n.endingEnd=this.zeroSlopeAtEnd?Tr:Er:n.endingEnd=Sh)}_scheduleFading(t,e,i){const n=this._mixer,s=n.time;let o=this._weightInterpolant;o===null&&(o=n._lendControlInterpolant(),this._weightInterpolant=o);const a=o.parameterPositions,h=o.sampleValues;return a[0]=s,h[0]=e,a[1]=s+t,h[1]=i,this}}const Y2=new Float32Array(1);class Z2 extends Gn{constructor(t){super(),this._root=t,this._initMemoryManager(),this._accuIndex=0,this.time=0,this.timeScale=1}_bindAction(t,e){const i=t._localRoot||this._root,n=t._clip.tracks,s=n.length,o=t._propertyBindings,a=t._interpolants,h=i.uuid,l=this._bindingsByRootAndName;let c=l[h];c===void 0&&(c={},l[h]=c);for(let u=0;u!==s;++u){const d=n[u],f=d.name;let p=c[f];if(p!==void 0)++p.referenceCount,o[u]=p;else{if(p=o[u],p!==void 0){p._cacheIndex===null&&(++p.referenceCount,this._addInactiveBinding(p,h,f));continue}const _=e&&e._propertyBindings[u].binding.parsedPath;p=new Ob(ne.create(i,f,_),d.ValueTypeName,d.getValueSize()),++p.referenceCount,this._addInactiveBinding(p,h,f),o[u]=p}a[u].resultBuffer=p.buffer}}_activateAction(t){if(!this._isActiveAction(t)){if(t._cacheIndex===null){const i=(t._localRoot||this._root).uuid,n=t._clip.uuid,s=this._actionsByClip[n];this._bindAction(t,s&&s.knownActions[0]),this._addInactiveAction(t,n,i)}const e=t._propertyBindings;for(let i=0,n=e.length;i!==n;++i){const s=e[i];s.useCount++===0&&(this._lendBinding(s),s.saveOriginalState())}this._lendAction(t)}}_deactivateAction(t){if(this._isActiveAction(t)){const e=t._propertyBindings;for(let i=0,n=e.length;i!==n;++i){const s=e[i];--s.useCount===0&&(s.restoreOriginalState(),this._takeBackBinding(s))}this._takeBackAction(t)}}_initMemoryManager(){this._actions=[],this._nActiveActions=0,this._actionsByClip={},this._bindings=[],this._nActiveBindings=0,this._bindingsByRootAndName={},this._controlInterpolants=[],this._nActiveControlInterpolants=0;const t=this;this.stats={actions:{get total(){return t._actions.length},get inUse(){return t._nActiveActions}},bindings:{get total(){return t._bindings.length},get inUse(){return t._nActiveBindings}},controlInterpolants:{get total(){return t._controlInterpolants.length},get inUse(){return t._nActiveControlInterpolants}}}}_isActiveAction(t){const e=t._cacheIndex;return e!==null&&e<this._nActiveActions}_addInactiveAction(t,e,i){const n=this._actions,s=this._actionsByClip;let o=s[e];if(o===void 0)o={knownActions:[t],actionByRoot:{}},t._byClipCacheIndex=0,s[e]=o;else{const a=o.knownActions;t._byClipCacheIndex=a.length,a.push(t)}t._cacheIndex=n.length,n.push(t),o.actionByRoot[i]=t}_removeInactiveAction(t){const e=this._actions,i=e[e.length-1],n=t._cacheIndex;i._cacheIndex=n,e[n]=i,e.pop(),t._cacheIndex=null;const s=t._clip.uuid,o=this._actionsByClip,a=o[s],h=a.knownActions,l=h[h.length-1],c=t._byClipCacheIndex;l._byClipCacheIndex=c,h[c]=l,h.pop(),t._byClipCacheIndex=null;const u=a.actionByRoot,d=(t._localRoot||this._root).uuid;delete u[d],h.length===0&&delete o[s],this._removeInactiveBindingsForAction(t)}_removeInactiveBindingsForAction(t){const e=t._propertyBindings;for(let i=0,n=e.length;i!==n;++i){const s=e[i];--s.referenceCount===0&&this._removeInactiveBinding(s)}}_lendAction(t){const e=this._actions,i=t._cacheIndex,n=this._nActiveActions++,s=e[n];t._cacheIndex=n,e[n]=t,s._cacheIndex=i,e[i]=s}_takeBackAction(t){const e=this._actions,i=t._cacheIndex,n=--this._nActiveActions,s=e[n];t._cacheIndex=n,e[n]=t,s._cacheIndex=i,e[i]=s}_addInactiveBinding(t,e,i){const n=this._bindingsByRootAndName,s=this._bindings;let o=n[e];o===void 0&&(o={},n[e]=o),o[i]=t,t._cacheIndex=s.length,s.push(t)}_removeInactiveBinding(t){const e=this._bindings,i=t.binding,n=i.rootNode.uuid,s=i.path,o=this._bindingsByRootAndName,a=o[n],h=e[e.length-1],l=t._cacheIndex;h._cacheIndex=l,e[l]=h,e.pop(),delete a[s],Object.keys(a).length===0&&delete o[n]}_lendBinding(t){const e=this._bindings,i=t._cacheIndex,n=this._nActiveBindings++,s=e[n];t._cacheIndex=n,e[n]=t,s._cacheIndex=i,e[i]=s}_takeBackBinding(t){const e=this._bindings,i=t._cacheIndex,n=--this._nActiveBindings,s=e[n];t._cacheIndex=n,e[n]=t,s._cacheIndex=i,e[i]=s}_lendControlInterpolant(){const t=this._controlInterpolants,e=this._nActiveControlInterpolants++;let i=t[e];return i===void 0&&(i=new Qm(new Float32Array(2),new Float32Array(2),1,Y2),i.__cacheIndex=e,t[e]=i),i}_takeBackControlInterpolant(t){const e=this._controlInterpolants,i=t.__cacheIndex,n=--this._nActiveControlInterpolants,s=e[n];t.__cacheIndex=n,e[n]=t,s.__cacheIndex=i,e[i]=s}clipAction(t,e,i){const n=e||this._root,s=n.uuid;let o=typeof t=="string"?Uh.findByName(n,t):t;const a=o!==null?o.uuid:t,h=this._actionsByClip[a];let l=null;if(i===void 0&&(o!==null?i=o.blendMode:i=ld),h!==void 0){const u=h.actionByRoot[s];if(u!==void 0&&u.blendMode===i)return u;l=h.knownActions[0],o===null&&(o=l._clip)}if(o===null)return null;const c=new Fb(this,o,e,i);return this._bindAction(c,l),this._addInactiveAction(c,a,s),c}existingAction(t,e){const i=e||this._root,n=i.uuid,s=typeof t=="string"?Uh.findByName(i,t):t,o=s?s.uuid:t,a=this._actionsByClip[o];return a!==void 0&&a.actionByRoot[n]||null}stopAllAction(){const t=this._actions,e=this._nActiveActions;for(let i=e-1;i>=0;--i)t[i].stop();return this}update(t){t*=this.timeScale;const e=this._actions,i=this._nActiveActions,n=this.time+=t,s=Math.sign(t),o=this._accuIndex^=1;for(let l=0;l!==i;++l)e[l]._update(n,t,s,o);const a=this._bindings,h=this._nActiveBindings;for(let l=0;l!==h;++l)a[l].apply(o);return this}setTime(t){this.time=0;for(let e=0;e<this._actions.length;e++)this._actions[e].time=0;return this.update(t)}getRoot(){return this._root}uncacheClip(t){const e=this._actions,i=t.uuid,n=this._actionsByClip,s=n[i];if(s!==void 0){const o=s.knownActions;for(let a=0,h=o.length;a!==h;++a){const l=o[a];this._deactivateAction(l);const c=l._cacheIndex,u=e[e.length-1];l._cacheIndex=null,l._byClipCacheIndex=null,u._cacheIndex=c,e[c]=u,e.pop(),this._removeInactiveBindingsForAction(l)}delete n[i]}}uncacheRoot(t){const e=t.uuid,i=this._actionsByClip;for(const o in i){const a=i[o].actionByRoot,h=a[e];h!==void 0&&(this._deactivateAction(h),this._removeInactiveAction(h))}const n=this._bindingsByRootAndName,s=n[e];if(s!==void 0)for(const o in s){const a=s[o];a.restoreOriginalState(),this._removeInactiveBinding(a)}}uncacheAction(t,e){const i=this.existingAction(t,e);i!==null&&(this._deactivateAction(i),this._removeInactiveAction(i))}}class ug{constructor(t){this.value=t}clone(){return new ug(this.value.clone===void 0?this.value:this.value.clone())}}let J2=0;class K2 extends Gn{constructor(){super(),this.isUniformsGroup=!0,Object.defineProperty(this,"id",{value:J2++}),this.name="",this.usage=Ch,this.uniforms=[]}add(t){return this.uniforms.push(t),this}remove(t){const e=this.uniforms.indexOf(t);return e!==-1&&this.uniforms.splice(e,1),this}setName(t){return this.name=t,this}setUsage(t){return this.usage=t,this}dispose(){return this.dispatchEvent({type:"dispose"}),this}copy(t){this.name=t.name,this.usage=t.usage;const e=t.uniforms;this.uniforms.length=0;for(let i=0,n=e.length;i<n;i++){const s=Array.isArray(e[i])?e[i]:[e[i]];for(let o=0;o<s.length;o++)this.uniforms.push(s[o].clone())}return this}clone(){return new this.constructor().copy(this)}}class Xu extends xd{constructor(t,e,i=1){super(t,e),this.isInstancedInterleavedBuffer=!0,this.meshPerAttribute=i}copy(t){return super.copy(t),this.meshPerAttribute=t.meshPerAttribute,this}clone(t){const e=super.clone(t);return e.meshPerAttribute=this.meshPerAttribute,e}toJSON(t){const e=super.toJSON(t);return e.isInstancedInterleavedBuffer=!0,e.meshPerAttribute=this.meshPerAttribute,e}}class j2{constructor(t,e,i,n,s){this.isGLBufferAttribute=!0,this.name="",this.buffer=t,this.type=e,this.itemSize=i,this.elementSize=n,this.count=s,this.version=0}set needsUpdate(t){t===!0&&this.version++}setBuffer(t){return this.buffer=t,this}setType(t,e){return this.type=t,this.elementSize=e,this}setItemSize(t){return this.itemSize=t,this}setCount(t){return this.count=t,this}}const G0=new Ft;let Q2=class{constructor(t,e,i=0,n=1/0){this.ray=new ga(t,e),this.near=i,this.far=n,this.camera=null,this.layers=new dd,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return G0.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(G0),this}intersectObject(t,e=!0,i=[]){return im(t,this,i,e),i.sort(W0),i}intersectObjects(t,e=!0,i=[]){for(let n=0,s=t.length;n<s;n++)im(t[n],this,i,e);return i.sort(W0),i}};function W0(r,t){return r.distance-t.distance}function im(r,t,e,i){let n=!0;if(r.layers.test(t.layers)&&r.raycast(t,e)===!1&&(n=!1),n===!0&&i===!0){const s=r.children;for(let o=0,a=s.length;o<a;o++)im(s[o],t,e,!0)}}class tR{constructor(t=1,e=0,i=0){return this.radius=t,this.phi=e,this.theta=i,this}set(t,e,i){return this.radius=t,this.phi=e,this.theta=i,this}copy(t){return this.radius=t.radius,this.phi=t.phi,this.theta=t.theta,this}makeSafe(){return this.phi=Math.max(1e-6,Math.min(Math.PI-1e-6,this.phi)),this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,i){return this.radius=Math.sqrt(t*t+e*e+i*i),this.radius===0?(this.theta=0,this.phi=0):(this.theta=Math.atan2(t,i),this.phi=Math.acos(Ie(e/this.radius,-1,1))),this}clone(){return new this.constructor().copy(this)}}class eR{constructor(t=1,e=0,i=0){return this.radius=t,this.theta=e,this.y=i,this}set(t,e,i){return this.radius=t,this.theta=e,this.y=i,this}copy(t){return this.radius=t.radius,this.theta=t.theta,this.y=t.y,this}setFromVector3(t){return this.setFromCartesianCoords(t.x,t.y,t.z)}setFromCartesianCoords(t,e,i){return this.radius=Math.sqrt(t*t+i*i),this.theta=Math.atan2(t,i),this.y=e,this}clone(){return new this.constructor().copy(this)}}class dg{constructor(t,e,i,n){dg.prototype.isMatrix2=!0,this.elements=[1,0,0,1],t!==void 0&&this.set(t,e,i,n)}identity(){return this.set(1,0,0,1),this}fromArray(t,e=0){for(let i=0;i<4;i++)this.elements[i]=t[i+e];return this}set(t,e,i,n){const s=this.elements;return s[0]=t,s[2]=e,s[1]=i,s[3]=n,this}}const $0=new Q;class iR{constructor(t=new Q(1/0,1/0),e=new Q(-1/0,-1/0)){this.isBox2=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=$0.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=1/0,this.max.x=this.max.y=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y}getCenter(t){return this.isEmpty()?t.set(0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,$0).distanceTo(t)}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const X0=new R,gc=new R;class zb{constructor(t=new R,e=new R){this.start=t,this.end=e}set(t,e){return this.start.copy(t),this.end.copy(e),this}copy(t){return this.start.copy(t.start),this.end.copy(t.end),this}getCenter(t){return t.addVectors(this.start,this.end).multiplyScalar(.5)}delta(t){return t.subVectors(this.end,this.start)}distanceSq(){return this.start.distanceToSquared(this.end)}distance(){return this.start.distanceTo(this.end)}at(t,e){return this.delta(e).multiplyScalar(t).add(this.start)}closestPointToPointParameter(t,e){X0.subVectors(t,this.start),gc.subVectors(this.end,this.start);const i=gc.dot(gc);let s=gc.dot(X0)/i;return e&&(s=Ie(s,0,1)),s}closestPointToPoint(t,e,i){const n=this.closestPointToPointParameter(t,e);return this.delta(i).multiplyScalar(n).add(this.start)}applyMatrix4(t){return this.start.applyMatrix4(t),this.end.applyMatrix4(t),this}equals(t){return t.start.equals(this.start)&&t.end.equals(this.end)}clone(){return new this.constructor().copy(this)}}const q0=new R;class nR extends pe{constructor(t,e){super(),this.light=t,this.matrixAutoUpdate=!1,this.color=e,this.type="SpotLightHelper";const i=new Xt,n=[0,0,0,0,0,1,0,0,0,1,0,1,0,0,0,-1,0,1,0,0,0,0,1,1,0,0,0,0,-1,1];for(let o=0,a=1,h=32;o<h;o++,a++){const l=o/h*Math.PI*2,c=a/h*Math.PI*2;n.push(Math.cos(l),Math.sin(l),1,Math.cos(c),Math.sin(c),1)}i.setAttribute("position",new Tt(n,3));const s=new Je({fog:!1,toneMapped:!1});this.cone=new ln(i,s),this.add(this.cone),this.update()}dispose(){this.cone.geometry.dispose(),this.cone.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),this.parent?(this.parent.updateWorldMatrix(!0),this.matrix.copy(this.parent.matrixWorld).invert().multiply(this.light.matrixWorld)):this.matrix.copy(this.light.matrixWorld),this.matrixWorld.copy(this.light.matrixWorld);const t=this.light.distance?this.light.distance:1e3,e=t*Math.tan(this.light.angle);this.cone.scale.set(e,e,t),q0.setFromMatrixPosition(this.light.target.matrixWorld),this.cone.lookAt(q0),this.color!==void 0?this.cone.material.color.set(this.color):this.cone.material.color.copy(this.light.color)}}const Ds=new R,_c=new Ft,Kf=new Ft;class sR extends ln{constructor(t){const e=Ub(t),i=new Xt,n=[],s=[],o=new vt(0,0,1),a=new vt(0,1,0);for(let l=0;l<e.length;l++){const c=e[l];c.parent&&c.parent.isBone&&(n.push(0,0,0),n.push(0,0,0),s.push(o.r,o.g,o.b),s.push(a.r,a.g,a.b))}i.setAttribute("position",new Tt(n,3)),i.setAttribute("color",new Tt(s,3));const h=new Je({vertexColors:!0,depthTest:!1,depthWrite:!1,toneMapped:!1,transparent:!0});super(i,h),this.isSkeletonHelper=!0,this.type="SkeletonHelper",this.root=t,this.bones=e,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1}updateMatrixWorld(t){const e=this.bones,i=this.geometry,n=i.getAttribute("position");Kf.copy(this.root.matrixWorld).invert();for(let s=0,o=0;s<e.length;s++){const a=e[s];a.parent&&a.parent.isBone&&(_c.multiplyMatrices(Kf,a.matrixWorld),Ds.setFromMatrixPosition(_c),n.setXYZ(o,Ds.x,Ds.y,Ds.z),_c.multiplyMatrices(Kf,a.parent.matrixWorld),Ds.setFromMatrixPosition(_c),n.setXYZ(o+1,Ds.x,Ds.y,Ds.z),o+=2)}i.getAttribute("position").needsUpdate=!0,super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose()}}function Ub(r){const t=[];r.isBone===!0&&t.push(r);for(let e=0;e<r.children.length;e++)t.push.apply(t,Ub(r.children[e]));return t}class rR extends ge{constructor(t,e,i){const n=new sa(e,4,2),s=new Oe({wireframe:!0,fog:!1,toneMapped:!1});super(n,s),this.light=t,this.color=i,this.type="PointLightHelper",this.matrix=this.light.matrixWorld,this.matrixAutoUpdate=!1,this.update()}dispose(){this.geometry.dispose(),this.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.color!==void 0?this.material.color.set(this.color):this.material.color.copy(this.light.color)}}const oR=new R,Y0=new vt,Z0=new vt;class aR extends pe{constructor(t,e,i){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="HemisphereLightHelper";const n=new Qh(e);n.rotateY(Math.PI*.5),this.material=new Oe({wireframe:!0,fog:!1,toneMapped:!1}),this.color===void 0&&(this.material.vertexColors=!0);const s=n.getAttribute("position"),o=new Float32Array(s.count*3);n.setAttribute("color",new _e(o,3)),this.add(new ge(n,this.material)),this.update()}dispose(){this.children[0].geometry.dispose(),this.children[0].material.dispose()}update(){const t=this.children[0];if(this.color!==void 0)this.material.color.set(this.color);else{const e=t.geometry.getAttribute("color");Y0.copy(this.light.color),Z0.copy(this.light.groundColor);for(let i=0,n=e.count;i<n;i++){const s=i<n/2?Y0:Z0;e.setXYZ(i,s.r,s.g,s.b)}e.needsUpdate=!0}this.light.updateWorldMatrix(!0,!1),t.lookAt(oR.setFromMatrixPosition(this.light.matrixWorld).negate())}}class Nb extends ln{constructor(t=10,e=10,i=4473924,n=8947848){i=new vt(i),n=new vt(n);const s=e/2,o=t/e,a=t/2,h=[],l=[];for(let d=0,f=0,p=-a;d<=e;d++,p+=o){h.push(-a,0,p,a,0,p),h.push(p,0,-a,p,0,a);const _=d===s?i:n;_.toArray(l,f),f+=3,_.toArray(l,f),f+=3,_.toArray(l,f),f+=3,_.toArray(l,f),f+=3}const c=new Xt;c.setAttribute("position",new Tt(h,3)),c.setAttribute("color",new Tt(l,3));const u=new Je({vertexColors:!0,toneMapped:!1});super(c,u),this.type="GridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}class hR extends ln{constructor(t=10,e=16,i=8,n=64,s=4473924,o=8947848){s=new vt(s),o=new vt(o);const a=[],h=[];if(e>1)for(let u=0;u<e;u++){const d=u/e*(Math.PI*2),f=Math.sin(d)*t,p=Math.cos(d)*t;a.push(0,0,0),a.push(f,0,p);const _=u&1?s:o;h.push(_.r,_.g,_.b),h.push(_.r,_.g,_.b)}for(let u=0;u<i;u++){const d=u&1?s:o,f=t-t/i*u;for(let p=0;p<n;p++){let _=p/n*(Math.PI*2),g=Math.sin(_)*f,m=Math.cos(_)*f;a.push(g,0,m),h.push(d.r,d.g,d.b),_=(p+1)/n*(Math.PI*2),g=Math.sin(_)*f,m=Math.cos(_)*f,a.push(g,0,m),h.push(d.r,d.g,d.b)}}const l=new Xt;l.setAttribute("position",new Tt(a,3)),l.setAttribute("color",new Tt(h,3));const c=new Je({vertexColors:!0,toneMapped:!1});super(l,c),this.type="PolarGridHelper"}dispose(){this.geometry.dispose(),this.material.dispose()}}const J0=new R,yc=new R,K0=new R;class lR extends pe{constructor(t,e,i){super(),this.light=t,this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.color=i,this.type="DirectionalLightHelper",e===void 0&&(e=1);let n=new Xt;n.setAttribute("position",new Tt([-e,e,0,e,e,0,e,-e,0,-e,-e,0,-e,e,0],3));const s=new Je({fog:!1,toneMapped:!1});this.lightPlane=new Hn(n,s),this.add(this.lightPlane),n=new Xt,n.setAttribute("position",new Tt([0,0,0,0,0,1],3)),this.targetLine=new Hn(n,s),this.add(this.targetLine),this.update()}dispose(){this.lightPlane.geometry.dispose(),this.lightPlane.material.dispose(),this.targetLine.geometry.dispose(),this.targetLine.material.dispose()}update(){this.light.updateWorldMatrix(!0,!1),this.light.target.updateWorldMatrix(!0,!1),J0.setFromMatrixPosition(this.light.matrixWorld),yc.setFromMatrixPosition(this.light.target.matrixWorld),K0.subVectors(yc,J0),this.lightPlane.lookAt(yc),this.color!==void 0?(this.lightPlane.material.color.set(this.color),this.targetLine.material.color.set(this.color)):(this.lightPlane.material.color.copy(this.light.color),this.targetLine.material.color.copy(this.light.color)),this.targetLine.lookAt(yc),this.targetLine.scale.z=K0.length()}}const xc=new R,Pe=new pd;class cR extends ln{constructor(t){const e=new Xt,i=new Je({color:16777215,vertexColors:!0,toneMapped:!1}),n=[],s=[],o={};a("n1","n2"),a("n2","n4"),a("n4","n3"),a("n3","n1"),a("f1","f2"),a("f2","f4"),a("f4","f3"),a("f3","f1"),a("n1","f1"),a("n2","f2"),a("n3","f3"),a("n4","f4"),a("p","n1"),a("p","n2"),a("p","n3"),a("p","n4"),a("u1","u2"),a("u2","u3"),a("u3","u1"),a("c","t"),a("p","c"),a("cn1","cn2"),a("cn3","cn4"),a("cf1","cf2"),a("cf3","cf4");function a(p,_){h(p),h(_)}function h(p){n.push(0,0,0),s.push(0,0,0),o[p]===void 0&&(o[p]=[]),o[p].push(n.length/3-1)}e.setAttribute("position",new Tt(n,3)),e.setAttribute("color",new Tt(s,3)),super(e,i),this.type="CameraHelper",this.camera=t,this.camera.updateProjectionMatrix&&this.camera.updateProjectionMatrix(),this.matrix=t.matrixWorld,this.matrixAutoUpdate=!1,this.pointMap=o,this.update();const l=new vt(16755200),c=new vt(16711680),u=new vt(43775),d=new vt(16777215),f=new vt(3355443);this.setColors(l,c,u,d,f)}setColors(t,e,i,n,s){const a=this.geometry.getAttribute("color");a.setXYZ(0,t.r,t.g,t.b),a.setXYZ(1,t.r,t.g,t.b),a.setXYZ(2,t.r,t.g,t.b),a.setXYZ(3,t.r,t.g,t.b),a.setXYZ(4,t.r,t.g,t.b),a.setXYZ(5,t.r,t.g,t.b),a.setXYZ(6,t.r,t.g,t.b),a.setXYZ(7,t.r,t.g,t.b),a.setXYZ(8,t.r,t.g,t.b),a.setXYZ(9,t.r,t.g,t.b),a.setXYZ(10,t.r,t.g,t.b),a.setXYZ(11,t.r,t.g,t.b),a.setXYZ(12,t.r,t.g,t.b),a.setXYZ(13,t.r,t.g,t.b),a.setXYZ(14,t.r,t.g,t.b),a.setXYZ(15,t.r,t.g,t.b),a.setXYZ(16,t.r,t.g,t.b),a.setXYZ(17,t.r,t.g,t.b),a.setXYZ(18,t.r,t.g,t.b),a.setXYZ(19,t.r,t.g,t.b),a.setXYZ(20,t.r,t.g,t.b),a.setXYZ(21,t.r,t.g,t.b),a.setXYZ(22,t.r,t.g,t.b),a.setXYZ(23,t.r,t.g,t.b),a.setXYZ(24,e.r,e.g,e.b),a.setXYZ(25,e.r,e.g,e.b),a.setXYZ(26,e.r,e.g,e.b),a.setXYZ(27,e.r,e.g,e.b),a.setXYZ(28,e.r,e.g,e.b),a.setXYZ(29,e.r,e.g,e.b),a.setXYZ(30,e.r,e.g,e.b),a.setXYZ(31,e.r,e.g,e.b),a.setXYZ(32,i.r,i.g,i.b),a.setXYZ(33,i.r,i.g,i.b),a.setXYZ(34,i.r,i.g,i.b),a.setXYZ(35,i.r,i.g,i.b),a.setXYZ(36,i.r,i.g,i.b),a.setXYZ(37,i.r,i.g,i.b),a.setXYZ(38,n.r,n.g,n.b),a.setXYZ(39,n.r,n.g,n.b),a.setXYZ(40,s.r,s.g,s.b),a.setXYZ(41,s.r,s.g,s.b),a.setXYZ(42,s.r,s.g,s.b),a.setXYZ(43,s.r,s.g,s.b),a.setXYZ(44,s.r,s.g,s.b),a.setXYZ(45,s.r,s.g,s.b),a.setXYZ(46,s.r,s.g,s.b),a.setXYZ(47,s.r,s.g,s.b),a.setXYZ(48,s.r,s.g,s.b),a.setXYZ(49,s.r,s.g,s.b),a.needsUpdate=!0}update(){const t=this.geometry,e=this.pointMap,i=1,n=1;Pe.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse),De("c",e,t,Pe,0,0,-1),De("t",e,t,Pe,0,0,1),De("n1",e,t,Pe,-1,-1,-1),De("n2",e,t,Pe,i,-1,-1),De("n3",e,t,Pe,-1,n,-1),De("n4",e,t,Pe,i,n,-1),De("f1",e,t,Pe,-1,-1,1),De("f2",e,t,Pe,i,-1,1),De("f3",e,t,Pe,-1,n,1),De("f4",e,t,Pe,i,n,1),De("u1",e,t,Pe,i*.7,n*1.1,-1),De("u2",e,t,Pe,-1*.7,n*1.1,-1),De("u3",e,t,Pe,0,n*2,-1),De("cf1",e,t,Pe,-1,0,1),De("cf2",e,t,Pe,i,0,1),De("cf3",e,t,Pe,0,-1,1),De("cf4",e,t,Pe,0,n,1),De("cn1",e,t,Pe,-1,0,-1),De("cn2",e,t,Pe,i,0,-1),De("cn3",e,t,Pe,0,-1,-1),De("cn4",e,t,Pe,0,n,-1),t.getAttribute("position").needsUpdate=!0}dispose(){this.geometry.dispose(),this.material.dispose()}}function De(r,t,e,i,n,s,o){xc.set(n,s,o).unproject(i);const a=t[r];if(a!==void 0){const h=e.getAttribute("position");for(let l=0,c=a.length;l<c;l++)h.setXYZ(a[l],xc.x,xc.y,xc.z)}}const vc=new Le;class uR extends ln{constructor(t,e=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=new Float32Array(8*3),s=new Xt;s.setIndex(new _e(i,1)),s.setAttribute("position",new _e(n,3)),super(s,new Je({color:e,toneMapped:!1})),this.object=t,this.type="BoxHelper",this.matrixAutoUpdate=!1,this.update()}update(t){if(t!==void 0&&console.warn("THREE.BoxHelper: .update() has no longer arguments."),this.object!==void 0&&vc.setFromObject(this.object),vc.isEmpty())return;const e=vc.min,i=vc.max,n=this.geometry.attributes.position,s=n.array;s[0]=i.x,s[1]=i.y,s[2]=i.z,s[3]=e.x,s[4]=i.y,s[5]=i.z,s[6]=e.x,s[7]=e.y,s[8]=i.z,s[9]=i.x,s[10]=e.y,s[11]=i.z,s[12]=i.x,s[13]=i.y,s[14]=e.z,s[15]=e.x,s[16]=i.y,s[17]=e.z,s[18]=e.x,s[19]=e.y,s[20]=e.z,s[21]=i.x,s[22]=e.y,s[23]=e.z,n.needsUpdate=!0,this.geometry.computeBoundingSphere()}setFromObject(t){return this.object=t,this.update(),this}copy(t,e){return super.copy(t,e),this.object=t.object,this}dispose(){this.geometry.dispose(),this.material.dispose()}}class dR extends ln{constructor(t,e=16776960){const i=new Uint16Array([0,1,1,2,2,3,3,0,4,5,5,6,6,7,7,4,0,4,1,5,2,6,3,7]),n=[1,1,1,-1,1,1,-1,-1,1,1,-1,1,1,1,-1,-1,1,-1,-1,-1,-1,1,-1,-1],s=new Xt;s.setIndex(new _e(i,1)),s.setAttribute("position",new Tt(n,3)),super(s,new Je({color:e,toneMapped:!1})),this.box=t,this.type="Box3Helper",this.geometry.computeBoundingSphere()}updateMatrixWorld(t){const e=this.box;e.isEmpty()||(e.getCenter(this.position),e.getSize(this.scale),this.scale.multiplyScalar(.5),super.updateMatrixWorld(t))}dispose(){this.geometry.dispose(),this.material.dispose()}}class fR extends Hn{constructor(t,e=1,i=16776960){const n=i,s=[1,-1,0,-1,1,0,-1,-1,0,1,1,0,-1,1,0,-1,-1,0,1,-1,0,1,1,0],o=new Xt;o.setAttribute("position",new Tt(s,3)),o.computeBoundingSphere(),super(o,new Je({color:n,toneMapped:!1})),this.type="PlaneHelper",this.plane=t,this.size=e;const a=[1,1,0,-1,1,0,-1,-1,0,1,1,0,-1,-1,0,1,-1,0],h=new Xt;h.setAttribute("position",new Tt(a,3)),h.computeBoundingSphere(),this.add(new ge(h,new Oe({color:n,opacity:.2,transparent:!0,depthWrite:!1,toneMapped:!1})))}updateMatrixWorld(t){this.position.set(0,0,0),this.scale.set(.5*this.size,.5*this.size,1),this.lookAt(this.plane.normal),this.translateZ(-this.plane.constant),super.updateMatrixWorld(t)}dispose(){this.geometry.dispose(),this.material.dispose(),this.children[0].geometry.dispose(),this.children[0].material.dispose()}}const j0=new R;let bc,jf;class pR extends pe{constructor(t=new R(0,0,1),e=new R(0,0,0),i=1,n=16776960,s=i*.2,o=s*.2){super(),this.type="ArrowHelper",bc===void 0&&(bc=new Xt,bc.setAttribute("position",new Tt([0,0,0,0,1,0],3)),jf=new xa(0,.5,1,5,1),jf.translate(0,-.5,0)),this.position.copy(e),this.line=new Hn(bc,new Je({color:n,toneMapped:!1})),this.line.matrixAutoUpdate=!1,this.add(this.line),this.cone=new ge(jf,new Oe({color:n,toneMapped:!1})),this.cone.matrixAutoUpdate=!1,this.add(this.cone),this.setDirection(t),this.setLength(i,s,o)}setDirection(t){if(t.y>.99999)this.quaternion.set(0,0,0,1);else if(t.y<-.99999)this.quaternion.set(1,0,0,0);else{j0.set(t.z,0,-t.x).normalize();const e=Math.acos(t.y);this.quaternion.setFromAxisAngle(j0,e)}}setLength(t,e=t*.2,i=e*.2){this.line.scale.set(1,Math.max(1e-4,t-e),1),this.line.updateMatrix(),this.cone.scale.set(i,e,i),this.cone.position.y=t,this.cone.updateMatrix()}setColor(t){this.line.material.color.set(t),this.cone.material.color.set(t)}copy(t){return super.copy(t,!1),this.line.copy(t.line),this.cone.copy(t.cone),this}dispose(){this.line.geometry.dispose(),this.line.material.dispose(),this.cone.geometry.dispose(),this.cone.material.dispose()}}class mR extends ln{constructor(t=1){const e=[0,0,0,t,0,0,0,0,0,0,t,0,0,0,0,0,0,t],i=[1,0,0,1,.6,0,0,1,0,.6,1,0,0,0,1,0,.6,1],n=new Xt;n.setAttribute("position",new Tt(e,3)),n.setAttribute("color",new Tt(i,3));const s=new Je({vertexColors:!0,toneMapped:!1});super(n,s),this.type="AxesHelper"}setColors(t,e,i){const n=new vt,s=this.geometry.attributes.color.array;return n.set(t),n.toArray(s,0),n.toArray(s,3),n.set(e),n.toArray(s,6),n.toArray(s,9),n.set(i),n.toArray(s,12),n.toArray(s,15),this.geometry.attributes.color.needsUpdate=!0,this}dispose(){this.geometry.dispose(),this.material.dispose()}}let gR=class{constructor(){this.type="ShapePath",this.color=new vt,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new Ih,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,i,n){return this.currentPath.quadraticCurveTo(t,e,i,n),this}bezierCurveTo(t,e,i,n,s,o){return this.currentPath.bezierCurveTo(t,e,i,n,s,o),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(m){const x=[];for(let y=0,v=m.length;y<v;y++){const E=m[y],b=new Or;b.curves=E.curves,x.push(b)}return x}function i(m,x){const y=x.length;let v=!1;for(let E=y-1,b=0;b<y;E=b++){let w=x[E],T=x[b],S=T.x-w.x,M=T.y-w.y;if(Math.abs(M)>Number.EPSILON){if(M<0&&(w=x[b],S=-S,T=x[E],M=-M),m.y<w.y||m.y>T.y)continue;if(m.y===w.y){if(m.x===w.x)return!0}else{const I=M*(m.x-w.x)-S*(m.y-w.y);if(I===0)return!0;if(I<0)continue;v=!v}}else{if(m.y!==w.y)continue;if(T.x<=m.x&&m.x<=w.x||w.x<=m.x&&m.x<=T.x)return!0}}return v}const n=qs.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,a,h;const l=[];if(s.length===1)return a=s[0],h=new Or,h.curves=a.curves,l.push(h),l;let c=!n(s[0].getPoints());c=t?!c:c;const u=[],d=[];let f=[],p=0,_;d[p]=void 0,f[p]=[];for(let m=0,x=s.length;m<x;m++)a=s[m],_=a.getPoints(),o=n(_),o=t?!o:o,o?(!c&&d[p]&&p++,d[p]={s:new Or,p:_},d[p].s.curves=a.curves,c&&p++,f[p]=[]):f[p].push({h:a,p:_[0]});if(!d[0])return e(s);if(d.length>1){let m=!1,x=0;for(let y=0,v=d.length;y<v;y++)u[y]=[];for(let y=0,v=d.length;y<v;y++){const E=f[y];for(let b=0;b<E.length;b++){const w=E[b];let T=!0;for(let S=0;S<d.length;S++)i(w.p,d[S].p)&&(y!==S&&x++,T?(T=!1,u[S].push(w)):m=!0);T&&u[y].push(w)}}x>0&&m===!1&&(f=u)}let g;for(let m=0,x=d.length;m<x;m++){h=d[m].s,l.push(h),g=f[m];for(let y=0,v=g.length;y<v;y++)h.holes.push(g[y].h)}return l}};class _R extends Gn{constructor(t,e){super(),this.object=t,this.domElement=e,this.enabled=!0,this.state=-1,this.keys={},this.mouseButtons={LEFT:null,MIDDLE:null,RIGHT:null},this.touches={ONE:null,TWO:null}}connect(){}disconnect(){}dispose(){}update(){}}class yR extends En{constructor(t=1,e=1,i=1,n={}){console.warn('THREE.WebGLMultipleRenderTargets has been deprecated and will be removed in r172. Use THREE.WebGLRenderTarget and set the "count" parameter to enable MRT.'),super(t,e,{...n,count:i}),this.isWebGLMultipleRenderTargets=!0}get texture(){return this.textures}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:ed}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=ed);const xR=Object.freeze(Object.defineProperty({__proto__:null,ACESFilmicToneMapping:nv,AddEquation:Gs,AddOperation:Qx,AdditiveAnimationBlendMode:Rm,AdditiveBlending:Vp,AgXToneMapping:rv,AlphaFormat:wm,AlwaysCompare:vv,AlwaysDepth:Xx,AlwaysStencilFunc:$p,AmbientLight:rg,AnimationAction:Fb,AnimationClip:Uh,AnimationLoader:b2,AnimationMixer:Z2,AnimationObjectGroup:q2,AnimationUtils:_2,ArcCurve:Qv,ArrayCamera:Gv,ArrowHelper:pR,AttachedBindMode:Wp,Audio:Db,AudioAnalyser:U2,AudioContext:ag,AudioListener:O2,AudioLoader:I2,AxesHelper:mR,BackSide:wi,BasicDepthPacking:uv,BasicShadowMap:_w,BatchedMesh:Jv,Bone:Vm,BooleanKeyframeTrack:$r,Box2:iR,Box3:Le,Box3Helper:dR,BoxGeometry:Js,BoxHelper:uR,BufferAttribute:_e,BufferGeometry:Xt,BufferGeometryLoader:Lb,ByteType:vm,Cache:us,Camera:pd,CameraHelper:cR,CanvasTexture:VC,CapsuleGeometry:wd,CatmullRomCurve3:tb,CineonToneMapping:iv,CircleGeometry:Sd,ClampToEdgeWrapping:rn,Clock:hg,Color:vt,ColorKeyframeTrack:tg,ColorManagement:ae,CompressedArrayTexture:BC,CompressedCubeTexture:kC,CompressedTexture:bd,CompressedTextureLoader:M2,ConeGeometry:Ad,ConstantAlphaFactor:Gx,ConstantColorFactor:Vx,Controls:_R,CubeCamera:Ov,CubeReflectionMapping:gs,CubeRefractionMapping:Ys,CubeTexture:Jh,CubeTextureLoader:w2,CubeUVReflectionMapping:pa,CubicBezierCurve:Wm,CubicBezierCurve3:eb,CubicInterpolant:Mb,CullFaceBack:kp,CullFaceFront:Ax,CullFaceFrontBack:gw,CullFaceNone:Sx,Curve:Cn,CurvePath:nb,CustomBlending:Tx,CustomToneMapping:sv,CylinderGeometry:xa,Cylindrical:eR,Data3DTexture:Lm,DataArrayTexture:ud,DataTexture:Bn,DataTextureLoader:S2,DataUtils:R1,DecrementStencilOp:Iw,DecrementWrapStencilOp:Dw,DefaultLoadingManager:Ab,DepthFormat:Lr,DepthStencilFormat:Vr,DepthTexture:zm,DetachedBindMode:av,DirectionalLight:sg,DirectionalLightHelper:lR,DiscreteInterpolant:wb,DisplayP3ColorSpace:cd,DodecahedronGeometry:Ed,DoubleSide:fi,DstAlphaFactor:zx,DstColorFactor:Nx,DynamicCopyUsage:Yw,DynamicDrawUsage:Hw,DynamicReadUsage:$w,EdgesGeometry:Zm,EllipseCurve:Md,EqualCompare:gv,EqualDepth:Yx,EqualStencilFunc:Uw,EquirectangularReflectionMapping:xh,EquirectangularRefractionMapping:vh,Euler:Tn,EventDispatcher:Gn,ExtrudeGeometry:Cd,FileLoader:ys,Float16BufferAttribute:F1,Float32BufferAttribute:Tt,FloatType:Pi,Fog:yd,FogExp2:_d,FramebufferTexture:NC,FrontSide:ms,Frustum:Kh,GLBufferAttribute:j2,GLSL1:Jw,GLSL3:Xp,GreaterCompare:_v,GreaterDepth:Jx,GreaterEqualCompare:xv,GreaterEqualDepth:Zx,GreaterEqualStencilFunc:Vw,GreaterStencilFunc:Bw,GridHelper:Nb,Group:Rr,HalfFloatType:ma,HemisphereLight:Eb,HemisphereLightHelper:aR,IcosahedronGeometry:Rd,ImageBitmapLoader:P2,ImageLoader:Nh,ImageUtils:Ev,IncrementStencilOp:Pw,IncrementWrapStencilOp:Lw,InstancedBufferAttribute:ua,InstancedBufferGeometry:og,InstancedInterleavedBuffer:Xu,InstancedMesh:Zv,Int16BufferAttribute:D1,Int32BufferAttribute:O1,Int8BufferAttribute:P1,IntType:nd,InterleavedBuffer:xd,InterleavedBufferAttribute:$i,Interpolant:tl,InterpolateDiscrete:wh,InterpolateLinear:Hu,InterpolateSmooth:ru,InvertStencilOp:Ow,KeepStencilOp:Mr,KeyframeTrack:Rn,LOD:qv,LatheGeometry:jh,Layers:dd,LessCompare:mv,LessDepth:qx,LessEqualCompare:Pm,LessEqualDepth:yh,LessEqualStencilFunc:Nw,LessStencilFunc:zw,Light:js,LightProbe:Ib,Line:Hn,Line3:zb,LineBasicMaterial:Je,LineCurve:$m,LineCurve3:ib,LineDashedMaterial:xb,LineLoop:Kv,LineSegments:ln,LinearDisplayP3ColorSpace:Zh,LinearFilter:ke,LinearInterpolant:Qm,LinearMipMapLinearFilter:bw,LinearMipMapNearestFilter:vw,LinearMipmapLinearFilter:Un,LinearMipmapNearestFilter:oh,LinearSRGBColorSpace:xs,LinearToneMapping:tv,LinearTransfer:Ah,Loader:Oi,LoaderUtils:em,LoadingManager:eg,LoopOnce:hv,LoopPingPong:cv,LoopRepeat:lv,LuminanceAlphaFormat:Em,LuminanceFormat:Am,MOUSE:pw,Material:si,MaterialLoader:Fd,MathUtils:bv,Matrix2:dg,Matrix3:Zt,Matrix4:Ft,MaxEquation:Ix,Mesh:ge,MeshBasicMaterial:Oe,MeshDepthMaterial:Um,MeshDistanceMaterial:Nm,MeshLambertMaterial:_b,MeshMatcapMaterial:yb,MeshNormalMaterial:gb,MeshPhongMaterial:pb,MeshPhysicalMaterial:fb,MeshStandardMaterial:Km,MeshToonMaterial:mb,MinEquation:Px,MirroredRepeatWrapping:Mh,MixOperation:jx,MultiplyBlending:Gp,MultiplyOperation:qh,NearestFilter:Ze,NearestMipMapLinearFilter:xw,NearestMipMapNearestFilter:yw,NearestMipmapLinearFilter:Zo,NearestMipmapNearestFilter:xm,NeutralToneMapping:ov,NeverCompare:pv,NeverDepth:$x,NeverStencilFunc:Fw,NoBlending:ds,NoColorSpace:ls,NoToneMapping:fs,NormalAnimationBlendMode:ld,NormalBlending:Ir,NotEqualCompare:yv,NotEqualDepth:Kx,NotEqualStencilFunc:kw,NumberKeyframeTrack:Fh,Object3D:pe,ObjectLoader:C2,ObjectSpaceNormalMap:fv,OctahedronGeometry:Qh,OneFactor:Dx,OneMinusConstantAlphaFactor:Wx,OneMinusConstantColorFactor:Hx,OneMinusDstAlphaFactor:Ux,OneMinusDstColorFactor:Bx,OneMinusSrcAlphaFactor:mu,OneMinusSrcColorFactor:Fx,OrthographicCamera:md,P3Primaries:Th,PCFShadowMap:ym,PCFSoftShadowMap:Ex,PMREMGenerator:Yp,Path:Ih,PerspectiveCamera:Ye,Plane:Vs,PlaneGeometry:_a,PlaneHelper:fR,PointLight:Cb,PointLightHelper:rR,Points:jv,PointsMaterial:Hm,PolarGridHelper:hR,PolyhedronGeometry:Ks,PositionalAudio:z2,PropertyBinding:ne,PropertyMixer:Ob,QuadraticBezierCurve:Xm,QuadraticBezierCurve3:qm,Quaternion:Ii,QuaternionKeyframeTrack:el,QuaternionLinearInterpolant:Sb,RED_GREEN_RGTC2_Format:ku,RED_RGTC1_Format:Cm,REVISION:ed,RGBADepthPacking:dv,RGBAFormat:Mi,RGBAIntegerFormat:hd,RGBA_ASTC_10x10_Format:Ou,RGBA_ASTC_10x5_Format:Iu,RGBA_ASTC_10x6_Format:Lu,RGBA_ASTC_10x8_Format:Du,RGBA_ASTC_12x10_Format:Fu,RGBA_ASTC_12x12_Format:zu,RGBA_ASTC_4x4_Format:wu,RGBA_ASTC_5x4_Format:Su,RGBA_ASTC_5x5_Format:Au,RGBA_ASTC_6x5_Format:Eu,RGBA_ASTC_6x6_Format:Tu,RGBA_ASTC_8x5_Format:Cu,RGBA_ASTC_8x6_Format:Ru,RGBA_ASTC_8x8_Format:Pu,RGBA_BPTC_Format:uh,RGBA_ETC2_EAC_Format:Mu,RGBA_PVRTC_2BPPV1_Format:xu,RGBA_PVRTC_4BPPV1_Format:yu,RGBA_S3TC_DXT1_Format:hh,RGBA_S3TC_DXT3_Format:lh,RGBA_S3TC_DXT5_Format:ch,RGBDepthPacking:Ew,RGBFormat:Sm,RGBIntegerFormat:Mw,RGB_BPTC_SIGNED_Format:Uu,RGB_BPTC_UNSIGNED_Format:Nu,RGB_ETC1_Format:vu,RGB_ETC2_Format:bu,RGB_PVRTC_2BPPV1_Format:_u,RGB_PVRTC_4BPPV1_Format:gu,RGB_S3TC_DXT1_Format:ah,RGDepthPacking:Tw,RGFormat:Tm,RGIntegerFormat:ad,RawShaderMaterial:db,Ray:ga,Raycaster:Q2,Rec709Primaries:Eh,RectAreaLight:Rb,RedFormat:od,RedIntegerFormat:Yh,ReinhardToneMapping:ev,RenderTarget:Cv,RepeatWrapping:bh,ReplaceStencilOp:Rw,ReverseSubtractEquation:Rx,RingGeometry:Pd,SIGNED_RED_GREEN_RGTC2_Format:Vu,SIGNED_RED_RGTC1_Format:Bu,SRGBColorSpace:nn,SRGBTransfer:ve,Scene:Bm,ShaderChunk:Yt,ShaderLib:vi,ShaderMaterial:hn,ShadowMaterial:ub,Shape:Or,ShapeGeometry:hb,ShapePath:gR,ShapeUtils:qs,ShortType:bm,Skeleton:vd,SkeletonHelper:sR,SkinnedMesh:Yv,Source:Cr,Sphere:He,SphereGeometry:sa,Spherical:tR,SphericalHarmonics3:Pb,SplineCurve:Ym,SpotLight:Tb,SpotLightHelper:nR,Sprite:Xv,SpriteMaterial:km,SrcAlphaFactor:pu,SrcAlphaSaturateFactor:kx,SrcColorFactor:Ox,StaticCopyUsage:qw,StaticDrawUsage:Ch,StaticReadUsage:Ww,StereoCamera:L2,StreamCopyUsage:Zw,StreamDrawUsage:Gw,StreamReadUsage:Xw,StringKeyframeTrack:Xr,SubtractEquation:Cx,SubtractiveBlending:Hp,TOUCH:mw,TangentSpaceNormalMap:Zs,TetrahedronGeometry:Id,Texture:Ke,TextureLoader:ig,TextureUtils:_C,TorusGeometry:Ld,TorusKnotGeometry:Dd,Triangle:$s,TriangleFanDrawMode:Aw,TriangleStripDrawMode:Sw,TrianglesDrawMode:ww,TubeGeometry:Od,UVMapping:id,Uint16BufferAttribute:Dm,Uint32BufferAttribute:Om,Uint8BufferAttribute:I1,Uint8ClampedBufferAttribute:L1,Uniform:ug,UniformsGroup:K2,UniformsLib:dt,UniformsUtils:fd,UnsignedByteType:Vn,UnsignedInt248Type:kr,UnsignedInt5999Type:Mm,UnsignedIntType:_s,UnsignedShort4444Type:sd,UnsignedShort5551Type:rd,UnsignedShortType:ha,VSMShadowMap:Fn,Vector2:Q,Vector3:R,Vector4:se,VectorKeyframeTrack:zh,VideoTexture:UC,WebGL3DRenderTarget:x1,WebGLArrayRenderTarget:y1,WebGLCoordinateSystem:Nn,WebGLCubeRenderTarget:Fv,WebGLMultipleRenderTargets:yR,WebGLRenderTarget:En,WebGLRenderer:Wv,WebGLUtils:Hv,WebGPUCoordinateSystem:Rh,WireframeGeometry:Jm,WrapAroundEnding:Sh,ZeroCurvatureEnding:Er,ZeroFactor:Lx,ZeroSlopeEnding:Tr,ZeroStencilOp:Cw,createCanvasElement:Av},Symbol.toStringTag,{value:"Module"}));/**
 * @license
 * Copyright 2010-2025 Three.js Authors
 * SPDX-License-Identifier: MIT
 */const Bb="173",nm=0,vR=1,qu=2,Q0=1,ty=100,ey=204,iy=205,ny=3,bR=0,kb=300,sy=1e3,Mc=1001,ry=1002,MR=1006,wR=1008,SR=1009,AR=1015,ER=1023,Vb="",wn="srgb",oy="srgb-linear",ay="linear",Qf="srgb",Io=7680,hy=519,ly=35044,wc=2e3,cy=2001;let zd=class{addEventListener(t,e){this._listeners===void 0&&(this._listeners={});const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){const i=this._listeners;return i===void 0?!1:i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){const i=this._listeners;if(i===void 0)return;const n=i[t];if(n!==void 0){const s=n.indexOf(e);s!==-1&&n.splice(s,1)}}dispatchEvent(t){const e=this._listeners;if(e===void 0)return;const i=e[t.type];if(i!==void 0){t.target=this;const n=i.slice(0);for(let s=0,o=n.length;s<o;s++)n[s].call(this,t);t.target=null}}};const ci=["00","01","02","03","04","05","06","07","08","09","0a","0b","0c","0d","0e","0f","10","11","12","13","14","15","16","17","18","19","1a","1b","1c","1d","1e","1f","20","21","22","23","24","25","26","27","28","29","2a","2b","2c","2d","2e","2f","30","31","32","33","34","35","36","37","38","39","3a","3b","3c","3d","3e","3f","40","41","42","43","44","45","46","47","48","49","4a","4b","4c","4d","4e","4f","50","51","52","53","54","55","56","57","58","59","5a","5b","5c","5d","5e","5f","60","61","62","63","64","65","66","67","68","69","6a","6b","6c","6d","6e","6f","70","71","72","73","74","75","76","77","78","79","7a","7b","7c","7d","7e","7f","80","81","82","83","84","85","86","87","88","89","8a","8b","8c","8d","8e","8f","90","91","92","93","94","95","96","97","98","99","9a","9b","9c","9d","9e","9f","a0","a1","a2","a3","a4","a5","a6","a7","a8","a9","aa","ab","ac","ad","ae","af","b0","b1","b2","b3","b4","b5","b6","b7","b8","b9","ba","bb","bc","bd","be","bf","c0","c1","c2","c3","c4","c5","c6","c7","c8","c9","ca","cb","cc","cd","ce","cf","d0","d1","d2","d3","d4","d5","d6","d7","d8","d9","da","db","dc","dd","de","df","e0","e1","e2","e3","e4","e5","e6","e7","e8","e9","ea","eb","ec","ed","ee","ef","f0","f1","f2","f3","f4","f5","f6","f7","f8","f9","fa","fb","fc","fd","fe","ff"];function va(){const r=Math.random()*4294967295|0,t=Math.random()*4294967295|0,e=Math.random()*4294967295|0,i=Math.random()*4294967295|0;return(ci[r&255]+ci[r>>8&255]+ci[r>>16&255]+ci[r>>24&255]+"-"+ci[t&255]+ci[t>>8&255]+"-"+ci[t>>16&15|64]+ci[t>>24&255]+"-"+ci[e&63|128]+ci[e>>8&255]+"-"+ci[e>>16&255]+ci[e>>24&255]+ci[i&255]+ci[i>>8&255]+ci[i>>16&255]+ci[i>>24&255]).toLowerCase()}function te(r,t,e){return Math.max(t,Math.min(e,r))}function TR(r,t){return(r%t+t)%t}function tp(r,t,e){return(1-e)*r+e*t}function Ha(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return r/4294967295;case Uint16Array:return r/65535;case Uint8Array:return r/255;case Int32Array:return Math.max(r/2147483647,-1);case Int16Array:return Math.max(r/32767,-1);case Int8Array:return Math.max(r/127,-1);default:throw new Error("Invalid component type.")}}function Ai(r,t){switch(t.constructor){case Float32Array:return r;case Uint32Array:return Math.round(r*4294967295);case Uint16Array:return Math.round(r*65535);case Uint8Array:return Math.round(r*255);case Int32Array:return Math.round(r*2147483647);case Int16Array:return Math.round(r*32767);case Int8Array:return Math.round(r*127);default:throw new Error("Invalid component type.")}}class Jt{constructor(t=0,e=0){Jt.prototype.isVector2=!0,this.x=t,this.y=e}get width(){return this.x}set width(t){this.x=t}get height(){return this.y}set height(t){this.y=t}set(t,e){return this.x=t,this.y=e,this}setScalar(t){return this.x=t,this.y=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y)}copy(t){return this.x=t.x,this.y=t.y,this}add(t){return this.x+=t.x,this.y+=t.y,this}addScalar(t){return this.x+=t,this.y+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this}subScalar(t){return this.x-=t,this.y-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this}multiply(t){return this.x*=t.x,this.y*=t.y,this}multiplyScalar(t){return this.x*=t,this.y*=t,this}divide(t){return this.x/=t.x,this.y/=t.y,this}divideScalar(t){return this.multiplyScalar(1/t)}applyMatrix3(t){const e=this.x,i=this.y,n=t.elements;return this.x=n[0]*e+n[3]*i+n[6],this.y=n[1]*e+n[4]*i+n[7],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this}clamp(t,e){return this.x=te(this.x,t.x,e.x),this.y=te(this.y,t.y,e.y),this}clampScalar(t,e){return this.x=te(this.x,t,e),this.y=te(this.y,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(te(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this}negate(){return this.x=-this.x,this.y=-this.y,this}dot(t){return this.x*t.x+this.y*t.y}cross(t){return this.x*t.y-this.y*t.x}lengthSq(){return this.x*this.x+this.y*this.y}length(){return Math.sqrt(this.x*this.x+this.y*this.y)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)}normalize(){return this.divideScalar(this.length()||1)}angle(){return Math.atan2(-this.y,-this.x)+Math.PI}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(te(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y;return e*e+i*i}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this}equals(t){return t.x===this.x&&t.y===this.y}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this}rotateAround(t,e){const i=Math.cos(e),n=Math.sin(e),s=this.x-t.x,o=this.y-t.y;return this.x=s*i-o*n+t.x,this.y=s*n+o*i+t.y,this}random(){return this.x=Math.random(),this.y=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y}}class Qs{constructor(t,e,i,n,s,o,a,h,l){Qs.prototype.isMatrix3=!0,this.elements=[1,0,0,0,1,0,0,0,1],t!==void 0&&this.set(t,e,i,n,s,o,a,h,l)}set(t,e,i,n,s,o,a,h,l){const c=this.elements;return c[0]=t,c[1]=n,c[2]=a,c[3]=e,c[4]=s,c[5]=h,c[6]=i,c[7]=o,c[8]=l,this}identity(){return this.set(1,0,0,0,1,0,0,0,1),this}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],this}extractBasis(t,e,i){return t.setFromMatrix3Column(this,0),e.setFromMatrix3Column(this,1),i.setFromMatrix3Column(this,2),this}setFromMatrix4(t){const e=t.elements;return this.set(e[0],e[4],e[8],e[1],e[5],e[9],e[2],e[6],e[10]),this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,s=this.elements,o=i[0],a=i[3],h=i[6],l=i[1],c=i[4],u=i[7],d=i[2],f=i[5],p=i[8],_=n[0],g=n[3],m=n[6],x=n[1],y=n[4],v=n[7],E=n[2],b=n[5],w=n[8];return s[0]=o*_+a*x+h*E,s[3]=o*g+a*y+h*b,s[6]=o*m+a*v+h*w,s[1]=l*_+c*x+u*E,s[4]=l*g+c*y+u*b,s[7]=l*m+c*v+u*w,s[2]=d*_+f*x+p*E,s[5]=d*g+f*y+p*b,s[8]=d*m+f*v+p*w,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[3]*=t,e[6]*=t,e[1]*=t,e[4]*=t,e[7]*=t,e[2]*=t,e[5]*=t,e[8]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[1],n=t[2],s=t[3],o=t[4],a=t[5],h=t[6],l=t[7],c=t[8];return e*o*c-e*a*l-i*s*c+i*a*h+n*s*l-n*o*h}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],s=t[3],o=t[4],a=t[5],h=t[6],l=t[7],c=t[8],u=c*o-a*l,d=a*h-c*s,f=l*s-o*h,p=e*u+i*d+n*f;if(p===0)return this.set(0,0,0,0,0,0,0,0,0);const _=1/p;return t[0]=u*_,t[1]=(n*l-c*i)*_,t[2]=(a*i-n*o)*_,t[3]=d*_,t[4]=(c*e-n*h)*_,t[5]=(n*s-a*e)*_,t[6]=f*_,t[7]=(i*h-l*e)*_,t[8]=(o*e-i*s)*_,this}transpose(){let t;const e=this.elements;return t=e[1],e[1]=e[3],e[3]=t,t=e[2],e[2]=e[6],e[6]=t,t=e[5],e[5]=e[7],e[7]=t,this}getNormalMatrix(t){return this.setFromMatrix4(t).invert().transpose()}transposeIntoArray(t){const e=this.elements;return t[0]=e[0],t[1]=e[3],t[2]=e[6],t[3]=e[1],t[4]=e[4],t[5]=e[7],t[6]=e[2],t[7]=e[5],t[8]=e[8],this}setUvTransform(t,e,i,n,s,o,a){const h=Math.cos(s),l=Math.sin(s);return this.set(i*h,i*l,-i*(h*o+l*a)+o+t,-n*l,n*h,-n*(-l*o+h*a)+a+e,0,0,1),this}scale(t,e){return this.premultiply(ep.makeScale(t,e)),this}rotate(t){return this.premultiply(ep.makeRotation(-t)),this}translate(t,e){return this.premultiply(ep.makeTranslation(t,e)),this}makeTranslation(t,e){return t.isVector2?this.set(1,0,t.x,0,1,t.y,0,0,1):this.set(1,0,t,0,1,e,0,0,1),this}makeRotation(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,i,e,0,0,0,1),this}makeScale(t,e){return this.set(t,0,0,0,e,0,0,0,1),this}equals(t){const e=this.elements,i=t.elements;for(let n=0;n<9;n++)if(e[n]!==i[n])return!1;return!0}fromArray(t,e=0){for(let i=0;i<9;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t}clone(){return new this.constructor().fromArray(this.elements)}}const ep=new Qs;function CR(r){for(let t=r.length-1;t>=0;--t)if(r[t]>=65535)return!0;return!1}function uy(r){return document.createElementNS("http://www.w3.org/1999/xhtml",r)}const dy=new Qs().set(.4123908,.3575843,.1804808,.212639,.7151687,.0721923,.0193308,.1191948,.9505322),fy=new Qs().set(3.2409699,-1.5373832,-.4986108,-.9692436,1.8759675,.0415551,.0556301,-.203977,1.0569715);function RR(){const r={enabled:!0,workingColorSpace:oy,spaces:{},convert:function(n,s,o){return this.enabled===!1||s===o||!s||!o||(this.spaces[s].transfer===Qf&&(n.r=ps(n.r),n.g=ps(n.g),n.b=ps(n.b)),this.spaces[s].primaries!==this.spaces[o].primaries&&(n.applyMatrix3(this.spaces[s].toXYZ),n.applyMatrix3(this.spaces[o].fromXYZ)),this.spaces[o].transfer===Qf&&(n.r=ra(n.r),n.g=ra(n.g),n.b=ra(n.b))),n},fromWorkingColorSpace:function(n,s){return this.convert(n,this.workingColorSpace,s)},toWorkingColorSpace:function(n,s){return this.convert(n,s,this.workingColorSpace)},getPrimaries:function(n){return this.spaces[n].primaries},getTransfer:function(n){return n===Vb?ay:this.spaces[n].transfer},getLuminanceCoefficients:function(n,s=this.workingColorSpace){return n.fromArray(this.spaces[s].luminanceCoefficients)},define:function(n){Object.assign(this.spaces,n)},_getMatrix:function(n,s,o){return n.copy(this.spaces[s].toXYZ).multiply(this.spaces[o].fromXYZ)},_getDrawingBufferColorSpace:function(n){return this.spaces[n].outputColorSpaceConfig.drawingBufferColorSpace},_getUnpackColorSpace:function(n=this.workingColorSpace){return this.spaces[n].workingColorSpaceConfig.unpackColorSpace}},t=[.64,.33,.3,.6,.15,.06],e=[.2126,.7152,.0722],i=[.3127,.329];return r.define({[oy]:{primaries:t,whitePoint:i,transfer:ay,toXYZ:dy,fromXYZ:fy,luminanceCoefficients:e,workingColorSpaceConfig:{unpackColorSpace:wn},outputColorSpaceConfig:{drawingBufferColorSpace:wn}},[wn]:{primaries:t,whitePoint:i,transfer:Qf,toXYZ:dy,fromXYZ:fy,luminanceCoefficients:e,outputColorSpaceConfig:{drawingBufferColorSpace:wn}}}),r}const yn=RR();function ps(r){return r<.04045?r*.0773993808:Math.pow(r*.9478672986+.0521327014,2.4)}function ra(r){return r<.0031308?r*12.92:1.055*Math.pow(r,.41666)-.055}let Lo;class PR{static getDataURL(t){if(/^data:/i.test(t.src)||typeof HTMLCanvasElement>"u")return t.src;let e;if(t instanceof HTMLCanvasElement)e=t;else{Lo===void 0&&(Lo=uy("canvas")),Lo.width=t.width,Lo.height=t.height;const i=Lo.getContext("2d");t instanceof ImageData?i.putImageData(t,0,0):i.drawImage(t,0,0,t.width,t.height),e=Lo}return e.toDataURL("image/png")}static sRGBToLinear(t){if(typeof HTMLImageElement<"u"&&t instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&t instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&t instanceof ImageBitmap){const e=uy("canvas");e.width=t.width,e.height=t.height;const i=e.getContext("2d");i.drawImage(t,0,0,t.width,t.height);const n=i.getImageData(0,0,t.width,t.height),s=n.data;for(let o=0;o<s.length;o++)s[o]=ps(s[o]/255)*255;return i.putImageData(n,0,0),e}else if(t.data){const e=t.data.slice(0);for(let i=0;i<e.length;i++)e instanceof Uint8Array||e instanceof Uint8ClampedArray?e[i]=Math.floor(ps(e[i]/255)*255):e[i]=ps(e[i]);return{data:e,width:t.width,height:t.height}}else return console.warn("THREE.ImageUtils.sRGBToLinear(): Unsupported image type. No color space conversion applied."),t}}let IR=0;class LR{constructor(t=null){this.isSource=!0,Object.defineProperty(this,"id",{value:IR++}),this.uuid=va(),this.data=t,this.dataReady=!0,this.version=0}set needsUpdate(t){t===!0&&this.version++}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.images[this.uuid]!==void 0)return t.images[this.uuid];const i={uuid:this.uuid,url:""},n=this.data;if(n!==null){let s;if(Array.isArray(n)){s=[];for(let o=0,a=n.length;o<a;o++)n[o].isDataTexture?s.push(ip(n[o].image)):s.push(ip(n[o]))}else s=ip(n);i.url=s}return e||(t.images[this.uuid]=i),i}}function ip(r){return typeof HTMLImageElement<"u"&&r instanceof HTMLImageElement||typeof HTMLCanvasElement<"u"&&r instanceof HTMLCanvasElement||typeof ImageBitmap<"u"&&r instanceof ImageBitmap?PR.getDataURL(r):r.data?{data:Array.from(r.data),width:r.width,height:r.height,type:r.data.constructor.name}:(console.warn("THREE.Texture: Unable to serialize Texture."),{})}let DR=0;class Fr extends zd{constructor(t=Fr.DEFAULT_IMAGE,e=Fr.DEFAULT_MAPPING,i=Mc,n=Mc,s=MR,o=wR,a=ER,h=SR,l=Fr.DEFAULT_ANISOTROPY,c=Vb){super(),this.isTexture=!0,Object.defineProperty(this,"id",{value:DR++}),this.uuid=va(),this.name="",this.source=new LR(t),this.mipmaps=[],this.mapping=e,this.channel=0,this.wrapS=i,this.wrapT=n,this.magFilter=s,this.minFilter=o,this.anisotropy=l,this.format=a,this.internalFormat=null,this.type=h,this.offset=new Jt(0,0),this.repeat=new Jt(1,1),this.center=new Jt(0,0),this.rotation=0,this.matrixAutoUpdate=!0,this.matrix=new Qs,this.generateMipmaps=!0,this.premultiplyAlpha=!1,this.flipY=!0,this.unpackAlignment=4,this.colorSpace=c,this.userData={},this.version=0,this.onUpdate=null,this.renderTarget=null,this.isRenderTargetTexture=!1,this.pmremVersion=0}get image(){return this.source.data}set image(t=null){this.source.data=t}updateMatrix(){this.matrix.setUvTransform(this.offset.x,this.offset.y,this.repeat.x,this.repeat.y,this.rotation,this.center.x,this.center.y)}clone(){return new this.constructor().copy(this)}copy(t){return this.name=t.name,this.source=t.source,this.mipmaps=t.mipmaps.slice(0),this.mapping=t.mapping,this.channel=t.channel,this.wrapS=t.wrapS,this.wrapT=t.wrapT,this.magFilter=t.magFilter,this.minFilter=t.minFilter,this.anisotropy=t.anisotropy,this.format=t.format,this.internalFormat=t.internalFormat,this.type=t.type,this.offset.copy(t.offset),this.repeat.copy(t.repeat),this.center.copy(t.center),this.rotation=t.rotation,this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrix.copy(t.matrix),this.generateMipmaps=t.generateMipmaps,this.premultiplyAlpha=t.premultiplyAlpha,this.flipY=t.flipY,this.unpackAlignment=t.unpackAlignment,this.colorSpace=t.colorSpace,this.renderTarget=t.renderTarget,this.isRenderTargetTexture=t.isRenderTargetTexture,this.userData=JSON.parse(JSON.stringify(t.userData)),this.needsUpdate=!0,this}toJSON(t){const e=t===void 0||typeof t=="string";if(!e&&t.textures[this.uuid]!==void 0)return t.textures[this.uuid];const i={metadata:{version:4.6,type:"Texture",generator:"Texture.toJSON"},uuid:this.uuid,name:this.name,image:this.source.toJSON(t).uuid,mapping:this.mapping,channel:this.channel,repeat:[this.repeat.x,this.repeat.y],offset:[this.offset.x,this.offset.y],center:[this.center.x,this.center.y],rotation:this.rotation,wrap:[this.wrapS,this.wrapT],format:this.format,internalFormat:this.internalFormat,type:this.type,colorSpace:this.colorSpace,minFilter:this.minFilter,magFilter:this.magFilter,anisotropy:this.anisotropy,flipY:this.flipY,generateMipmaps:this.generateMipmaps,premultiplyAlpha:this.premultiplyAlpha,unpackAlignment:this.unpackAlignment};return Object.keys(this.userData).length>0&&(i.userData=this.userData),e||(t.textures[this.uuid]=i),i}dispose(){this.dispatchEvent({type:"dispose"})}transformUv(t){if(this.mapping!==kb)return t;if(t.applyMatrix3(this.matrix),t.x<0||t.x>1)switch(this.wrapS){case sy:t.x=t.x-Math.floor(t.x);break;case Mc:t.x=t.x<0?0:1;break;case ry:Math.abs(Math.floor(t.x)%2)===1?t.x=Math.ceil(t.x)-t.x:t.x=t.x-Math.floor(t.x);break}if(t.y<0||t.y>1)switch(this.wrapT){case sy:t.y=t.y-Math.floor(t.y);break;case Mc:t.y=t.y<0?0:1;break;case ry:Math.abs(Math.floor(t.y)%2)===1?t.y=Math.ceil(t.y)-t.y:t.y=t.y-Math.floor(t.y);break}return this.flipY&&(t.y=1-t.y),t}set needsUpdate(t){t===!0&&(this.version++,this.source.needsUpdate=!0)}set needsPMREMUpdate(t){t===!0&&this.pmremVersion++}}Fr.DEFAULT_IMAGE=null;Fr.DEFAULT_MAPPING=kb;Fr.DEFAULT_ANISOTROPY=1;class il{constructor(t=0,e=0,i=0,n=1){il.prototype.isVector4=!0,this.x=t,this.y=e,this.z=i,this.w=n}get width(){return this.z}set width(t){this.z=t}get height(){return this.w}set height(t){this.w=t}set(t,e,i,n){return this.x=t,this.y=e,this.z=i,this.w=n,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this.w=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setW(t){return this.w=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;case 3:this.w=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;case 3:return this.w;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z,this.w)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this.w=t.w!==void 0?t.w:1,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this.w+=t.w,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this.w+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this.w=t.w+e.w,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this.w+=t.w*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this.w-=t.w,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this.w-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this.w=t.w-e.w,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this.w*=t.w,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this.w*=t,this}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,s=this.w,o=t.elements;return this.x=o[0]*e+o[4]*i+o[8]*n+o[12]*s,this.y=o[1]*e+o[5]*i+o[9]*n+o[13]*s,this.z=o[2]*e+o[6]*i+o[10]*n+o[14]*s,this.w=o[3]*e+o[7]*i+o[11]*n+o[15]*s,this}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this.w/=t.w,this}divideScalar(t){return this.multiplyScalar(1/t)}setAxisAngleFromQuaternion(t){this.w=2*Math.acos(t.w);const e=Math.sqrt(1-t.w*t.w);return e<1e-4?(this.x=1,this.y=0,this.z=0):(this.x=t.x/e,this.y=t.y/e,this.z=t.z/e),this}setAxisAngleFromRotationMatrix(t){let e,i,n,s;const h=t.elements,l=h[0],c=h[4],u=h[8],d=h[1],f=h[5],p=h[9],_=h[2],g=h[6],m=h[10];if(Math.abs(c-d)<.01&&Math.abs(u-_)<.01&&Math.abs(p-g)<.01){if(Math.abs(c+d)<.1&&Math.abs(u+_)<.1&&Math.abs(p+g)<.1&&Math.abs(l+f+m-3)<.1)return this.set(1,0,0,0),this;e=Math.PI;const y=(l+1)/2,v=(f+1)/2,E=(m+1)/2,b=(c+d)/4,w=(u+_)/4,T=(p+g)/4;return y>v&&y>E?y<.01?(i=0,n=.707106781,s=.707106781):(i=Math.sqrt(y),n=b/i,s=w/i):v>E?v<.01?(i=.707106781,n=0,s=.707106781):(n=Math.sqrt(v),i=b/n,s=T/n):E<.01?(i=.707106781,n=.707106781,s=0):(s=Math.sqrt(E),i=w/s,n=T/s),this.set(i,n,s,e),this}let x=Math.sqrt((g-p)*(g-p)+(u-_)*(u-_)+(d-c)*(d-c));return Math.abs(x)<.001&&(x=1),this.x=(g-p)/x,this.y=(u-_)/x,this.z=(d-c)/x,this.w=Math.acos((l+f+m-1)/2),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this.w=e[15],this}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this.w=Math.min(this.w,t.w),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this.w=Math.max(this.w,t.w),this}clamp(t,e){return this.x=te(this.x,t.x,e.x),this.y=te(this.y,t.y,e.y),this.z=te(this.z,t.z,e.z),this.w=te(this.w,t.w,e.w),this}clampScalar(t,e){return this.x=te(this.x,t,e),this.y=te(this.y,t,e),this.z=te(this.z,t,e),this.w=te(this.w,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(te(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this.w=Math.floor(this.w),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this.w=Math.ceil(this.w),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this.w=Math.round(this.w),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this.w=Math.trunc(this.w),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this.w=-this.w,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z+this.w*t.w}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z+this.w*this.w)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)+Math.abs(this.w)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this.w+=(t.w-this.w)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this.w=t.w+(e.w-t.w)*i,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z&&t.w===this.w}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this.w=t[e+3],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t[e+3]=this.w,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this.w=t.getW(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this.w=Math.random(),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z,yield this.w}}class nl{constructor(t=0,e=0,i=0,n=1){this.isQuaternion=!0,this._x=t,this._y=e,this._z=i,this._w=n}static slerpFlat(t,e,i,n,s,o,a){let h=i[n+0],l=i[n+1],c=i[n+2],u=i[n+3];const d=s[o+0],f=s[o+1],p=s[o+2],_=s[o+3];if(a===0){t[e+0]=h,t[e+1]=l,t[e+2]=c,t[e+3]=u;return}if(a===1){t[e+0]=d,t[e+1]=f,t[e+2]=p,t[e+3]=_;return}if(u!==_||h!==d||l!==f||c!==p){let g=1-a;const m=h*d+l*f+c*p+u*_,x=m>=0?1:-1,y=1-m*m;if(y>Number.EPSILON){const E=Math.sqrt(y),b=Math.atan2(E,m*x);g=Math.sin(g*b)/E,a=Math.sin(a*b)/E}const v=a*x;if(h=h*g+d*v,l=l*g+f*v,c=c*g+p*v,u=u*g+_*v,g===1-a){const E=1/Math.sqrt(h*h+l*l+c*c+u*u);h*=E,l*=E,c*=E,u*=E}}t[e]=h,t[e+1]=l,t[e+2]=c,t[e+3]=u}static multiplyQuaternionsFlat(t,e,i,n,s,o){const a=i[n],h=i[n+1],l=i[n+2],c=i[n+3],u=s[o],d=s[o+1],f=s[o+2],p=s[o+3];return t[e]=a*p+c*u+h*f-l*d,t[e+1]=h*p+c*d+l*u-a*f,t[e+2]=l*p+c*f+a*d-h*u,t[e+3]=c*p-a*u-h*d-l*f,t}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get w(){return this._w}set w(t){this._w=t,this._onChangeCallback()}set(t,e,i,n){return this._x=t,this._y=e,this._z=i,this._w=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._w)}copy(t){return this._x=t.x,this._y=t.y,this._z=t.z,this._w=t.w,this._onChangeCallback(),this}setFromEuler(t,e=!0){const i=t._x,n=t._y,s=t._z,o=t._order,a=Math.cos,h=Math.sin,l=a(i/2),c=a(n/2),u=a(s/2),d=h(i/2),f=h(n/2),p=h(s/2);switch(o){case"XYZ":this._x=d*c*u+l*f*p,this._y=l*f*u-d*c*p,this._z=l*c*p+d*f*u,this._w=l*c*u-d*f*p;break;case"YXZ":this._x=d*c*u+l*f*p,this._y=l*f*u-d*c*p,this._z=l*c*p-d*f*u,this._w=l*c*u+d*f*p;break;case"ZXY":this._x=d*c*u-l*f*p,this._y=l*f*u+d*c*p,this._z=l*c*p+d*f*u,this._w=l*c*u-d*f*p;break;case"ZYX":this._x=d*c*u-l*f*p,this._y=l*f*u+d*c*p,this._z=l*c*p-d*f*u,this._w=l*c*u+d*f*p;break;case"YZX":this._x=d*c*u+l*f*p,this._y=l*f*u+d*c*p,this._z=l*c*p-d*f*u,this._w=l*c*u-d*f*p;break;case"XZY":this._x=d*c*u-l*f*p,this._y=l*f*u-d*c*p,this._z=l*c*p+d*f*u,this._w=l*c*u+d*f*p;break;default:console.warn("THREE.Quaternion: .setFromEuler() encountered an unknown order: "+o)}return e===!0&&this._onChangeCallback(),this}setFromAxisAngle(t,e){const i=e/2,n=Math.sin(i);return this._x=t.x*n,this._y=t.y*n,this._z=t.z*n,this._w=Math.cos(i),this._onChangeCallback(),this}setFromRotationMatrix(t){const e=t.elements,i=e[0],n=e[4],s=e[8],o=e[1],a=e[5],h=e[9],l=e[2],c=e[6],u=e[10],d=i+a+u;if(d>0){const f=.5/Math.sqrt(d+1);this._w=.25/f,this._x=(c-h)*f,this._y=(s-l)*f,this._z=(o-n)*f}else if(i>a&&i>u){const f=2*Math.sqrt(1+i-a-u);this._w=(c-h)/f,this._x=.25*f,this._y=(n+o)/f,this._z=(s+l)/f}else if(a>u){const f=2*Math.sqrt(1+a-i-u);this._w=(s-l)/f,this._x=(n+o)/f,this._y=.25*f,this._z=(h+c)/f}else{const f=2*Math.sqrt(1+u-i-a);this._w=(o-n)/f,this._x=(s+l)/f,this._y=(h+c)/f,this._z=.25*f}return this._onChangeCallback(),this}setFromUnitVectors(t,e){let i=t.dot(e)+1;return i<Number.EPSILON?(i=0,Math.abs(t.x)>Math.abs(t.z)?(this._x=-t.y,this._y=t.x,this._z=0,this._w=i):(this._x=0,this._y=-t.z,this._z=t.y,this._w=i)):(this._x=t.y*e.z-t.z*e.y,this._y=t.z*e.x-t.x*e.z,this._z=t.x*e.y-t.y*e.x,this._w=i),this.normalize()}angleTo(t){return 2*Math.acos(Math.abs(te(this.dot(t),-1,1)))}rotateTowards(t,e){const i=this.angleTo(t);if(i===0)return this;const n=Math.min(1,e/i);return this.slerp(t,n),this}identity(){return this.set(0,0,0,1)}invert(){return this.conjugate()}conjugate(){return this._x*=-1,this._y*=-1,this._z*=-1,this._onChangeCallback(),this}dot(t){return this._x*t._x+this._y*t._y+this._z*t._z+this._w*t._w}lengthSq(){return this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w}length(){return Math.sqrt(this._x*this._x+this._y*this._y+this._z*this._z+this._w*this._w)}normalize(){let t=this.length();return t===0?(this._x=0,this._y=0,this._z=0,this._w=1):(t=1/t,this._x=this._x*t,this._y=this._y*t,this._z=this._z*t,this._w=this._w*t),this._onChangeCallback(),this}multiply(t){return this.multiplyQuaternions(this,t)}premultiply(t){return this.multiplyQuaternions(t,this)}multiplyQuaternions(t,e){const i=t._x,n=t._y,s=t._z,o=t._w,a=e._x,h=e._y,l=e._z,c=e._w;return this._x=i*c+o*a+n*l-s*h,this._y=n*c+o*h+s*a-i*l,this._z=s*c+o*l+i*h-n*a,this._w=o*c-i*a-n*h-s*l,this._onChangeCallback(),this}slerp(t,e){if(e===0)return this;if(e===1)return this.copy(t);const i=this._x,n=this._y,s=this._z,o=this._w;let a=o*t._w+i*t._x+n*t._y+s*t._z;if(a<0?(this._w=-t._w,this._x=-t._x,this._y=-t._y,this._z=-t._z,a=-a):this.copy(t),a>=1)return this._w=o,this._x=i,this._y=n,this._z=s,this;const h=1-a*a;if(h<=Number.EPSILON){const f=1-e;return this._w=f*o+e*this._w,this._x=f*i+e*this._x,this._y=f*n+e*this._y,this._z=f*s+e*this._z,this.normalize(),this}const l=Math.sqrt(h),c=Math.atan2(l,a),u=Math.sin((1-e)*c)/l,d=Math.sin(e*c)/l;return this._w=o*u+this._w*d,this._x=i*u+this._x*d,this._y=n*u+this._y*d,this._z=s*u+this._z*d,this._onChangeCallback(),this}slerpQuaternions(t,e,i){return this.copy(t).slerp(e,i)}random(){const t=2*Math.PI*Math.random(),e=2*Math.PI*Math.random(),i=Math.random(),n=Math.sqrt(1-i),s=Math.sqrt(i);return this.set(n*Math.sin(t),n*Math.cos(t),s*Math.sin(e),s*Math.cos(e))}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._w===this._w}fromArray(t,e=0){return this._x=t[e],this._y=t[e+1],this._z=t[e+2],this._w=t[e+3],this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._w,t}fromBufferAttribute(t,e){return this._x=t.getX(e),this._y=t.getY(e),this._z=t.getZ(e),this._w=t.getW(e),this._onChangeCallback(),this}toJSON(){return this.toArray()}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._w}}class V{constructor(t=0,e=0,i=0){V.prototype.isVector3=!0,this.x=t,this.y=e,this.z=i}set(t,e,i){return i===void 0&&(i=this.z),this.x=t,this.y=e,this.z=i,this}setScalar(t){return this.x=t,this.y=t,this.z=t,this}setX(t){return this.x=t,this}setY(t){return this.y=t,this}setZ(t){return this.z=t,this}setComponent(t,e){switch(t){case 0:this.x=e;break;case 1:this.y=e;break;case 2:this.z=e;break;default:throw new Error("index is out of range: "+t)}return this}getComponent(t){switch(t){case 0:return this.x;case 1:return this.y;case 2:return this.z;default:throw new Error("index is out of range: "+t)}}clone(){return new this.constructor(this.x,this.y,this.z)}copy(t){return this.x=t.x,this.y=t.y,this.z=t.z,this}add(t){return this.x+=t.x,this.y+=t.y,this.z+=t.z,this}addScalar(t){return this.x+=t,this.y+=t,this.z+=t,this}addVectors(t,e){return this.x=t.x+e.x,this.y=t.y+e.y,this.z=t.z+e.z,this}addScaledVector(t,e){return this.x+=t.x*e,this.y+=t.y*e,this.z+=t.z*e,this}sub(t){return this.x-=t.x,this.y-=t.y,this.z-=t.z,this}subScalar(t){return this.x-=t,this.y-=t,this.z-=t,this}subVectors(t,e){return this.x=t.x-e.x,this.y=t.y-e.y,this.z=t.z-e.z,this}multiply(t){return this.x*=t.x,this.y*=t.y,this.z*=t.z,this}multiplyScalar(t){return this.x*=t,this.y*=t,this.z*=t,this}multiplyVectors(t,e){return this.x=t.x*e.x,this.y=t.y*e.y,this.z=t.z*e.z,this}applyEuler(t){return this.applyQuaternion(py.setFromEuler(t))}applyAxisAngle(t,e){return this.applyQuaternion(py.setFromAxisAngle(t,e))}applyMatrix3(t){const e=this.x,i=this.y,n=this.z,s=t.elements;return this.x=s[0]*e+s[3]*i+s[6]*n,this.y=s[1]*e+s[4]*i+s[7]*n,this.z=s[2]*e+s[5]*i+s[8]*n,this}applyNormalMatrix(t){return this.applyMatrix3(t).normalize()}applyMatrix4(t){const e=this.x,i=this.y,n=this.z,s=t.elements,o=1/(s[3]*e+s[7]*i+s[11]*n+s[15]);return this.x=(s[0]*e+s[4]*i+s[8]*n+s[12])*o,this.y=(s[1]*e+s[5]*i+s[9]*n+s[13])*o,this.z=(s[2]*e+s[6]*i+s[10]*n+s[14])*o,this}applyQuaternion(t){const e=this.x,i=this.y,n=this.z,s=t.x,o=t.y,a=t.z,h=t.w,l=2*(o*n-a*i),c=2*(a*e-s*n),u=2*(s*i-o*e);return this.x=e+h*l+o*u-a*c,this.y=i+h*c+a*l-s*u,this.z=n+h*u+s*c-o*l,this}project(t){return this.applyMatrix4(t.matrixWorldInverse).applyMatrix4(t.projectionMatrix)}unproject(t){return this.applyMatrix4(t.projectionMatrixInverse).applyMatrix4(t.matrixWorld)}transformDirection(t){const e=this.x,i=this.y,n=this.z,s=t.elements;return this.x=s[0]*e+s[4]*i+s[8]*n,this.y=s[1]*e+s[5]*i+s[9]*n,this.z=s[2]*e+s[6]*i+s[10]*n,this.normalize()}divide(t){return this.x/=t.x,this.y/=t.y,this.z/=t.z,this}divideScalar(t){return this.multiplyScalar(1/t)}min(t){return this.x=Math.min(this.x,t.x),this.y=Math.min(this.y,t.y),this.z=Math.min(this.z,t.z),this}max(t){return this.x=Math.max(this.x,t.x),this.y=Math.max(this.y,t.y),this.z=Math.max(this.z,t.z),this}clamp(t,e){return this.x=te(this.x,t.x,e.x),this.y=te(this.y,t.y,e.y),this.z=te(this.z,t.z,e.z),this}clampScalar(t,e){return this.x=te(this.x,t,e),this.y=te(this.y,t,e),this.z=te(this.z,t,e),this}clampLength(t,e){const i=this.length();return this.divideScalar(i||1).multiplyScalar(te(i,t,e))}floor(){return this.x=Math.floor(this.x),this.y=Math.floor(this.y),this.z=Math.floor(this.z),this}ceil(){return this.x=Math.ceil(this.x),this.y=Math.ceil(this.y),this.z=Math.ceil(this.z),this}round(){return this.x=Math.round(this.x),this.y=Math.round(this.y),this.z=Math.round(this.z),this}roundToZero(){return this.x=Math.trunc(this.x),this.y=Math.trunc(this.y),this.z=Math.trunc(this.z),this}negate(){return this.x=-this.x,this.y=-this.y,this.z=-this.z,this}dot(t){return this.x*t.x+this.y*t.y+this.z*t.z}lengthSq(){return this.x*this.x+this.y*this.y+this.z*this.z}length(){return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z)}manhattanLength(){return Math.abs(this.x)+Math.abs(this.y)+Math.abs(this.z)}normalize(){return this.divideScalar(this.length()||1)}setLength(t){return this.normalize().multiplyScalar(t)}lerp(t,e){return this.x+=(t.x-this.x)*e,this.y+=(t.y-this.y)*e,this.z+=(t.z-this.z)*e,this}lerpVectors(t,e,i){return this.x=t.x+(e.x-t.x)*i,this.y=t.y+(e.y-t.y)*i,this.z=t.z+(e.z-t.z)*i,this}cross(t){return this.crossVectors(this,t)}crossVectors(t,e){const i=t.x,n=t.y,s=t.z,o=e.x,a=e.y,h=e.z;return this.x=n*h-s*a,this.y=s*o-i*h,this.z=i*a-n*o,this}projectOnVector(t){const e=t.lengthSq();if(e===0)return this.set(0,0,0);const i=t.dot(this)/e;return this.copy(t).multiplyScalar(i)}projectOnPlane(t){return np.copy(this).projectOnVector(t),this.sub(np)}reflect(t){return this.sub(np.copy(t).multiplyScalar(2*this.dot(t)))}angleTo(t){const e=Math.sqrt(this.lengthSq()*t.lengthSq());if(e===0)return Math.PI/2;const i=this.dot(t)/e;return Math.acos(te(i,-1,1))}distanceTo(t){return Math.sqrt(this.distanceToSquared(t))}distanceToSquared(t){const e=this.x-t.x,i=this.y-t.y,n=this.z-t.z;return e*e+i*i+n*n}manhattanDistanceTo(t){return Math.abs(this.x-t.x)+Math.abs(this.y-t.y)+Math.abs(this.z-t.z)}setFromSpherical(t){return this.setFromSphericalCoords(t.radius,t.phi,t.theta)}setFromSphericalCoords(t,e,i){const n=Math.sin(e)*t;return this.x=n*Math.sin(i),this.y=Math.cos(e)*t,this.z=n*Math.cos(i),this}setFromCylindrical(t){return this.setFromCylindricalCoords(t.radius,t.theta,t.y)}setFromCylindricalCoords(t,e,i){return this.x=t*Math.sin(e),this.y=i,this.z=t*Math.cos(e),this}setFromMatrixPosition(t){const e=t.elements;return this.x=e[12],this.y=e[13],this.z=e[14],this}setFromMatrixScale(t){const e=this.setFromMatrixColumn(t,0).length(),i=this.setFromMatrixColumn(t,1).length(),n=this.setFromMatrixColumn(t,2).length();return this.x=e,this.y=i,this.z=n,this}setFromMatrixColumn(t,e){return this.fromArray(t.elements,e*4)}setFromMatrix3Column(t,e){return this.fromArray(t.elements,e*3)}setFromEuler(t){return this.x=t._x,this.y=t._y,this.z=t._z,this}setFromColor(t){return this.x=t.r,this.y=t.g,this.z=t.b,this}equals(t){return t.x===this.x&&t.y===this.y&&t.z===this.z}fromArray(t,e=0){return this.x=t[e],this.y=t[e+1],this.z=t[e+2],this}toArray(t=[],e=0){return t[e]=this.x,t[e+1]=this.y,t[e+2]=this.z,t}fromBufferAttribute(t,e){return this.x=t.getX(e),this.y=t.getY(e),this.z=t.getZ(e),this}random(){return this.x=Math.random(),this.y=Math.random(),this.z=Math.random(),this}randomDirection(){const t=Math.random()*Math.PI*2,e=Math.random()*2-1,i=Math.sqrt(1-e*e);return this.x=i*Math.cos(t),this.y=e,this.z=i*Math.sin(t),this}*[Symbol.iterator](){yield this.x,yield this.y,yield this.z}}const np=new V,py=new nl;class qr{constructor(t=new V(1/0,1/0,1/0),e=new V(-1/0,-1/0,-1/0)){this.isBox3=!0,this.min=t,this.max=e}set(t,e){return this.min.copy(t),this.max.copy(e),this}setFromArray(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e+=3)this.expandByPoint(xn.fromArray(t,e));return this}setFromBufferAttribute(t){this.makeEmpty();for(let e=0,i=t.count;e<i;e++)this.expandByPoint(xn.fromBufferAttribute(t,e));return this}setFromPoints(t){this.makeEmpty();for(let e=0,i=t.length;e<i;e++)this.expandByPoint(t[e]);return this}setFromCenterAndSize(t,e){const i=xn.copy(e).multiplyScalar(.5);return this.min.copy(t).sub(i),this.max.copy(t).add(i),this}setFromObject(t,e=!1){return this.makeEmpty(),this.expandByObject(t,e)}clone(){return new this.constructor().copy(this)}copy(t){return this.min.copy(t.min),this.max.copy(t.max),this}makeEmpty(){return this.min.x=this.min.y=this.min.z=1/0,this.max.x=this.max.y=this.max.z=-1/0,this}isEmpty(){return this.max.x<this.min.x||this.max.y<this.min.y||this.max.z<this.min.z}getCenter(t){return this.isEmpty()?t.set(0,0,0):t.addVectors(this.min,this.max).multiplyScalar(.5)}getSize(t){return this.isEmpty()?t.set(0,0,0):t.subVectors(this.max,this.min)}expandByPoint(t){return this.min.min(t),this.max.max(t),this}expandByVector(t){return this.min.sub(t),this.max.add(t),this}expandByScalar(t){return this.min.addScalar(-t),this.max.addScalar(t),this}expandByObject(t,e=!1){t.updateWorldMatrix(!1,!1);const i=t.geometry;if(i!==void 0){const s=i.getAttribute("position");if(e===!0&&s!==void 0&&t.isInstancedMesh!==!0)for(let o=0,a=s.count;o<a;o++)t.isMesh===!0?t.getVertexPosition(o,xn):xn.fromBufferAttribute(s,o),xn.applyMatrix4(t.matrixWorld),this.expandByPoint(xn);else t.boundingBox!==void 0?(t.boundingBox===null&&t.computeBoundingBox(),Sc.copy(t.boundingBox)):(i.boundingBox===null&&i.computeBoundingBox(),Sc.copy(i.boundingBox)),Sc.applyMatrix4(t.matrixWorld),this.union(Sc)}const n=t.children;for(let s=0,o=n.length;s<o;s++)this.expandByObject(n[s],e);return this}containsPoint(t){return t.x>=this.min.x&&t.x<=this.max.x&&t.y>=this.min.y&&t.y<=this.max.y&&t.z>=this.min.z&&t.z<=this.max.z}containsBox(t){return this.min.x<=t.min.x&&t.max.x<=this.max.x&&this.min.y<=t.min.y&&t.max.y<=this.max.y&&this.min.z<=t.min.z&&t.max.z<=this.max.z}getParameter(t,e){return e.set((t.x-this.min.x)/(this.max.x-this.min.x),(t.y-this.min.y)/(this.max.y-this.min.y),(t.z-this.min.z)/(this.max.z-this.min.z))}intersectsBox(t){return t.max.x>=this.min.x&&t.min.x<=this.max.x&&t.max.y>=this.min.y&&t.min.y<=this.max.y&&t.max.z>=this.min.z&&t.min.z<=this.max.z}intersectsSphere(t){return this.clampPoint(t.center,xn),xn.distanceToSquared(t.center)<=t.radius*t.radius}intersectsPlane(t){let e,i;return t.normal.x>0?(e=t.normal.x*this.min.x,i=t.normal.x*this.max.x):(e=t.normal.x*this.max.x,i=t.normal.x*this.min.x),t.normal.y>0?(e+=t.normal.y*this.min.y,i+=t.normal.y*this.max.y):(e+=t.normal.y*this.max.y,i+=t.normal.y*this.min.y),t.normal.z>0?(e+=t.normal.z*this.min.z,i+=t.normal.z*this.max.z):(e+=t.normal.z*this.max.z,i+=t.normal.z*this.min.z),e<=-t.constant&&i>=-t.constant}intersectsTriangle(t){if(this.isEmpty())return!1;this.getCenter(Ga),Ac.subVectors(this.max,Ga),Do.subVectors(t.a,Ga),Oo.subVectors(t.b,Ga),Fo.subVectors(t.c,Ga),Os.subVectors(Oo,Do),Fs.subVectors(Fo,Oo),gr.subVectors(Do,Fo);let e=[0,-Os.z,Os.y,0,-Fs.z,Fs.y,0,-gr.z,gr.y,Os.z,0,-Os.x,Fs.z,0,-Fs.x,gr.z,0,-gr.x,-Os.y,Os.x,0,-Fs.y,Fs.x,0,-gr.y,gr.x,0];return!sp(e,Do,Oo,Fo,Ac)||(e=[1,0,0,0,1,0,0,0,1],!sp(e,Do,Oo,Fo,Ac))?!1:(Ec.crossVectors(Os,Fs),e=[Ec.x,Ec.y,Ec.z],sp(e,Do,Oo,Fo,Ac))}clampPoint(t,e){return e.copy(t).clamp(this.min,this.max)}distanceToPoint(t){return this.clampPoint(t,xn).distanceTo(t)}getBoundingSphere(t){return this.isEmpty()?t.makeEmpty():(this.getCenter(t.center),t.radius=this.getSize(xn).length()*.5),t}intersect(t){return this.min.max(t.min),this.max.min(t.max),this.isEmpty()&&this.makeEmpty(),this}union(t){return this.min.min(t.min),this.max.max(t.max),this}applyMatrix4(t){return this.isEmpty()?this:(ns[0].set(this.min.x,this.min.y,this.min.z).applyMatrix4(t),ns[1].set(this.min.x,this.min.y,this.max.z).applyMatrix4(t),ns[2].set(this.min.x,this.max.y,this.min.z).applyMatrix4(t),ns[3].set(this.min.x,this.max.y,this.max.z).applyMatrix4(t),ns[4].set(this.max.x,this.min.y,this.min.z).applyMatrix4(t),ns[5].set(this.max.x,this.min.y,this.max.z).applyMatrix4(t),ns[6].set(this.max.x,this.max.y,this.min.z).applyMatrix4(t),ns[7].set(this.max.x,this.max.y,this.max.z).applyMatrix4(t),this.setFromPoints(ns),this)}translate(t){return this.min.add(t),this.max.add(t),this}equals(t){return t.min.equals(this.min)&&t.max.equals(this.max)}}const ns=[new V,new V,new V,new V,new V,new V,new V,new V],xn=new V,Sc=new qr,Do=new V,Oo=new V,Fo=new V,Os=new V,Fs=new V,gr=new V,Ga=new V,Ac=new V,Ec=new V,_r=new V;function sp(r,t,e,i,n){for(let s=0,o=r.length-3;s<=o;s+=3){_r.fromArray(r,s);const a=n.x*Math.abs(_r.x)+n.y*Math.abs(_r.y)+n.z*Math.abs(_r.z),h=t.dot(_r),l=e.dot(_r),c=i.dot(_r);if(Math.max(-Math.max(h,l,c),Math.min(h,l,c))>a)return!1}return!0}const OR=new qr,Wa=new V,rp=new V;class fg{constructor(t=new V,e=-1){this.isSphere=!0,this.center=t,this.radius=e}set(t,e){return this.center.copy(t),this.radius=e,this}setFromPoints(t,e){const i=this.center;e!==void 0?i.copy(e):OR.setFromPoints(t).getCenter(i);let n=0;for(let s=0,o=t.length;s<o;s++)n=Math.max(n,i.distanceToSquared(t[s]));return this.radius=Math.sqrt(n),this}copy(t){return this.center.copy(t.center),this.radius=t.radius,this}isEmpty(){return this.radius<0}makeEmpty(){return this.center.set(0,0,0),this.radius=-1,this}containsPoint(t){return t.distanceToSquared(this.center)<=this.radius*this.radius}distanceToPoint(t){return t.distanceTo(this.center)-this.radius}intersectsSphere(t){const e=this.radius+t.radius;return t.center.distanceToSquared(this.center)<=e*e}intersectsBox(t){return t.intersectsSphere(this)}intersectsPlane(t){return Math.abs(t.distanceToPoint(this.center))<=this.radius}clampPoint(t,e){const i=this.center.distanceToSquared(t);return e.copy(t),i>this.radius*this.radius&&(e.sub(this.center).normalize(),e.multiplyScalar(this.radius).add(this.center)),e}getBoundingBox(t){return this.isEmpty()?(t.makeEmpty(),t):(t.set(this.center,this.center),t.expandByScalar(this.radius),t)}applyMatrix4(t){return this.center.applyMatrix4(t),this.radius=this.radius*t.getMaxScaleOnAxis(),this}translate(t){return this.center.add(t),this}expandByPoint(t){if(this.isEmpty())return this.center.copy(t),this.radius=0,this;Wa.subVectors(t,this.center);const e=Wa.lengthSq();if(e>this.radius*this.radius){const i=Math.sqrt(e),n=(i-this.radius)*.5;this.center.addScaledVector(Wa,n/i),this.radius+=n}return this}union(t){return t.isEmpty()?this:this.isEmpty()?(this.copy(t),this):(this.center.equals(t.center)===!0?this.radius=Math.max(this.radius,t.radius):(rp.subVectors(t.center,this.center).setLength(t.radius),this.expandByPoint(Wa.copy(t.center).add(rp)),this.expandByPoint(Wa.copy(t.center).sub(rp))),this)}equals(t){return t.center.equals(this.center)&&t.radius===this.radius}clone(){return new this.constructor().copy(this)}}const ss=new V,op=new V,Tc=new V,zs=new V,ap=new V,Cc=new V,hp=new V;class pg{constructor(t=new V,e=new V(0,0,-1)){this.origin=t,this.direction=e}set(t,e){return this.origin.copy(t),this.direction.copy(e),this}copy(t){return this.origin.copy(t.origin),this.direction.copy(t.direction),this}at(t,e){return e.copy(this.origin).addScaledVector(this.direction,t)}lookAt(t){return this.direction.copy(t).sub(this.origin).normalize(),this}recast(t){return this.origin.copy(this.at(t,ss)),this}closestPointToPoint(t,e){e.subVectors(t,this.origin);const i=e.dot(this.direction);return i<0?e.copy(this.origin):e.copy(this.origin).addScaledVector(this.direction,i)}distanceToPoint(t){return Math.sqrt(this.distanceSqToPoint(t))}distanceSqToPoint(t){const e=ss.subVectors(t,this.origin).dot(this.direction);return e<0?this.origin.distanceToSquared(t):(ss.copy(this.origin).addScaledVector(this.direction,e),ss.distanceToSquared(t))}distanceSqToSegment(t,e,i,n){op.copy(t).add(e).multiplyScalar(.5),Tc.copy(e).sub(t).normalize(),zs.copy(this.origin).sub(op);const s=t.distanceTo(e)*.5,o=-this.direction.dot(Tc),a=zs.dot(this.direction),h=-zs.dot(Tc),l=zs.lengthSq(),c=Math.abs(1-o*o);let u,d,f,p;if(c>0)if(u=o*h-a,d=o*a-h,p=s*c,u>=0)if(d>=-p)if(d<=p){const _=1/c;u*=_,d*=_,f=u*(u+o*d+2*a)+d*(o*u+d+2*h)+l}else d=s,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*h)+l;else d=-s,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*h)+l;else d<=-p?(u=Math.max(0,-(-o*s+a)),d=u>0?-s:Math.min(Math.max(-s,-h),s),f=-u*u+d*(d+2*h)+l):d<=p?(u=0,d=Math.min(Math.max(-s,-h),s),f=d*(d+2*h)+l):(u=Math.max(0,-(o*s+a)),d=u>0?s:Math.min(Math.max(-s,-h),s),f=-u*u+d*(d+2*h)+l);else d=o>0?-s:s,u=Math.max(0,-(o*d+a)),f=-u*u+d*(d+2*h)+l;return i&&i.copy(this.origin).addScaledVector(this.direction,u),n&&n.copy(op).addScaledVector(Tc,d),f}intersectSphere(t,e){ss.subVectors(t.center,this.origin);const i=ss.dot(this.direction),n=ss.dot(ss)-i*i,s=t.radius*t.radius;if(n>s)return null;const o=Math.sqrt(s-n),a=i-o,h=i+o;return h<0?null:a<0?this.at(h,e):this.at(a,e)}intersectsSphere(t){return this.distanceSqToPoint(t.center)<=t.radius*t.radius}distanceToPlane(t){const e=t.normal.dot(this.direction);if(e===0)return t.distanceToPoint(this.origin)===0?0:null;const i=-(this.origin.dot(t.normal)+t.constant)/e;return i>=0?i:null}intersectPlane(t,e){const i=this.distanceToPlane(t);return i===null?null:this.at(i,e)}intersectsPlane(t){const e=t.distanceToPoint(this.origin);return e===0||t.normal.dot(this.direction)*e<0}intersectBox(t,e){let i,n,s,o,a,h;const l=1/this.direction.x,c=1/this.direction.y,u=1/this.direction.z,d=this.origin;return l>=0?(i=(t.min.x-d.x)*l,n=(t.max.x-d.x)*l):(i=(t.max.x-d.x)*l,n=(t.min.x-d.x)*l),c>=0?(s=(t.min.y-d.y)*c,o=(t.max.y-d.y)*c):(s=(t.max.y-d.y)*c,o=(t.min.y-d.y)*c),i>o||s>n||((s>i||isNaN(i))&&(i=s),(o<n||isNaN(n))&&(n=o),u>=0?(a=(t.min.z-d.z)*u,h=(t.max.z-d.z)*u):(a=(t.max.z-d.z)*u,h=(t.min.z-d.z)*u),i>h||a>n)||((a>i||i!==i)&&(i=a),(h<n||n!==n)&&(n=h),n<0)?null:this.at(i>=0?i:n,e)}intersectsBox(t){return this.intersectBox(t,ss)!==null}intersectTriangle(t,e,i,n,s){ap.subVectors(e,t),Cc.subVectors(i,t),hp.crossVectors(ap,Cc);let o=this.direction.dot(hp),a;if(o>0){if(n)return null;a=1}else if(o<0)a=-1,o=-o;else return null;zs.subVectors(this.origin,t);const h=a*this.direction.dot(Cc.crossVectors(zs,Cc));if(h<0)return null;const l=a*this.direction.dot(ap.cross(zs));if(l<0||h+l>o)return null;const c=-a*zs.dot(hp);return c<0?null:this.at(c/o,s)}applyMatrix4(t){return this.origin.applyMatrix4(t),this.direction.transformDirection(t),this}equals(t){return t.origin.equals(this.origin)&&t.direction.equals(this.direction)}clone(){return new this.constructor().copy(this)}}class Li{constructor(t,e,i,n,s,o,a,h,l,c,u,d,f,p,_,g){Li.prototype.isMatrix4=!0,this.elements=[1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1],t!==void 0&&this.set(t,e,i,n,s,o,a,h,l,c,u,d,f,p,_,g)}set(t,e,i,n,s,o,a,h,l,c,u,d,f,p,_,g){const m=this.elements;return m[0]=t,m[4]=e,m[8]=i,m[12]=n,m[1]=s,m[5]=o,m[9]=a,m[13]=h,m[2]=l,m[6]=c,m[10]=u,m[14]=d,m[3]=f,m[7]=p,m[11]=_,m[15]=g,this}identity(){return this.set(1,0,0,0,0,1,0,0,0,0,1,0,0,0,0,1),this}clone(){return new Li().fromArray(this.elements)}copy(t){const e=this.elements,i=t.elements;return e[0]=i[0],e[1]=i[1],e[2]=i[2],e[3]=i[3],e[4]=i[4],e[5]=i[5],e[6]=i[6],e[7]=i[7],e[8]=i[8],e[9]=i[9],e[10]=i[10],e[11]=i[11],e[12]=i[12],e[13]=i[13],e[14]=i[14],e[15]=i[15],this}copyPosition(t){const e=this.elements,i=t.elements;return e[12]=i[12],e[13]=i[13],e[14]=i[14],this}setFromMatrix3(t){const e=t.elements;return this.set(e[0],e[3],e[6],0,e[1],e[4],e[7],0,e[2],e[5],e[8],0,0,0,0,1),this}extractBasis(t,e,i){return t.setFromMatrixColumn(this,0),e.setFromMatrixColumn(this,1),i.setFromMatrixColumn(this,2),this}makeBasis(t,e,i){return this.set(t.x,e.x,i.x,0,t.y,e.y,i.y,0,t.z,e.z,i.z,0,0,0,0,1),this}extractRotation(t){const e=this.elements,i=t.elements,n=1/zo.setFromMatrixColumn(t,0).length(),s=1/zo.setFromMatrixColumn(t,1).length(),o=1/zo.setFromMatrixColumn(t,2).length();return e[0]=i[0]*n,e[1]=i[1]*n,e[2]=i[2]*n,e[3]=0,e[4]=i[4]*s,e[5]=i[5]*s,e[6]=i[6]*s,e[7]=0,e[8]=i[8]*o,e[9]=i[9]*o,e[10]=i[10]*o,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromEuler(t){const e=this.elements,i=t.x,n=t.y,s=t.z,o=Math.cos(i),a=Math.sin(i),h=Math.cos(n),l=Math.sin(n),c=Math.cos(s),u=Math.sin(s);if(t.order==="XYZ"){const d=o*c,f=o*u,p=a*c,_=a*u;e[0]=h*c,e[4]=-h*u,e[8]=l,e[1]=f+p*l,e[5]=d-_*l,e[9]=-a*h,e[2]=_-d*l,e[6]=p+f*l,e[10]=o*h}else if(t.order==="YXZ"){const d=h*c,f=h*u,p=l*c,_=l*u;e[0]=d+_*a,e[4]=p*a-f,e[8]=o*l,e[1]=o*u,e[5]=o*c,e[9]=-a,e[2]=f*a-p,e[6]=_+d*a,e[10]=o*h}else if(t.order==="ZXY"){const d=h*c,f=h*u,p=l*c,_=l*u;e[0]=d-_*a,e[4]=-o*u,e[8]=p+f*a,e[1]=f+p*a,e[5]=o*c,e[9]=_-d*a,e[2]=-o*l,e[6]=a,e[10]=o*h}else if(t.order==="ZYX"){const d=o*c,f=o*u,p=a*c,_=a*u;e[0]=h*c,e[4]=p*l-f,e[8]=d*l+_,e[1]=h*u,e[5]=_*l+d,e[9]=f*l-p,e[2]=-l,e[6]=a*h,e[10]=o*h}else if(t.order==="YZX"){const d=o*h,f=o*l,p=a*h,_=a*l;e[0]=h*c,e[4]=_-d*u,e[8]=p*u+f,e[1]=u,e[5]=o*c,e[9]=-a*c,e[2]=-l*c,e[6]=f*u+p,e[10]=d-_*u}else if(t.order==="XZY"){const d=o*h,f=o*l,p=a*h,_=a*l;e[0]=h*c,e[4]=-u,e[8]=l*c,e[1]=d*u+_,e[5]=o*c,e[9]=f*u-p,e[2]=p*u-f,e[6]=a*c,e[10]=_*u+d}return e[3]=0,e[7]=0,e[11]=0,e[12]=0,e[13]=0,e[14]=0,e[15]=1,this}makeRotationFromQuaternion(t){return this.compose(FR,t,zR)}lookAt(t,e,i){const n=this.elements;return Vi.subVectors(t,e),Vi.lengthSq()===0&&(Vi.z=1),Vi.normalize(),Us.crossVectors(i,Vi),Us.lengthSq()===0&&(Math.abs(i.z)===1?Vi.x+=1e-4:Vi.z+=1e-4,Vi.normalize(),Us.crossVectors(i,Vi)),Us.normalize(),Rc.crossVectors(Vi,Us),n[0]=Us.x,n[4]=Rc.x,n[8]=Vi.x,n[1]=Us.y,n[5]=Rc.y,n[9]=Vi.y,n[2]=Us.z,n[6]=Rc.z,n[10]=Vi.z,this}multiply(t){return this.multiplyMatrices(this,t)}premultiply(t){return this.multiplyMatrices(t,this)}multiplyMatrices(t,e){const i=t.elements,n=e.elements,s=this.elements,o=i[0],a=i[4],h=i[8],l=i[12],c=i[1],u=i[5],d=i[9],f=i[13],p=i[2],_=i[6],g=i[10],m=i[14],x=i[3],y=i[7],v=i[11],E=i[15],b=n[0],w=n[4],T=n[8],S=n[12],M=n[1],I=n[5],N=n[9],O=n[13],B=n[2],Y=n[6],$=n[10],st=n[14],X=n[3],ut=n[7],pt=n[11],mt=n[15];return s[0]=o*b+a*M+h*B+l*X,s[4]=o*w+a*I+h*Y+l*ut,s[8]=o*T+a*N+h*$+l*pt,s[12]=o*S+a*O+h*st+l*mt,s[1]=c*b+u*M+d*B+f*X,s[5]=c*w+u*I+d*Y+f*ut,s[9]=c*T+u*N+d*$+f*pt,s[13]=c*S+u*O+d*st+f*mt,s[2]=p*b+_*M+g*B+m*X,s[6]=p*w+_*I+g*Y+m*ut,s[10]=p*T+_*N+g*$+m*pt,s[14]=p*S+_*O+g*st+m*mt,s[3]=x*b+y*M+v*B+E*X,s[7]=x*w+y*I+v*Y+E*ut,s[11]=x*T+y*N+v*$+E*pt,s[15]=x*S+y*O+v*st+E*mt,this}multiplyScalar(t){const e=this.elements;return e[0]*=t,e[4]*=t,e[8]*=t,e[12]*=t,e[1]*=t,e[5]*=t,e[9]*=t,e[13]*=t,e[2]*=t,e[6]*=t,e[10]*=t,e[14]*=t,e[3]*=t,e[7]*=t,e[11]*=t,e[15]*=t,this}determinant(){const t=this.elements,e=t[0],i=t[4],n=t[8],s=t[12],o=t[1],a=t[5],h=t[9],l=t[13],c=t[2],u=t[6],d=t[10],f=t[14],p=t[3],_=t[7],g=t[11],m=t[15];return p*(+s*h*u-n*l*u-s*a*d+i*l*d+n*a*f-i*h*f)+_*(+e*h*f-e*l*d+s*o*d-n*o*f+n*l*c-s*h*c)+g*(+e*l*u-e*a*f-s*o*u+i*o*f+s*a*c-i*l*c)+m*(-n*a*c-e*h*u+e*a*d+n*o*u-i*o*d+i*h*c)}transpose(){const t=this.elements;let e;return e=t[1],t[1]=t[4],t[4]=e,e=t[2],t[2]=t[8],t[8]=e,e=t[6],t[6]=t[9],t[9]=e,e=t[3],t[3]=t[12],t[12]=e,e=t[7],t[7]=t[13],t[13]=e,e=t[11],t[11]=t[14],t[14]=e,this}setPosition(t,e,i){const n=this.elements;return t.isVector3?(n[12]=t.x,n[13]=t.y,n[14]=t.z):(n[12]=t,n[13]=e,n[14]=i),this}invert(){const t=this.elements,e=t[0],i=t[1],n=t[2],s=t[3],o=t[4],a=t[5],h=t[6],l=t[7],c=t[8],u=t[9],d=t[10],f=t[11],p=t[12],_=t[13],g=t[14],m=t[15],x=u*g*l-_*d*l+_*h*f-a*g*f-u*h*m+a*d*m,y=p*d*l-c*g*l-p*h*f+o*g*f+c*h*m-o*d*m,v=c*_*l-p*u*l+p*a*f-o*_*f-c*a*m+o*u*m,E=p*u*h-c*_*h-p*a*d+o*_*d+c*a*g-o*u*g,b=e*x+i*y+n*v+s*E;if(b===0)return this.set(0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0);const w=1/b;return t[0]=x*w,t[1]=(_*d*s-u*g*s-_*n*f+i*g*f+u*n*m-i*d*m)*w,t[2]=(a*g*s-_*h*s+_*n*l-i*g*l-a*n*m+i*h*m)*w,t[3]=(u*h*s-a*d*s-u*n*l+i*d*l+a*n*f-i*h*f)*w,t[4]=y*w,t[5]=(c*g*s-p*d*s+p*n*f-e*g*f-c*n*m+e*d*m)*w,t[6]=(p*h*s-o*g*s-p*n*l+e*g*l+o*n*m-e*h*m)*w,t[7]=(o*d*s-c*h*s+c*n*l-e*d*l-o*n*f+e*h*f)*w,t[8]=v*w,t[9]=(p*u*s-c*_*s-p*i*f+e*_*f+c*i*m-e*u*m)*w,t[10]=(o*_*s-p*a*s+p*i*l-e*_*l-o*i*m+e*a*m)*w,t[11]=(c*a*s-o*u*s-c*i*l+e*u*l+o*i*f-e*a*f)*w,t[12]=E*w,t[13]=(c*_*n-p*u*n+p*i*d-e*_*d-c*i*g+e*u*g)*w,t[14]=(p*a*n-o*_*n-p*i*h+e*_*h+o*i*g-e*a*g)*w,t[15]=(o*u*n-c*a*n+c*i*h-e*u*h-o*i*d+e*a*d)*w,this}scale(t){const e=this.elements,i=t.x,n=t.y,s=t.z;return e[0]*=i,e[4]*=n,e[8]*=s,e[1]*=i,e[5]*=n,e[9]*=s,e[2]*=i,e[6]*=n,e[10]*=s,e[3]*=i,e[7]*=n,e[11]*=s,this}getMaxScaleOnAxis(){const t=this.elements,e=t[0]*t[0]+t[1]*t[1]+t[2]*t[2],i=t[4]*t[4]+t[5]*t[5]+t[6]*t[6],n=t[8]*t[8]+t[9]*t[9]+t[10]*t[10];return Math.sqrt(Math.max(e,i,n))}makeTranslation(t,e,i){return t.isVector3?this.set(1,0,0,t.x,0,1,0,t.y,0,0,1,t.z,0,0,0,1):this.set(1,0,0,t,0,1,0,e,0,0,1,i,0,0,0,1),this}makeRotationX(t){const e=Math.cos(t),i=Math.sin(t);return this.set(1,0,0,0,0,e,-i,0,0,i,e,0,0,0,0,1),this}makeRotationY(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,0,i,0,0,1,0,0,-i,0,e,0,0,0,0,1),this}makeRotationZ(t){const e=Math.cos(t),i=Math.sin(t);return this.set(e,-i,0,0,i,e,0,0,0,0,1,0,0,0,0,1),this}makeRotationAxis(t,e){const i=Math.cos(e),n=Math.sin(e),s=1-i,o=t.x,a=t.y,h=t.z,l=s*o,c=s*a;return this.set(l*o+i,l*a-n*h,l*h+n*a,0,l*a+n*h,c*a+i,c*h-n*o,0,l*h-n*a,c*h+n*o,s*h*h+i,0,0,0,0,1),this}makeScale(t,e,i){return this.set(t,0,0,0,0,e,0,0,0,0,i,0,0,0,0,1),this}makeShear(t,e,i,n,s,o){return this.set(1,i,s,0,t,1,o,0,e,n,1,0,0,0,0,1),this}compose(t,e,i){const n=this.elements,s=e._x,o=e._y,a=e._z,h=e._w,l=s+s,c=o+o,u=a+a,d=s*l,f=s*c,p=s*u,_=o*c,g=o*u,m=a*u,x=h*l,y=h*c,v=h*u,E=i.x,b=i.y,w=i.z;return n[0]=(1-(_+m))*E,n[1]=(f+v)*E,n[2]=(p-y)*E,n[3]=0,n[4]=(f-v)*b,n[5]=(1-(d+m))*b,n[6]=(g+x)*b,n[7]=0,n[8]=(p+y)*w,n[9]=(g-x)*w,n[10]=(1-(d+_))*w,n[11]=0,n[12]=t.x,n[13]=t.y,n[14]=t.z,n[15]=1,this}decompose(t,e,i){const n=this.elements;let s=zo.set(n[0],n[1],n[2]).length();const o=zo.set(n[4],n[5],n[6]).length(),a=zo.set(n[8],n[9],n[10]).length();this.determinant()<0&&(s=-s),t.x=n[12],t.y=n[13],t.z=n[14],vn.copy(this);const l=1/s,c=1/o,u=1/a;return vn.elements[0]*=l,vn.elements[1]*=l,vn.elements[2]*=l,vn.elements[4]*=c,vn.elements[5]*=c,vn.elements[6]*=c,vn.elements[8]*=u,vn.elements[9]*=u,vn.elements[10]*=u,e.setFromRotationMatrix(vn),i.x=s,i.y=o,i.z=a,this}makePerspective(t,e,i,n,s,o,a=wc){const h=this.elements,l=2*s/(e-t),c=2*s/(i-n),u=(e+t)/(e-t),d=(i+n)/(i-n);let f,p;if(a===wc)f=-(o+s)/(o-s),p=-2*o*s/(o-s);else if(a===cy)f=-o/(o-s),p=-o*s/(o-s);else throw new Error("THREE.Matrix4.makePerspective(): Invalid coordinate system: "+a);return h[0]=l,h[4]=0,h[8]=u,h[12]=0,h[1]=0,h[5]=c,h[9]=d,h[13]=0,h[2]=0,h[6]=0,h[10]=f,h[14]=p,h[3]=0,h[7]=0,h[11]=-1,h[15]=0,this}makeOrthographic(t,e,i,n,s,o,a=wc){const h=this.elements,l=1/(e-t),c=1/(i-n),u=1/(o-s),d=(e+t)*l,f=(i+n)*c;let p,_;if(a===wc)p=(o+s)*u,_=-2*u;else if(a===cy)p=s*u,_=-1*u;else throw new Error("THREE.Matrix4.makeOrthographic(): Invalid coordinate system: "+a);return h[0]=2*l,h[4]=0,h[8]=0,h[12]=-d,h[1]=0,h[5]=2*c,h[9]=0,h[13]=-f,h[2]=0,h[6]=0,h[10]=_,h[14]=-p,h[3]=0,h[7]=0,h[11]=0,h[15]=1,this}equals(t){const e=this.elements,i=t.elements;for(let n=0;n<16;n++)if(e[n]!==i[n])return!1;return!0}fromArray(t,e=0){for(let i=0;i<16;i++)this.elements[i]=t[i+e];return this}toArray(t=[],e=0){const i=this.elements;return t[e]=i[0],t[e+1]=i[1],t[e+2]=i[2],t[e+3]=i[3],t[e+4]=i[4],t[e+5]=i[5],t[e+6]=i[6],t[e+7]=i[7],t[e+8]=i[8],t[e+9]=i[9],t[e+10]=i[10],t[e+11]=i[11],t[e+12]=i[12],t[e+13]=i[13],t[e+14]=i[14],t[e+15]=i[15],t}}const zo=new V,vn=new Li,FR=new V(0,0,0),zR=new V(1,1,1),Us=new V,Rc=new V,Vi=new V,my=new Li,gy=new nl;class sl{constructor(t=0,e=0,i=0,n=sl.DEFAULT_ORDER){this.isEuler=!0,this._x=t,this._y=e,this._z=i,this._order=n}get x(){return this._x}set x(t){this._x=t,this._onChangeCallback()}get y(){return this._y}set y(t){this._y=t,this._onChangeCallback()}get z(){return this._z}set z(t){this._z=t,this._onChangeCallback()}get order(){return this._order}set order(t){this._order=t,this._onChangeCallback()}set(t,e,i,n=this._order){return this._x=t,this._y=e,this._z=i,this._order=n,this._onChangeCallback(),this}clone(){return new this.constructor(this._x,this._y,this._z,this._order)}copy(t){return this._x=t._x,this._y=t._y,this._z=t._z,this._order=t._order,this._onChangeCallback(),this}setFromRotationMatrix(t,e=this._order,i=!0){const n=t.elements,s=n[0],o=n[4],a=n[8],h=n[1],l=n[5],c=n[9],u=n[2],d=n[6],f=n[10];switch(e){case"XYZ":this._y=Math.asin(te(a,-1,1)),Math.abs(a)<.9999999?(this._x=Math.atan2(-c,f),this._z=Math.atan2(-o,s)):(this._x=Math.atan2(d,l),this._z=0);break;case"YXZ":this._x=Math.asin(-te(c,-1,1)),Math.abs(c)<.9999999?(this._y=Math.atan2(a,f),this._z=Math.atan2(h,l)):(this._y=Math.atan2(-u,s),this._z=0);break;case"ZXY":this._x=Math.asin(te(d,-1,1)),Math.abs(d)<.9999999?(this._y=Math.atan2(-u,f),this._z=Math.atan2(-o,l)):(this._y=0,this._z=Math.atan2(h,s));break;case"ZYX":this._y=Math.asin(-te(u,-1,1)),Math.abs(u)<.9999999?(this._x=Math.atan2(d,f),this._z=Math.atan2(h,s)):(this._x=0,this._z=Math.atan2(-o,l));break;case"YZX":this._z=Math.asin(te(h,-1,1)),Math.abs(h)<.9999999?(this._x=Math.atan2(-c,l),this._y=Math.atan2(-u,s)):(this._x=0,this._y=Math.atan2(a,f));break;case"XZY":this._z=Math.asin(-te(o,-1,1)),Math.abs(o)<.9999999?(this._x=Math.atan2(d,l),this._y=Math.atan2(a,s)):(this._x=Math.atan2(-c,f),this._y=0);break;default:console.warn("THREE.Euler: .setFromRotationMatrix() encountered an unknown order: "+e)}return this._order=e,i===!0&&this._onChangeCallback(),this}setFromQuaternion(t,e,i){return my.makeRotationFromQuaternion(t),this.setFromRotationMatrix(my,e,i)}setFromVector3(t,e=this._order){return this.set(t.x,t.y,t.z,e)}reorder(t){return gy.setFromEuler(this),this.setFromQuaternion(gy,t)}equals(t){return t._x===this._x&&t._y===this._y&&t._z===this._z&&t._order===this._order}fromArray(t){return this._x=t[0],this._y=t[1],this._z=t[2],t[3]!==void 0&&(this._order=t[3]),this._onChangeCallback(),this}toArray(t=[],e=0){return t[e]=this._x,t[e+1]=this._y,t[e+2]=this._z,t[e+3]=this._order,t}_onChange(t){return this._onChangeCallback=t,this}_onChangeCallback(){}*[Symbol.iterator](){yield this._x,yield this._y,yield this._z,yield this._order}}sl.DEFAULT_ORDER="XYZ";class Hb{constructor(){this.mask=1}set(t){this.mask=(1<<t|0)>>>0}enable(t){this.mask|=1<<t|0}enableAll(){this.mask=-1}toggle(t){this.mask^=1<<t|0}disable(t){this.mask&=~(1<<t|0)}disableAll(){this.mask=0}test(t){return(this.mask&t.mask)!==0}isEnabled(t){return(this.mask&(1<<t|0))!==0}}let UR=0;const _y=new V,Uo=new nl,rs=new Li,Pc=new V,$a=new V,NR=new V,BR=new nl,yy=new V(1,0,0),xy=new V(0,1,0),vy=new V(0,0,1),by={type:"added"},kR={type:"removed"},No={type:"childadded",child:null},lp={type:"childremoved",child:null};class An extends zd{constructor(){super(),this.isObject3D=!0,Object.defineProperty(this,"id",{value:UR++}),this.uuid=va(),this.name="",this.type="Object3D",this.parent=null,this.children=[],this.up=An.DEFAULT_UP.clone();const t=new V,e=new sl,i=new nl,n=new V(1,1,1);function s(){i.setFromEuler(e,!1)}function o(){e.setFromQuaternion(i,void 0,!1)}e._onChange(s),i._onChange(o),Object.defineProperties(this,{position:{configurable:!0,enumerable:!0,value:t},rotation:{configurable:!0,enumerable:!0,value:e},quaternion:{configurable:!0,enumerable:!0,value:i},scale:{configurable:!0,enumerable:!0,value:n},modelViewMatrix:{value:new Li},normalMatrix:{value:new Qs}}),this.matrix=new Li,this.matrixWorld=new Li,this.matrixAutoUpdate=An.DEFAULT_MATRIX_AUTO_UPDATE,this.matrixWorldAutoUpdate=An.DEFAULT_MATRIX_WORLD_AUTO_UPDATE,this.matrixWorldNeedsUpdate=!1,this.layers=new Hb,this.visible=!0,this.castShadow=!1,this.receiveShadow=!1,this.frustumCulled=!0,this.renderOrder=0,this.animations=[],this.userData={}}onBeforeShadow(){}onAfterShadow(){}onBeforeRender(){}onAfterRender(){}applyMatrix4(t){this.matrixAutoUpdate&&this.updateMatrix(),this.matrix.premultiply(t),this.matrix.decompose(this.position,this.quaternion,this.scale)}applyQuaternion(t){return this.quaternion.premultiply(t),this}setRotationFromAxisAngle(t,e){this.quaternion.setFromAxisAngle(t,e)}setRotationFromEuler(t){this.quaternion.setFromEuler(t,!0)}setRotationFromMatrix(t){this.quaternion.setFromRotationMatrix(t)}setRotationFromQuaternion(t){this.quaternion.copy(t)}rotateOnAxis(t,e){return Uo.setFromAxisAngle(t,e),this.quaternion.multiply(Uo),this}rotateOnWorldAxis(t,e){return Uo.setFromAxisAngle(t,e),this.quaternion.premultiply(Uo),this}rotateX(t){return this.rotateOnAxis(yy,t)}rotateY(t){return this.rotateOnAxis(xy,t)}rotateZ(t){return this.rotateOnAxis(vy,t)}translateOnAxis(t,e){return _y.copy(t).applyQuaternion(this.quaternion),this.position.add(_y.multiplyScalar(e)),this}translateX(t){return this.translateOnAxis(yy,t)}translateY(t){return this.translateOnAxis(xy,t)}translateZ(t){return this.translateOnAxis(vy,t)}localToWorld(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(this.matrixWorld)}worldToLocal(t){return this.updateWorldMatrix(!0,!1),t.applyMatrix4(rs.copy(this.matrixWorld).invert())}lookAt(t,e,i){t.isVector3?Pc.copy(t):Pc.set(t,e,i);const n=this.parent;this.updateWorldMatrix(!0,!1),$a.setFromMatrixPosition(this.matrixWorld),this.isCamera||this.isLight?rs.lookAt($a,Pc,this.up):rs.lookAt(Pc,$a,this.up),this.quaternion.setFromRotationMatrix(rs),n&&(rs.extractRotation(n.matrixWorld),Uo.setFromRotationMatrix(rs),this.quaternion.premultiply(Uo.invert()))}add(t){if(arguments.length>1){for(let e=0;e<arguments.length;e++)this.add(arguments[e]);return this}return t===this?(console.error("THREE.Object3D.add: object can't be added as a child of itself.",t),this):(t&&t.isObject3D?(t.removeFromParent(),t.parent=this,this.children.push(t),t.dispatchEvent(by),No.child=t,this.dispatchEvent(No),No.child=null):console.error("THREE.Object3D.add: object not an instance of THREE.Object3D.",t),this)}remove(t){if(arguments.length>1){for(let i=0;i<arguments.length;i++)this.remove(arguments[i]);return this}const e=this.children.indexOf(t);return e!==-1&&(t.parent=null,this.children.splice(e,1),t.dispatchEvent(kR),lp.child=t,this.dispatchEvent(lp),lp.child=null),this}removeFromParent(){const t=this.parent;return t!==null&&t.remove(this),this}clear(){return this.remove(...this.children)}attach(t){return this.updateWorldMatrix(!0,!1),rs.copy(this.matrixWorld).invert(),t.parent!==null&&(t.parent.updateWorldMatrix(!0,!1),rs.multiply(t.parent.matrixWorld)),t.applyMatrix4(rs),t.removeFromParent(),t.parent=this,this.children.push(t),t.updateWorldMatrix(!1,!0),t.dispatchEvent(by),No.child=t,this.dispatchEvent(No),No.child=null,this}getObjectById(t){return this.getObjectByProperty("id",t)}getObjectByName(t){return this.getObjectByProperty("name",t)}getObjectByProperty(t,e){if(this[t]===e)return this;for(let i=0,n=this.children.length;i<n;i++){const o=this.children[i].getObjectByProperty(t,e);if(o!==void 0)return o}}getObjectsByProperty(t,e,i=[]){this[t]===e&&i.push(this);const n=this.children;for(let s=0,o=n.length;s<o;s++)n[s].getObjectsByProperty(t,e,i);return i}getWorldPosition(t){return this.updateWorldMatrix(!0,!1),t.setFromMatrixPosition(this.matrixWorld)}getWorldQuaternion(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose($a,t,NR),t}getWorldScale(t){return this.updateWorldMatrix(!0,!1),this.matrixWorld.decompose($a,BR,t),t}getWorldDirection(t){this.updateWorldMatrix(!0,!1);const e=this.matrixWorld.elements;return t.set(e[8],e[9],e[10]).normalize()}raycast(){}traverse(t){t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverse(t)}traverseVisible(t){if(this.visible===!1)return;t(this);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].traverseVisible(t)}traverseAncestors(t){const e=this.parent;e!==null&&(t(e),e.traverseAncestors(t))}updateMatrix(){this.matrix.compose(this.position,this.quaternion,this.scale),this.matrixWorldNeedsUpdate=!0}updateMatrixWorld(t){this.matrixAutoUpdate&&this.updateMatrix(),(this.matrixWorldNeedsUpdate||t)&&(this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),this.matrixWorldNeedsUpdate=!1,t=!0);const e=this.children;for(let i=0,n=e.length;i<n;i++)e[i].updateMatrixWorld(t)}updateWorldMatrix(t,e){const i=this.parent;if(t===!0&&i!==null&&i.updateWorldMatrix(!0,!1),this.matrixAutoUpdate&&this.updateMatrix(),this.matrixWorldAutoUpdate===!0&&(this.parent===null?this.matrixWorld.copy(this.matrix):this.matrixWorld.multiplyMatrices(this.parent.matrixWorld,this.matrix)),e===!0){const n=this.children;for(let s=0,o=n.length;s<o;s++)n[s].updateWorldMatrix(!1,!0)}}toJSON(t){const e=t===void 0||typeof t=="string",i={};e&&(t={geometries:{},materials:{},textures:{},images:{},shapes:{},skeletons:{},animations:{},nodes:{}},i.metadata={version:4.6,type:"Object",generator:"Object3D.toJSON"});const n={};n.uuid=this.uuid,n.type=this.type,this.name!==""&&(n.name=this.name),this.castShadow===!0&&(n.castShadow=!0),this.receiveShadow===!0&&(n.receiveShadow=!0),this.visible===!1&&(n.visible=!1),this.frustumCulled===!1&&(n.frustumCulled=!1),this.renderOrder!==0&&(n.renderOrder=this.renderOrder),Object.keys(this.userData).length>0&&(n.userData=this.userData),n.layers=this.layers.mask,n.matrix=this.matrix.toArray(),n.up=this.up.toArray(),this.matrixAutoUpdate===!1&&(n.matrixAutoUpdate=!1),this.isInstancedMesh&&(n.type="InstancedMesh",n.count=this.count,n.instanceMatrix=this.instanceMatrix.toJSON(),this.instanceColor!==null&&(n.instanceColor=this.instanceColor.toJSON())),this.isBatchedMesh&&(n.type="BatchedMesh",n.perObjectFrustumCulled=this.perObjectFrustumCulled,n.sortObjects=this.sortObjects,n.drawRanges=this._drawRanges,n.reservedRanges=this._reservedRanges,n.visibility=this._visibility,n.active=this._active,n.bounds=this._bounds.map(a=>({boxInitialized:a.boxInitialized,boxMin:a.box.min.toArray(),boxMax:a.box.max.toArray(),sphereInitialized:a.sphereInitialized,sphereRadius:a.sphere.radius,sphereCenter:a.sphere.center.toArray()})),n.maxInstanceCount=this._maxInstanceCount,n.maxVertexCount=this._maxVertexCount,n.maxIndexCount=this._maxIndexCount,n.geometryInitialized=this._geometryInitialized,n.geometryCount=this._geometryCount,n.matricesTexture=this._matricesTexture.toJSON(t),this._colorsTexture!==null&&(n.colorsTexture=this._colorsTexture.toJSON(t)),this.boundingSphere!==null&&(n.boundingSphere={center:n.boundingSphere.center.toArray(),radius:n.boundingSphere.radius}),this.boundingBox!==null&&(n.boundingBox={min:n.boundingBox.min.toArray(),max:n.boundingBox.max.toArray()}));function s(a,h){return a[h.uuid]===void 0&&(a[h.uuid]=h.toJSON(t)),h.uuid}if(this.isScene)this.background&&(this.background.isColor?n.background=this.background.toJSON():this.background.isTexture&&(n.background=this.background.toJSON(t).uuid)),this.environment&&this.environment.isTexture&&this.environment.isRenderTargetTexture!==!0&&(n.environment=this.environment.toJSON(t).uuid);else if(this.isMesh||this.isLine||this.isPoints){n.geometry=s(t.geometries,this.geometry);const a=this.geometry.parameters;if(a!==void 0&&a.shapes!==void 0){const h=a.shapes;if(Array.isArray(h))for(let l=0,c=h.length;l<c;l++){const u=h[l];s(t.shapes,u)}else s(t.shapes,h)}}if(this.isSkinnedMesh&&(n.bindMode=this.bindMode,n.bindMatrix=this.bindMatrix.toArray(),this.skeleton!==void 0&&(s(t.skeletons,this.skeleton),n.skeleton=this.skeleton.uuid)),this.material!==void 0)if(Array.isArray(this.material)){const a=[];for(let h=0,l=this.material.length;h<l;h++)a.push(s(t.materials,this.material[h]));n.material=a}else n.material=s(t.materials,this.material);if(this.children.length>0){n.children=[];for(let a=0;a<this.children.length;a++)n.children.push(this.children[a].toJSON(t).object)}if(this.animations.length>0){n.animations=[];for(let a=0;a<this.animations.length;a++){const h=this.animations[a];n.animations.push(s(t.animations,h))}}if(e){const a=o(t.geometries),h=o(t.materials),l=o(t.textures),c=o(t.images),u=o(t.shapes),d=o(t.skeletons),f=o(t.animations),p=o(t.nodes);a.length>0&&(i.geometries=a),h.length>0&&(i.materials=h),l.length>0&&(i.textures=l),c.length>0&&(i.images=c),u.length>0&&(i.shapes=u),d.length>0&&(i.skeletons=d),f.length>0&&(i.animations=f),p.length>0&&(i.nodes=p)}return i.object=n,i;function o(a){const h=[];for(const l in a){const c=a[l];delete c.metadata,h.push(c)}return h}}clone(t){return new this.constructor().copy(this,t)}copy(t,e=!0){if(this.name=t.name,this.up.copy(t.up),this.position.copy(t.position),this.rotation.order=t.rotation.order,this.quaternion.copy(t.quaternion),this.scale.copy(t.scale),this.matrix.copy(t.matrix),this.matrixWorld.copy(t.matrixWorld),this.matrixAutoUpdate=t.matrixAutoUpdate,this.matrixWorldAutoUpdate=t.matrixWorldAutoUpdate,this.matrixWorldNeedsUpdate=t.matrixWorldNeedsUpdate,this.layers.mask=t.layers.mask,this.visible=t.visible,this.castShadow=t.castShadow,this.receiveShadow=t.receiveShadow,this.frustumCulled=t.frustumCulled,this.renderOrder=t.renderOrder,this.animations=t.animations.slice(),this.userData=JSON.parse(JSON.stringify(t.userData)),e===!0)for(let i=0;i<t.children.length;i++){const n=t.children[i];this.add(n.clone())}return this}}An.DEFAULT_UP=new V(0,1,0);An.DEFAULT_MATRIX_AUTO_UPDATE=!0;An.DEFAULT_MATRIX_WORLD_AUTO_UPDATE=!0;const bn=new V,os=new V,cp=new V,as=new V,Bo=new V,ko=new V,My=new V,up=new V,dp=new V,fp=new V,pp=new il,mp=new il,gp=new il;class Sn{constructor(t=new V,e=new V,i=new V){this.a=t,this.b=e,this.c=i}static getNormal(t,e,i,n){n.subVectors(i,e),bn.subVectors(t,e),n.cross(bn);const s=n.lengthSq();return s>0?n.multiplyScalar(1/Math.sqrt(s)):n.set(0,0,0)}static getBarycoord(t,e,i,n,s){bn.subVectors(n,e),os.subVectors(i,e),cp.subVectors(t,e);const o=bn.dot(bn),a=bn.dot(os),h=bn.dot(cp),l=os.dot(os),c=os.dot(cp),u=o*l-a*a;if(u===0)return s.set(0,0,0),null;const d=1/u,f=(l*h-a*c)*d,p=(o*c-a*h)*d;return s.set(1-f-p,p,f)}static containsPoint(t,e,i,n){return this.getBarycoord(t,e,i,n,as)===null?!1:as.x>=0&&as.y>=0&&as.x+as.y<=1}static getInterpolation(t,e,i,n,s,o,a,h){return this.getBarycoord(t,e,i,n,as)===null?(h.x=0,h.y=0,"z"in h&&(h.z=0),"w"in h&&(h.w=0),null):(h.setScalar(0),h.addScaledVector(s,as.x),h.addScaledVector(o,as.y),h.addScaledVector(a,as.z),h)}static getInterpolatedAttribute(t,e,i,n,s,o){return pp.setScalar(0),mp.setScalar(0),gp.setScalar(0),pp.fromBufferAttribute(t,e),mp.fromBufferAttribute(t,i),gp.fromBufferAttribute(t,n),o.setScalar(0),o.addScaledVector(pp,s.x),o.addScaledVector(mp,s.y),o.addScaledVector(gp,s.z),o}static isFrontFacing(t,e,i,n){return bn.subVectors(i,e),os.subVectors(t,e),bn.cross(os).dot(n)<0}set(t,e,i){return this.a.copy(t),this.b.copy(e),this.c.copy(i),this}setFromPointsAndIndices(t,e,i,n){return this.a.copy(t[e]),this.b.copy(t[i]),this.c.copy(t[n]),this}setFromAttributeAndIndices(t,e,i,n){return this.a.fromBufferAttribute(t,e),this.b.fromBufferAttribute(t,i),this.c.fromBufferAttribute(t,n),this}clone(){return new this.constructor().copy(this)}copy(t){return this.a.copy(t.a),this.b.copy(t.b),this.c.copy(t.c),this}getArea(){return bn.subVectors(this.c,this.b),os.subVectors(this.a,this.b),bn.cross(os).length()*.5}getMidpoint(t){return t.addVectors(this.a,this.b).add(this.c).multiplyScalar(1/3)}getNormal(t){return Sn.getNormal(this.a,this.b,this.c,t)}getPlane(t){return t.setFromCoplanarPoints(this.a,this.b,this.c)}getBarycoord(t,e){return Sn.getBarycoord(t,this.a,this.b,this.c,e)}getInterpolation(t,e,i,n,s){return Sn.getInterpolation(t,this.a,this.b,this.c,e,i,n,s)}containsPoint(t){return Sn.containsPoint(t,this.a,this.b,this.c)}isFrontFacing(t){return Sn.isFrontFacing(this.a,this.b,this.c,t)}intersectsBox(t){return t.intersectsTriangle(this)}closestPointToPoint(t,e){const i=this.a,n=this.b,s=this.c;let o,a;Bo.subVectors(n,i),ko.subVectors(s,i),up.subVectors(t,i);const h=Bo.dot(up),l=ko.dot(up);if(h<=0&&l<=0)return e.copy(i);dp.subVectors(t,n);const c=Bo.dot(dp),u=ko.dot(dp);if(c>=0&&u<=c)return e.copy(n);const d=h*u-c*l;if(d<=0&&h>=0&&c<=0)return o=h/(h-c),e.copy(i).addScaledVector(Bo,o);fp.subVectors(t,s);const f=Bo.dot(fp),p=ko.dot(fp);if(p>=0&&f<=p)return e.copy(s);const _=f*l-h*p;if(_<=0&&l>=0&&p<=0)return a=l/(l-p),e.copy(i).addScaledVector(ko,a);const g=c*p-f*u;if(g<=0&&u-c>=0&&f-p>=0)return My.subVectors(s,n),a=(u-c)/(u-c+(f-p)),e.copy(n).addScaledVector(My,a);const m=1/(g+_+d);return o=_*m,a=d*m,e.copy(i).addScaledVector(Bo,o).addScaledVector(ko,a)}equals(t){return t.a.equals(this.a)&&t.b.equals(this.b)&&t.c.equals(this.c)}}const Gb={aliceblue:15792383,antiquewhite:16444375,aqua:65535,aquamarine:8388564,azure:15794175,beige:16119260,bisque:16770244,black:0,blanchedalmond:16772045,blue:255,blueviolet:9055202,brown:10824234,burlywood:14596231,cadetblue:6266528,chartreuse:8388352,chocolate:13789470,coral:16744272,cornflowerblue:6591981,cornsilk:16775388,crimson:14423100,cyan:65535,darkblue:139,darkcyan:35723,darkgoldenrod:12092939,darkgray:11119017,darkgreen:25600,darkgrey:11119017,darkkhaki:12433259,darkmagenta:9109643,darkolivegreen:5597999,darkorange:16747520,darkorchid:10040012,darkred:9109504,darksalmon:15308410,darkseagreen:9419919,darkslateblue:4734347,darkslategray:3100495,darkslategrey:3100495,darkturquoise:52945,darkviolet:9699539,deeppink:16716947,deepskyblue:49151,dimgray:6908265,dimgrey:6908265,dodgerblue:2003199,firebrick:11674146,floralwhite:16775920,forestgreen:2263842,fuchsia:16711935,gainsboro:14474460,ghostwhite:16316671,gold:16766720,goldenrod:14329120,gray:8421504,green:32768,greenyellow:11403055,grey:8421504,honeydew:15794160,hotpink:16738740,indianred:13458524,indigo:4915330,ivory:16777200,khaki:15787660,lavender:15132410,lavenderblush:16773365,lawngreen:8190976,lemonchiffon:16775885,lightblue:11393254,lightcoral:15761536,lightcyan:14745599,lightgoldenrodyellow:16448210,lightgray:13882323,lightgreen:9498256,lightgrey:13882323,lightpink:16758465,lightsalmon:16752762,lightseagreen:2142890,lightskyblue:8900346,lightslategray:7833753,lightslategrey:7833753,lightsteelblue:11584734,lightyellow:16777184,lime:65280,limegreen:3329330,linen:16445670,magenta:16711935,maroon:8388608,mediumaquamarine:6737322,mediumblue:205,mediumorchid:12211667,mediumpurple:9662683,mediumseagreen:3978097,mediumslateblue:8087790,mediumspringgreen:64154,mediumturquoise:4772300,mediumvioletred:13047173,midnightblue:1644912,mintcream:16121850,mistyrose:16770273,moccasin:16770229,navajowhite:16768685,navy:128,oldlace:16643558,olive:8421376,olivedrab:7048739,orange:16753920,orangered:16729344,orchid:14315734,palegoldenrod:15657130,palegreen:10025880,paleturquoise:11529966,palevioletred:14381203,papayawhip:16773077,peachpuff:16767673,peru:13468991,pink:16761035,plum:14524637,powderblue:11591910,purple:8388736,rebeccapurple:6697881,red:16711680,rosybrown:12357519,royalblue:4286945,saddlebrown:9127187,salmon:16416882,sandybrown:16032864,seagreen:3050327,seashell:16774638,sienna:10506797,silver:12632256,skyblue:8900331,slateblue:6970061,slategray:7372944,slategrey:7372944,snow:16775930,springgreen:65407,steelblue:4620980,tan:13808780,teal:32896,thistle:14204888,tomato:16737095,turquoise:4251856,violet:15631086,wheat:16113331,white:16777215,whitesmoke:16119285,yellow:16776960,yellowgreen:10145074},Ns={h:0,s:0,l:0},Ic={h:0,s:0,l:0};function _p(r,t,e){return e<0&&(e+=1),e>1&&(e-=1),e<1/6?r+(t-r)*6*e:e<1/2?t:e<2/3?r+(t-r)*6*(2/3-e):r}class ba{constructor(t,e,i){return this.isColor=!0,this.r=1,this.g=1,this.b=1,this.set(t,e,i)}set(t,e,i){if(e===void 0&&i===void 0){const n=t;n&&n.isColor?this.copy(n):typeof n=="number"?this.setHex(n):typeof n=="string"&&this.setStyle(n)}else this.setRGB(t,e,i);return this}setScalar(t){return this.r=t,this.g=t,this.b=t,this}setHex(t,e=wn){return t=Math.floor(t),this.r=(t>>16&255)/255,this.g=(t>>8&255)/255,this.b=(t&255)/255,yn.toWorkingColorSpace(this,e),this}setRGB(t,e,i,n=yn.workingColorSpace){return this.r=t,this.g=e,this.b=i,yn.toWorkingColorSpace(this,n),this}setHSL(t,e,i,n=yn.workingColorSpace){if(t=TR(t,1),e=te(e,0,1),i=te(i,0,1),e===0)this.r=this.g=this.b=i;else{const s=i<=.5?i*(1+e):i+e-i*e,o=2*i-s;this.r=_p(o,s,t+1/3),this.g=_p(o,s,t),this.b=_p(o,s,t-1/3)}return yn.toWorkingColorSpace(this,n),this}setStyle(t,e=wn){function i(s){s!==void 0&&parseFloat(s)<1&&console.warn("THREE.Color: Alpha component of "+t+" will be ignored.")}let n;if(n=/^(\w+)\(([^\)]*)\)/.exec(t)){let s;const o=n[1],a=n[2];switch(o){case"rgb":case"rgba":if(s=/^\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(255,parseInt(s[1],10))/255,Math.min(255,parseInt(s[2],10))/255,Math.min(255,parseInt(s[3],10))/255,e);if(s=/^\s*(\d+)\%\s*,\s*(\d+)\%\s*,\s*(\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setRGB(Math.min(100,parseInt(s[1],10))/100,Math.min(100,parseInt(s[2],10))/100,Math.min(100,parseInt(s[3],10))/100,e);break;case"hsl":case"hsla":if(s=/^\s*(\d*\.?\d+)\s*,\s*(\d*\.?\d+)\%\s*,\s*(\d*\.?\d+)\%\s*(?:,\s*(\d*\.?\d+)\s*)?$/.exec(a))return i(s[4]),this.setHSL(parseFloat(s[1])/360,parseFloat(s[2])/100,parseFloat(s[3])/100,e);break;default:console.warn("THREE.Color: Unknown color model "+t)}}else if(n=/^\#([A-Fa-f\d]+)$/.exec(t)){const s=n[1],o=s.length;if(o===3)return this.setRGB(parseInt(s.charAt(0),16)/15,parseInt(s.charAt(1),16)/15,parseInt(s.charAt(2),16)/15,e);if(o===6)return this.setHex(parseInt(s,16),e);console.warn("THREE.Color: Invalid hex color "+t)}else if(t&&t.length>0)return this.setColorName(t,e);return this}setColorName(t,e=wn){const i=Gb[t.toLowerCase()];return i!==void 0?this.setHex(i,e):console.warn("THREE.Color: Unknown color "+t),this}clone(){return new this.constructor(this.r,this.g,this.b)}copy(t){return this.r=t.r,this.g=t.g,this.b=t.b,this}copySRGBToLinear(t){return this.r=ps(t.r),this.g=ps(t.g),this.b=ps(t.b),this}copyLinearToSRGB(t){return this.r=ra(t.r),this.g=ra(t.g),this.b=ra(t.b),this}convertSRGBToLinear(){return this.copySRGBToLinear(this),this}convertLinearToSRGB(){return this.copyLinearToSRGB(this),this}getHex(t=wn){return yn.fromWorkingColorSpace(ui.copy(this),t),Math.round(te(ui.r*255,0,255))*65536+Math.round(te(ui.g*255,0,255))*256+Math.round(te(ui.b*255,0,255))}getHexString(t=wn){return("000000"+this.getHex(t).toString(16)).slice(-6)}getHSL(t,e=yn.workingColorSpace){yn.fromWorkingColorSpace(ui.copy(this),e);const i=ui.r,n=ui.g,s=ui.b,o=Math.max(i,n,s),a=Math.min(i,n,s);let h,l;const c=(a+o)/2;if(a===o)h=0,l=0;else{const u=o-a;switch(l=c<=.5?u/(o+a):u/(2-o-a),o){case i:h=(n-s)/u+(n<s?6:0);break;case n:h=(s-i)/u+2;break;case s:h=(i-n)/u+4;break}h/=6}return t.h=h,t.s=l,t.l=c,t}getRGB(t,e=yn.workingColorSpace){return yn.fromWorkingColorSpace(ui.copy(this),e),t.r=ui.r,t.g=ui.g,t.b=ui.b,t}getStyle(t=wn){yn.fromWorkingColorSpace(ui.copy(this),t);const e=ui.r,i=ui.g,n=ui.b;return t!==wn?`color(${t} ${e.toFixed(3)} ${i.toFixed(3)} ${n.toFixed(3)})`:`rgb(${Math.round(e*255)},${Math.round(i*255)},${Math.round(n*255)})`}offsetHSL(t,e,i){return this.getHSL(Ns),this.setHSL(Ns.h+t,Ns.s+e,Ns.l+i)}add(t){return this.r+=t.r,this.g+=t.g,this.b+=t.b,this}addColors(t,e){return this.r=t.r+e.r,this.g=t.g+e.g,this.b=t.b+e.b,this}addScalar(t){return this.r+=t,this.g+=t,this.b+=t,this}sub(t){return this.r=Math.max(0,this.r-t.r),this.g=Math.max(0,this.g-t.g),this.b=Math.max(0,this.b-t.b),this}multiply(t){return this.r*=t.r,this.g*=t.g,this.b*=t.b,this}multiplyScalar(t){return this.r*=t,this.g*=t,this.b*=t,this}lerp(t,e){return this.r+=(t.r-this.r)*e,this.g+=(t.g-this.g)*e,this.b+=(t.b-this.b)*e,this}lerpColors(t,e,i){return this.r=t.r+(e.r-t.r)*i,this.g=t.g+(e.g-t.g)*i,this.b=t.b+(e.b-t.b)*i,this}lerpHSL(t,e){this.getHSL(Ns),t.getHSL(Ic);const i=tp(Ns.h,Ic.h,e),n=tp(Ns.s,Ic.s,e),s=tp(Ns.l,Ic.l,e);return this.setHSL(i,n,s),this}setFromVector3(t){return this.r=t.x,this.g=t.y,this.b=t.z,this}applyMatrix3(t){const e=this.r,i=this.g,n=this.b,s=t.elements;return this.r=s[0]*e+s[3]*i+s[6]*n,this.g=s[1]*e+s[4]*i+s[7]*n,this.b=s[2]*e+s[5]*i+s[8]*n,this}equals(t){return t.r===this.r&&t.g===this.g&&t.b===this.b}fromArray(t,e=0){return this.r=t[e],this.g=t[e+1],this.b=t[e+2],this}toArray(t=[],e=0){return t[e]=this.r,t[e+1]=this.g,t[e+2]=this.b,t}fromBufferAttribute(t,e){return this.r=t.getX(e),this.g=t.getY(e),this.b=t.getZ(e),this}toJSON(){return this.getHex()}*[Symbol.iterator](){yield this.r,yield this.g,yield this.b}}const ui=new ba;ba.NAMES=Gb;let VR=0;class Wb extends zd{constructor(){super(),this.isMaterial=!0,Object.defineProperty(this,"id",{value:VR++}),this.uuid=va(),this.name="",this.type="Material",this.blending=Q0,this.side=nm,this.vertexColors=!1,this.opacity=1,this.transparent=!1,this.alphaHash=!1,this.blendSrc=ey,this.blendDst=iy,this.blendEquation=ty,this.blendSrcAlpha=null,this.blendDstAlpha=null,this.blendEquationAlpha=null,this.blendColor=new ba(0,0,0),this.blendAlpha=0,this.depthFunc=ny,this.depthTest=!0,this.depthWrite=!0,this.stencilWriteMask=255,this.stencilFunc=hy,this.stencilRef=0,this.stencilFuncMask=255,this.stencilFail=Io,this.stencilZFail=Io,this.stencilZPass=Io,this.stencilWrite=!1,this.clippingPlanes=null,this.clipIntersection=!1,this.clipShadows=!1,this.shadowSide=null,this.colorWrite=!0,this.precision=null,this.polygonOffset=!1,this.polygonOffsetFactor=0,this.polygonOffsetUnits=0,this.dithering=!1,this.alphaToCoverage=!1,this.premultipliedAlpha=!1,this.forceSinglePass=!1,this.visible=!0,this.toneMapped=!0,this.userData={},this.version=0,this._alphaTest=0}get alphaTest(){return this._alphaTest}set alphaTest(t){this._alphaTest>0!=t>0&&this.version++,this._alphaTest=t}onBeforeRender(){}onBeforeCompile(){}customProgramCacheKey(){return this.onBeforeCompile.toString()}setValues(t){if(t!==void 0)for(const e in t){const i=t[e];if(i===void 0){console.warn(`THREE.Material: parameter '${e}' has value of undefined.`);continue}const n=this[e];if(n===void 0){console.warn(`THREE.Material: '${e}' is not a property of THREE.${this.type}.`);continue}n&&n.isColor?n.set(i):n&&n.isVector3&&i&&i.isVector3?n.copy(i):this[e]=i}}toJSON(t){const e=t===void 0||typeof t=="string";e&&(t={textures:{},images:{}});const i={metadata:{version:4.6,type:"Material",generator:"Material.toJSON"}};i.uuid=this.uuid,i.type=this.type,this.name!==""&&(i.name=this.name),this.color&&this.color.isColor&&(i.color=this.color.getHex()),this.roughness!==void 0&&(i.roughness=this.roughness),this.metalness!==void 0&&(i.metalness=this.metalness),this.sheen!==void 0&&(i.sheen=this.sheen),this.sheenColor&&this.sheenColor.isColor&&(i.sheenColor=this.sheenColor.getHex()),this.sheenRoughness!==void 0&&(i.sheenRoughness=this.sheenRoughness),this.emissive&&this.emissive.isColor&&(i.emissive=this.emissive.getHex()),this.emissiveIntensity!==void 0&&this.emissiveIntensity!==1&&(i.emissiveIntensity=this.emissiveIntensity),this.specular&&this.specular.isColor&&(i.specular=this.specular.getHex()),this.specularIntensity!==void 0&&(i.specularIntensity=this.specularIntensity),this.specularColor&&this.specularColor.isColor&&(i.specularColor=this.specularColor.getHex()),this.shininess!==void 0&&(i.shininess=this.shininess),this.clearcoat!==void 0&&(i.clearcoat=this.clearcoat),this.clearcoatRoughness!==void 0&&(i.clearcoatRoughness=this.clearcoatRoughness),this.clearcoatMap&&this.clearcoatMap.isTexture&&(i.clearcoatMap=this.clearcoatMap.toJSON(t).uuid),this.clearcoatRoughnessMap&&this.clearcoatRoughnessMap.isTexture&&(i.clearcoatRoughnessMap=this.clearcoatRoughnessMap.toJSON(t).uuid),this.clearcoatNormalMap&&this.clearcoatNormalMap.isTexture&&(i.clearcoatNormalMap=this.clearcoatNormalMap.toJSON(t).uuid,i.clearcoatNormalScale=this.clearcoatNormalScale.toArray()),this.dispersion!==void 0&&(i.dispersion=this.dispersion),this.iridescence!==void 0&&(i.iridescence=this.iridescence),this.iridescenceIOR!==void 0&&(i.iridescenceIOR=this.iridescenceIOR),this.iridescenceThicknessRange!==void 0&&(i.iridescenceThicknessRange=this.iridescenceThicknessRange),this.iridescenceMap&&this.iridescenceMap.isTexture&&(i.iridescenceMap=this.iridescenceMap.toJSON(t).uuid),this.iridescenceThicknessMap&&this.iridescenceThicknessMap.isTexture&&(i.iridescenceThicknessMap=this.iridescenceThicknessMap.toJSON(t).uuid),this.anisotropy!==void 0&&(i.anisotropy=this.anisotropy),this.anisotropyRotation!==void 0&&(i.anisotropyRotation=this.anisotropyRotation),this.anisotropyMap&&this.anisotropyMap.isTexture&&(i.anisotropyMap=this.anisotropyMap.toJSON(t).uuid),this.map&&this.map.isTexture&&(i.map=this.map.toJSON(t).uuid),this.matcap&&this.matcap.isTexture&&(i.matcap=this.matcap.toJSON(t).uuid),this.alphaMap&&this.alphaMap.isTexture&&(i.alphaMap=this.alphaMap.toJSON(t).uuid),this.lightMap&&this.lightMap.isTexture&&(i.lightMap=this.lightMap.toJSON(t).uuid,i.lightMapIntensity=this.lightMapIntensity),this.aoMap&&this.aoMap.isTexture&&(i.aoMap=this.aoMap.toJSON(t).uuid,i.aoMapIntensity=this.aoMapIntensity),this.bumpMap&&this.bumpMap.isTexture&&(i.bumpMap=this.bumpMap.toJSON(t).uuid,i.bumpScale=this.bumpScale),this.normalMap&&this.normalMap.isTexture&&(i.normalMap=this.normalMap.toJSON(t).uuid,i.normalMapType=this.normalMapType,i.normalScale=this.normalScale.toArray()),this.displacementMap&&this.displacementMap.isTexture&&(i.displacementMap=this.displacementMap.toJSON(t).uuid,i.displacementScale=this.displacementScale,i.displacementBias=this.displacementBias),this.roughnessMap&&this.roughnessMap.isTexture&&(i.roughnessMap=this.roughnessMap.toJSON(t).uuid),this.metalnessMap&&this.metalnessMap.isTexture&&(i.metalnessMap=this.metalnessMap.toJSON(t).uuid),this.emissiveMap&&this.emissiveMap.isTexture&&(i.emissiveMap=this.emissiveMap.toJSON(t).uuid),this.specularMap&&this.specularMap.isTexture&&(i.specularMap=this.specularMap.toJSON(t).uuid),this.specularIntensityMap&&this.specularIntensityMap.isTexture&&(i.specularIntensityMap=this.specularIntensityMap.toJSON(t).uuid),this.specularColorMap&&this.specularColorMap.isTexture&&(i.specularColorMap=this.specularColorMap.toJSON(t).uuid),this.envMap&&this.envMap.isTexture&&(i.envMap=this.envMap.toJSON(t).uuid,this.combine!==void 0&&(i.combine=this.combine)),this.envMapRotation!==void 0&&(i.envMapRotation=this.envMapRotation.toArray()),this.envMapIntensity!==void 0&&(i.envMapIntensity=this.envMapIntensity),this.reflectivity!==void 0&&(i.reflectivity=this.reflectivity),this.refractionRatio!==void 0&&(i.refractionRatio=this.refractionRatio),this.gradientMap&&this.gradientMap.isTexture&&(i.gradientMap=this.gradientMap.toJSON(t).uuid),this.transmission!==void 0&&(i.transmission=this.transmission),this.transmissionMap&&this.transmissionMap.isTexture&&(i.transmissionMap=this.transmissionMap.toJSON(t).uuid),this.thickness!==void 0&&(i.thickness=this.thickness),this.thicknessMap&&this.thicknessMap.isTexture&&(i.thicknessMap=this.thicknessMap.toJSON(t).uuid),this.attenuationDistance!==void 0&&this.attenuationDistance!==1/0&&(i.attenuationDistance=this.attenuationDistance),this.attenuationColor!==void 0&&(i.attenuationColor=this.attenuationColor.getHex()),this.size!==void 0&&(i.size=this.size),this.shadowSide!==null&&(i.shadowSide=this.shadowSide),this.sizeAttenuation!==void 0&&(i.sizeAttenuation=this.sizeAttenuation),this.blending!==Q0&&(i.blending=this.blending),this.side!==nm&&(i.side=this.side),this.vertexColors===!0&&(i.vertexColors=!0),this.opacity<1&&(i.opacity=this.opacity),this.transparent===!0&&(i.transparent=!0),this.blendSrc!==ey&&(i.blendSrc=this.blendSrc),this.blendDst!==iy&&(i.blendDst=this.blendDst),this.blendEquation!==ty&&(i.blendEquation=this.blendEquation),this.blendSrcAlpha!==null&&(i.blendSrcAlpha=this.blendSrcAlpha),this.blendDstAlpha!==null&&(i.blendDstAlpha=this.blendDstAlpha),this.blendEquationAlpha!==null&&(i.blendEquationAlpha=this.blendEquationAlpha),this.blendColor&&this.blendColor.isColor&&(i.blendColor=this.blendColor.getHex()),this.blendAlpha!==0&&(i.blendAlpha=this.blendAlpha),this.depthFunc!==ny&&(i.depthFunc=this.depthFunc),this.depthTest===!1&&(i.depthTest=this.depthTest),this.depthWrite===!1&&(i.depthWrite=this.depthWrite),this.colorWrite===!1&&(i.colorWrite=this.colorWrite),this.stencilWriteMask!==255&&(i.stencilWriteMask=this.stencilWriteMask),this.stencilFunc!==hy&&(i.stencilFunc=this.stencilFunc),this.stencilRef!==0&&(i.stencilRef=this.stencilRef),this.stencilFuncMask!==255&&(i.stencilFuncMask=this.stencilFuncMask),this.stencilFail!==Io&&(i.stencilFail=this.stencilFail),this.stencilZFail!==Io&&(i.stencilZFail=this.stencilZFail),this.stencilZPass!==Io&&(i.stencilZPass=this.stencilZPass),this.stencilWrite===!0&&(i.stencilWrite=this.stencilWrite),this.rotation!==void 0&&this.rotation!==0&&(i.rotation=this.rotation),this.polygonOffset===!0&&(i.polygonOffset=!0),this.polygonOffsetFactor!==0&&(i.polygonOffsetFactor=this.polygonOffsetFactor),this.polygonOffsetUnits!==0&&(i.polygonOffsetUnits=this.polygonOffsetUnits),this.linewidth!==void 0&&this.linewidth!==1&&(i.linewidth=this.linewidth),this.dashSize!==void 0&&(i.dashSize=this.dashSize),this.gapSize!==void 0&&(i.gapSize=this.gapSize),this.scale!==void 0&&(i.scale=this.scale),this.dithering===!0&&(i.dithering=!0),this.alphaTest>0&&(i.alphaTest=this.alphaTest),this.alphaHash===!0&&(i.alphaHash=!0),this.alphaToCoverage===!0&&(i.alphaToCoverage=!0),this.premultipliedAlpha===!0&&(i.premultipliedAlpha=!0),this.forceSinglePass===!0&&(i.forceSinglePass=!0),this.wireframe===!0&&(i.wireframe=!0),this.wireframeLinewidth>1&&(i.wireframeLinewidth=this.wireframeLinewidth),this.wireframeLinecap!=="round"&&(i.wireframeLinecap=this.wireframeLinecap),this.wireframeLinejoin!=="round"&&(i.wireframeLinejoin=this.wireframeLinejoin),this.flatShading===!0&&(i.flatShading=!0),this.visible===!1&&(i.visible=!1),this.toneMapped===!1&&(i.toneMapped=!1),this.fog===!1&&(i.fog=!1),Object.keys(this.userData).length>0&&(i.userData=this.userData);function n(s){const o=[];for(const a in s){const h=s[a];delete h.metadata,o.push(h)}return o}if(e){const s=n(t.textures),o=n(t.images);s.length>0&&(i.textures=s),o.length>0&&(i.images=o)}return i}clone(){return new this.constructor().copy(this)}copy(t){this.name=t.name,this.blending=t.blending,this.side=t.side,this.vertexColors=t.vertexColors,this.opacity=t.opacity,this.transparent=t.transparent,this.blendSrc=t.blendSrc,this.blendDst=t.blendDst,this.blendEquation=t.blendEquation,this.blendSrcAlpha=t.blendSrcAlpha,this.blendDstAlpha=t.blendDstAlpha,this.blendEquationAlpha=t.blendEquationAlpha,this.blendColor.copy(t.blendColor),this.blendAlpha=t.blendAlpha,this.depthFunc=t.depthFunc,this.depthTest=t.depthTest,this.depthWrite=t.depthWrite,this.stencilWriteMask=t.stencilWriteMask,this.stencilFunc=t.stencilFunc,this.stencilRef=t.stencilRef,this.stencilFuncMask=t.stencilFuncMask,this.stencilFail=t.stencilFail,this.stencilZFail=t.stencilZFail,this.stencilZPass=t.stencilZPass,this.stencilWrite=t.stencilWrite;const e=t.clippingPlanes;let i=null;if(e!==null){const n=e.length;i=new Array(n);for(let s=0;s!==n;++s)i[s]=e[s].clone()}return this.clippingPlanes=i,this.clipIntersection=t.clipIntersection,this.clipShadows=t.clipShadows,this.shadowSide=t.shadowSide,this.colorWrite=t.colorWrite,this.precision=t.precision,this.polygonOffset=t.polygonOffset,this.polygonOffsetFactor=t.polygonOffsetFactor,this.polygonOffsetUnits=t.polygonOffsetUnits,this.dithering=t.dithering,this.alphaTest=t.alphaTest,this.alphaHash=t.alphaHash,this.alphaToCoverage=t.alphaToCoverage,this.premultipliedAlpha=t.premultipliedAlpha,this.forceSinglePass=t.forceSinglePass,this.visible=t.visible,this.toneMapped=t.toneMapped,this.userData=JSON.parse(JSON.stringify(t.userData)),this}dispose(){this.dispatchEvent({type:"dispose"})}set needsUpdate(t){t===!0&&this.version++}onBuild(){console.warn("Material: onBuild() has been removed.")}}class xi extends Wb{constructor(t){super(),this.isMeshBasicMaterial=!0,this.type="MeshBasicMaterial",this.color=new ba(16777215),this.map=null,this.lightMap=null,this.lightMapIntensity=1,this.aoMap=null,this.aoMapIntensity=1,this.specularMap=null,this.alphaMap=null,this.envMap=null,this.envMapRotation=new sl,this.combine=bR,this.reflectivity=1,this.refractionRatio=.98,this.wireframe=!1,this.wireframeLinewidth=1,this.wireframeLinecap="round",this.wireframeLinejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.lightMap=t.lightMap,this.lightMapIntensity=t.lightMapIntensity,this.aoMap=t.aoMap,this.aoMapIntensity=t.aoMapIntensity,this.specularMap=t.specularMap,this.alphaMap=t.alphaMap,this.envMap=t.envMap,this.envMapRotation.copy(t.envMapRotation),this.combine=t.combine,this.reflectivity=t.reflectivity,this.refractionRatio=t.refractionRatio,this.wireframe=t.wireframe,this.wireframeLinewidth=t.wireframeLinewidth,this.wireframeLinecap=t.wireframeLinecap,this.wireframeLinejoin=t.wireframeLinejoin,this.fog=t.fog,this}}const Be=new V,Lc=new Jt;let HR=0;class zr{constructor(t,e,i=!1){if(Array.isArray(t))throw new TypeError("THREE.BufferAttribute: array should be a Typed Array.");this.isBufferAttribute=!0,Object.defineProperty(this,"id",{value:HR++}),this.name="",this.array=t,this.itemSize=e,this.count=t!==void 0?t.length/e:0,this.normalized=i,this.usage=ly,this.updateRanges=[],this.gpuType=AR,this.version=0}onUploadCallback(){}set needsUpdate(t){t===!0&&this.version++}setUsage(t){return this.usage=t,this}addUpdateRange(t,e){this.updateRanges.push({start:t,count:e})}clearUpdateRanges(){this.updateRanges.length=0}copy(t){return this.name=t.name,this.array=new t.array.constructor(t.array),this.itemSize=t.itemSize,this.count=t.count,this.normalized=t.normalized,this.usage=t.usage,this.gpuType=t.gpuType,this}copyAt(t,e,i){t*=this.itemSize,i*=e.itemSize;for(let n=0,s=this.itemSize;n<s;n++)this.array[t+n]=e.array[i+n];return this}copyArray(t){return this.array.set(t),this}applyMatrix3(t){if(this.itemSize===2)for(let e=0,i=this.count;e<i;e++)Lc.fromBufferAttribute(this,e),Lc.applyMatrix3(t),this.setXY(e,Lc.x,Lc.y);else if(this.itemSize===3)for(let e=0,i=this.count;e<i;e++)Be.fromBufferAttribute(this,e),Be.applyMatrix3(t),this.setXYZ(e,Be.x,Be.y,Be.z);return this}applyMatrix4(t){for(let e=0,i=this.count;e<i;e++)Be.fromBufferAttribute(this,e),Be.applyMatrix4(t),this.setXYZ(e,Be.x,Be.y,Be.z);return this}applyNormalMatrix(t){for(let e=0,i=this.count;e<i;e++)Be.fromBufferAttribute(this,e),Be.applyNormalMatrix(t),this.setXYZ(e,Be.x,Be.y,Be.z);return this}transformDirection(t){for(let e=0,i=this.count;e<i;e++)Be.fromBufferAttribute(this,e),Be.transformDirection(t),this.setXYZ(e,Be.x,Be.y,Be.z);return this}set(t,e=0){return this.array.set(t,e),this}getComponent(t,e){let i=this.array[t*this.itemSize+e];return this.normalized&&(i=Ha(i,this.array)),i}setComponent(t,e,i){return this.normalized&&(i=Ai(i,this.array)),this.array[t*this.itemSize+e]=i,this}getX(t){let e=this.array[t*this.itemSize];return this.normalized&&(e=Ha(e,this.array)),e}setX(t,e){return this.normalized&&(e=Ai(e,this.array)),this.array[t*this.itemSize]=e,this}getY(t){let e=this.array[t*this.itemSize+1];return this.normalized&&(e=Ha(e,this.array)),e}setY(t,e){return this.normalized&&(e=Ai(e,this.array)),this.array[t*this.itemSize+1]=e,this}getZ(t){let e=this.array[t*this.itemSize+2];return this.normalized&&(e=Ha(e,this.array)),e}setZ(t,e){return this.normalized&&(e=Ai(e,this.array)),this.array[t*this.itemSize+2]=e,this}getW(t){let e=this.array[t*this.itemSize+3];return this.normalized&&(e=Ha(e,this.array)),e}setW(t,e){return this.normalized&&(e=Ai(e,this.array)),this.array[t*this.itemSize+3]=e,this}setXY(t,e,i){return t*=this.itemSize,this.normalized&&(e=Ai(e,this.array),i=Ai(i,this.array)),this.array[t+0]=e,this.array[t+1]=i,this}setXYZ(t,e,i,n){return t*=this.itemSize,this.normalized&&(e=Ai(e,this.array),i=Ai(i,this.array),n=Ai(n,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this}setXYZW(t,e,i,n,s){return t*=this.itemSize,this.normalized&&(e=Ai(e,this.array),i=Ai(i,this.array),n=Ai(n,this.array),s=Ai(s,this.array)),this.array[t+0]=e,this.array[t+1]=i,this.array[t+2]=n,this.array[t+3]=s,this}onUpload(t){return this.onUploadCallback=t,this}clone(){return new this.constructor(this.array,this.itemSize).copy(this)}toJSON(){const t={itemSize:this.itemSize,type:this.array.constructor.name,array:Array.from(this.array),normalized:this.normalized};return this.name!==""&&(t.name=this.name),this.usage!==ly&&(t.usage=this.usage),t}}class GR extends zr{constructor(t,e,i){super(new Uint16Array(t),e,i)}}class WR extends zr{constructor(t,e,i){super(new Uint32Array(t),e,i)}}class on extends zr{constructor(t,e,i){super(new Float32Array(t),e,i)}}let $R=0;const Qi=new Li,yp=new An,Vo=new V,Hi=new qr,Xa=new qr,qe=new V;class pi extends zd{constructor(){super(),this.isBufferGeometry=!0,Object.defineProperty(this,"id",{value:$R++}),this.uuid=va(),this.name="",this.type="BufferGeometry",this.index=null,this.indirect=null,this.attributes={},this.morphAttributes={},this.morphTargetsRelative=!1,this.groups=[],this.boundingBox=null,this.boundingSphere=null,this.drawRange={start:0,count:1/0},this.userData={}}getIndex(){return this.index}setIndex(t){return Array.isArray(t)?this.index=new(CR(t)?WR:GR)(t,1):this.index=t,this}setIndirect(t){return this.indirect=t,this}getIndirect(){return this.indirect}getAttribute(t){return this.attributes[t]}setAttribute(t,e){return this.attributes[t]=e,this}deleteAttribute(t){return delete this.attributes[t],this}hasAttribute(t){return this.attributes[t]!==void 0}addGroup(t,e,i=0){this.groups.push({start:t,count:e,materialIndex:i})}clearGroups(){this.groups=[]}setDrawRange(t,e){this.drawRange.start=t,this.drawRange.count=e}applyMatrix4(t){const e=this.attributes.position;e!==void 0&&(e.applyMatrix4(t),e.needsUpdate=!0);const i=this.attributes.normal;if(i!==void 0){const s=new Qs().getNormalMatrix(t);i.applyNormalMatrix(s),i.needsUpdate=!0}const n=this.attributes.tangent;return n!==void 0&&(n.transformDirection(t),n.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}applyQuaternion(t){return Qi.makeRotationFromQuaternion(t),this.applyMatrix4(Qi),this}rotateX(t){return Qi.makeRotationX(t),this.applyMatrix4(Qi),this}rotateY(t){return Qi.makeRotationY(t),this.applyMatrix4(Qi),this}rotateZ(t){return Qi.makeRotationZ(t),this.applyMatrix4(Qi),this}translate(t,e,i){return Qi.makeTranslation(t,e,i),this.applyMatrix4(Qi),this}scale(t,e,i){return Qi.makeScale(t,e,i),this.applyMatrix4(Qi),this}lookAt(t){return yp.lookAt(t),yp.updateMatrix(),this.applyMatrix4(yp.matrix),this}center(){return this.computeBoundingBox(),this.boundingBox.getCenter(Vo).negate(),this.translate(Vo.x,Vo.y,Vo.z),this}setFromPoints(t){const e=this.getAttribute("position");if(e===void 0){const i=[];for(let n=0,s=t.length;n<s;n++){const o=t[n];i.push(o.x,o.y,o.z||0)}this.setAttribute("position",new on(i,3))}else{const i=Math.min(t.length,e.count);for(let n=0;n<i;n++){const s=t[n];e.setXYZ(n,s.x,s.y,s.z||0)}t.length>e.count&&console.warn("THREE.BufferGeometry: Buffer size too small for points data. Use .dispose() and create a new geometry."),e.needsUpdate=!0}return this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new qr);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box.",this),this.boundingBox.set(new V(-1/0,-1/0,-1/0),new V(1/0,1/0,1/0));return}if(t!==void 0){if(this.boundingBox.setFromBufferAttribute(t),e)for(let i=0,n=e.length;i<n;i++){const s=e[i];Hi.setFromBufferAttribute(s),this.morphTargetsRelative?(qe.addVectors(this.boundingBox.min,Hi.min),this.boundingBox.expandByPoint(qe),qe.addVectors(this.boundingBox.max,Hi.max),this.boundingBox.expandByPoint(qe)):(this.boundingBox.expandByPoint(Hi.min),this.boundingBox.expandByPoint(Hi.max))}}else this.boundingBox.makeEmpty();(isNaN(this.boundingBox.min.x)||isNaN(this.boundingBox.min.y)||isNaN(this.boundingBox.min.z))&&console.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The "position" attribute is likely to have NaN values.',this)}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new fg);const t=this.attributes.position,e=this.morphAttributes.position;if(t&&t.isGLBufferAttribute){console.error("THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere.",this),this.boundingSphere.set(new V,1/0);return}if(t){const i=this.boundingSphere.center;if(Hi.setFromBufferAttribute(t),e)for(let s=0,o=e.length;s<o;s++){const a=e[s];Xa.setFromBufferAttribute(a),this.morphTargetsRelative?(qe.addVectors(Hi.min,Xa.min),Hi.expandByPoint(qe),qe.addVectors(Hi.max,Xa.max),Hi.expandByPoint(qe)):(Hi.expandByPoint(Xa.min),Hi.expandByPoint(Xa.max))}Hi.getCenter(i);let n=0;for(let s=0,o=t.count;s<o;s++)qe.fromBufferAttribute(t,s),n=Math.max(n,i.distanceToSquared(qe));if(e)for(let s=0,o=e.length;s<o;s++){const a=e[s],h=this.morphTargetsRelative;for(let l=0,c=a.count;l<c;l++)qe.fromBufferAttribute(a,l),h&&(Vo.fromBufferAttribute(t,l),qe.add(Vo)),n=Math.max(n,i.distanceToSquared(qe))}this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The "position" attribute is likely to have NaN values.',this)}}computeTangents(){const t=this.index,e=this.attributes;if(t===null||e.position===void 0||e.normal===void 0||e.uv===void 0){console.error("THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)");return}const i=e.position,n=e.normal,s=e.uv;this.hasAttribute("tangent")===!1&&this.setAttribute("tangent",new zr(new Float32Array(4*i.count),4));const o=this.getAttribute("tangent"),a=[],h=[];for(let T=0;T<i.count;T++)a[T]=new V,h[T]=new V;const l=new V,c=new V,u=new V,d=new Jt,f=new Jt,p=new Jt,_=new V,g=new V;function m(T,S,M){l.fromBufferAttribute(i,T),c.fromBufferAttribute(i,S),u.fromBufferAttribute(i,M),d.fromBufferAttribute(s,T),f.fromBufferAttribute(s,S),p.fromBufferAttribute(s,M),c.sub(l),u.sub(l),f.sub(d),p.sub(d);const I=1/(f.x*p.y-p.x*f.y);isFinite(I)&&(_.copy(c).multiplyScalar(p.y).addScaledVector(u,-f.y).multiplyScalar(I),g.copy(u).multiplyScalar(f.x).addScaledVector(c,-p.x).multiplyScalar(I),a[T].add(_),a[S].add(_),a[M].add(_),h[T].add(g),h[S].add(g),h[M].add(g))}let x=this.groups;x.length===0&&(x=[{start:0,count:t.count}]);for(let T=0,S=x.length;T<S;++T){const M=x[T],I=M.start,N=M.count;for(let O=I,B=I+N;O<B;O+=3)m(t.getX(O+0),t.getX(O+1),t.getX(O+2))}const y=new V,v=new V,E=new V,b=new V;function w(T){E.fromBufferAttribute(n,T),b.copy(E);const S=a[T];y.copy(S),y.sub(E.multiplyScalar(E.dot(S))).normalize(),v.crossVectors(b,S);const I=v.dot(h[T])<0?-1:1;o.setXYZW(T,y.x,y.y,y.z,I)}for(let T=0,S=x.length;T<S;++T){const M=x[T],I=M.start,N=M.count;for(let O=I,B=I+N;O<B;O+=3)w(t.getX(O+0)),w(t.getX(O+1)),w(t.getX(O+2))}}computeVertexNormals(){const t=this.index,e=this.getAttribute("position");if(e!==void 0){let i=this.getAttribute("normal");if(i===void 0)i=new zr(new Float32Array(e.count*3),3),this.setAttribute("normal",i);else for(let d=0,f=i.count;d<f;d++)i.setXYZ(d,0,0,0);const n=new V,s=new V,o=new V,a=new V,h=new V,l=new V,c=new V,u=new V;if(t)for(let d=0,f=t.count;d<f;d+=3){const p=t.getX(d+0),_=t.getX(d+1),g=t.getX(d+2);n.fromBufferAttribute(e,p),s.fromBufferAttribute(e,_),o.fromBufferAttribute(e,g),c.subVectors(o,s),u.subVectors(n,s),c.cross(u),a.fromBufferAttribute(i,p),h.fromBufferAttribute(i,_),l.fromBufferAttribute(i,g),a.add(c),h.add(c),l.add(c),i.setXYZ(p,a.x,a.y,a.z),i.setXYZ(_,h.x,h.y,h.z),i.setXYZ(g,l.x,l.y,l.z)}else for(let d=0,f=e.count;d<f;d+=3)n.fromBufferAttribute(e,d+0),s.fromBufferAttribute(e,d+1),o.fromBufferAttribute(e,d+2),c.subVectors(o,s),u.subVectors(n,s),c.cross(u),i.setXYZ(d+0,c.x,c.y,c.z),i.setXYZ(d+1,c.x,c.y,c.z),i.setXYZ(d+2,c.x,c.y,c.z);this.normalizeNormals(),i.needsUpdate=!0}}normalizeNormals(){const t=this.attributes.normal;for(let e=0,i=t.count;e<i;e++)qe.fromBufferAttribute(t,e),qe.normalize(),t.setXYZ(e,qe.x,qe.y,qe.z)}toNonIndexed(){function t(a,h){const l=a.array,c=a.itemSize,u=a.normalized,d=new l.constructor(h.length*c);let f=0,p=0;for(let _=0,g=h.length;_<g;_++){a.isInterleavedBufferAttribute?f=h[_]*a.data.stride+a.offset:f=h[_]*c;for(let m=0;m<c;m++)d[p++]=l[f++]}return new zr(d,c,u)}if(this.index===null)return console.warn("THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed."),this;const e=new pi,i=this.index.array,n=this.attributes;for(const a in n){const h=n[a],l=t(h,i);e.setAttribute(a,l)}const s=this.morphAttributes;for(const a in s){const h=[],l=s[a];for(let c=0,u=l.length;c<u;c++){const d=l[c],f=t(d,i);h.push(f)}e.morphAttributes[a]=h}e.morphTargetsRelative=this.morphTargetsRelative;const o=this.groups;for(let a=0,h=o.length;a<h;a++){const l=o[a];e.addGroup(l.start,l.count,l.materialIndex)}return e}toJSON(){const t={metadata:{version:4.6,type:"BufferGeometry",generator:"BufferGeometry.toJSON"}};if(t.uuid=this.uuid,t.type=this.type,this.name!==""&&(t.name=this.name),Object.keys(this.userData).length>0&&(t.userData=this.userData),this.parameters!==void 0){const h=this.parameters;for(const l in h)h[l]!==void 0&&(t[l]=h[l]);return t}t.data={attributes:{}};const e=this.index;e!==null&&(t.data.index={type:e.array.constructor.name,array:Array.prototype.slice.call(e.array)});const i=this.attributes;for(const h in i){const l=i[h];t.data.attributes[h]=l.toJSON(t.data)}const n={};let s=!1;for(const h in this.morphAttributes){const l=this.morphAttributes[h],c=[];for(let u=0,d=l.length;u<d;u++){const f=l[u];c.push(f.toJSON(t.data))}c.length>0&&(n[h]=c,s=!0)}s&&(t.data.morphAttributes=n,t.data.morphTargetsRelative=this.morphTargetsRelative);const o=this.groups;o.length>0&&(t.data.groups=JSON.parse(JSON.stringify(o)));const a=this.boundingSphere;return a!==null&&(t.data.boundingSphere={center:a.center.toArray(),radius:a.radius}),t}clone(){return new this.constructor().copy(this)}copy(t){this.index=null,this.attributes={},this.morphAttributes={},this.groups=[],this.boundingBox=null,this.boundingSphere=null;const e={};this.name=t.name;const i=t.index;i!==null&&this.setIndex(i.clone(e));const n=t.attributes;for(const l in n){const c=n[l];this.setAttribute(l,c.clone(e))}const s=t.morphAttributes;for(const l in s){const c=[],u=s[l];for(let d=0,f=u.length;d<f;d++)c.push(u[d].clone(e));this.morphAttributes[l]=c}this.morphTargetsRelative=t.morphTargetsRelative;const o=t.groups;for(let l=0,c=o.length;l<c;l++){const u=o[l];this.addGroup(u.start,u.count,u.materialIndex)}const a=t.boundingBox;a!==null&&(this.boundingBox=a.clone());const h=t.boundingSphere;return h!==null&&(this.boundingSphere=h.clone()),this.drawRange.start=t.drawRange.start,this.drawRange.count=t.drawRange.count,this.userData=t.userData,this}dispose(){this.dispatchEvent({type:"dispose"})}}const wy=new Li,yr=new pg,Dc=new fg,Sy=new V,Oc=new V,Fc=new V,zc=new V,xp=new V,Uc=new V,Ay=new V,Nc=new V;class di extends An{constructor(t=new pi,e=new xi){super(),this.isMesh=!0,this.type="Mesh",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),t.morphTargetInfluences!==void 0&&(this.morphTargetInfluences=t.morphTargetInfluences.slice()),t.morphTargetDictionary!==void 0&&(this.morphTargetDictionary=Object.assign({},t.morphTargetDictionary)),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const n=e[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}getVertexPosition(t,e){const i=this.geometry,n=i.attributes.position,s=i.morphAttributes.position,o=i.morphTargetsRelative;e.fromBufferAttribute(n,t);const a=this.morphTargetInfluences;if(s&&a){Uc.set(0,0,0);for(let h=0,l=s.length;h<l;h++){const c=a[h],u=s[h];c!==0&&(xp.fromBufferAttribute(u,t),o?Uc.addScaledVector(xp,c):Uc.addScaledVector(xp.sub(e),c))}e.add(Uc)}return e}raycast(t,e){const i=this.geometry,n=this.material,s=this.matrixWorld;n!==void 0&&(i.boundingSphere===null&&i.computeBoundingSphere(),Dc.copy(i.boundingSphere),Dc.applyMatrix4(s),yr.copy(t.ray).recast(t.near),!(Dc.containsPoint(yr.origin)===!1&&(yr.intersectSphere(Dc,Sy)===null||yr.origin.distanceToSquared(Sy)>(t.far-t.near)**2))&&(wy.copy(s).invert(),yr.copy(t.ray).applyMatrix4(wy),!(i.boundingBox!==null&&yr.intersectsBox(i.boundingBox)===!1)&&this._computeIntersections(t,e,yr)))}_computeIntersections(t,e,i){let n;const s=this.geometry,o=this.material,a=s.index,h=s.attributes.position,l=s.attributes.uv,c=s.attributes.uv1,u=s.attributes.normal,d=s.groups,f=s.drawRange;if(a!==null)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],x=Math.max(g.start,f.start),y=Math.min(a.count,Math.min(g.start+g.count,f.start+f.count));for(let v=x,E=y;v<E;v+=3){const b=a.getX(v),w=a.getX(v+1),T=a.getX(v+2);n=Bc(this,m,t,i,l,c,u,b,w,T),n&&(n.faceIndex=Math.floor(v/3),n.face.materialIndex=g.materialIndex,e.push(n))}}else{const p=Math.max(0,f.start),_=Math.min(a.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const x=a.getX(g),y=a.getX(g+1),v=a.getX(g+2);n=Bc(this,o,t,i,l,c,u,x,y,v),n&&(n.faceIndex=Math.floor(g/3),e.push(n))}}else if(h!==void 0)if(Array.isArray(o))for(let p=0,_=d.length;p<_;p++){const g=d[p],m=o[g.materialIndex],x=Math.max(g.start,f.start),y=Math.min(h.count,Math.min(g.start+g.count,f.start+f.count));for(let v=x,E=y;v<E;v+=3){const b=v,w=v+1,T=v+2;n=Bc(this,m,t,i,l,c,u,b,w,T),n&&(n.faceIndex=Math.floor(v/3),n.face.materialIndex=g.materialIndex,e.push(n))}}else{const p=Math.max(0,f.start),_=Math.min(h.count,f.start+f.count);for(let g=p,m=_;g<m;g+=3){const x=g,y=g+1,v=g+2;n=Bc(this,o,t,i,l,c,u,x,y,v),n&&(n.faceIndex=Math.floor(g/3),e.push(n))}}}}function XR(r,t,e,i,n,s,o,a){let h;if(t.side===vR?h=i.intersectTriangle(o,s,n,!0,a):h=i.intersectTriangle(n,s,o,t.side===nm,a),h===null)return null;Nc.copy(a),Nc.applyMatrix4(r.matrixWorld);const l=e.ray.origin.distanceTo(Nc);return l<e.near||l>e.far?null:{distance:l,point:Nc.clone(),object:r}}function Bc(r,t,e,i,n,s,o,a,h,l){r.getVertexPosition(a,Oc),r.getVertexPosition(h,Fc),r.getVertexPosition(l,zc);const c=XR(r,t,e,i,Oc,Fc,zc,Ay);if(c){const u=new V;Sn.getBarycoord(Ay,Oc,Fc,zc,u),n&&(c.uv=Sn.getInterpolatedAttribute(n,a,h,l,u,new Jt)),s&&(c.uv1=Sn.getInterpolatedAttribute(s,a,h,l,u,new Jt)),o&&(c.normal=Sn.getInterpolatedAttribute(o,a,h,l,u,new V),c.normal.dot(i.direction)>0&&c.normal.multiplyScalar(-1));const d={a,b:h,c:l,normal:new V,materialIndex:0};Sn.getNormal(Oc,Fc,zc,d.normal),c.face=d,c.barycoord=u}return c}class sm extends An{constructor(){super(),this.isGroup=!0,this.type="Group"}}class Xs extends Wb{constructor(t){super(),this.isLineBasicMaterial=!0,this.type="LineBasicMaterial",this.color=new ba(16777215),this.map=null,this.linewidth=1,this.linecap="round",this.linejoin="round",this.fog=!0,this.setValues(t)}copy(t){return super.copy(t),this.color.copy(t.color),this.map=t.map,this.linewidth=t.linewidth,this.linecap=t.linecap,this.linejoin=t.linejoin,this.fog=t.fog,this}}const Yu=new V,Zu=new V,Ey=new Li,qa=new pg,kc=new fg,vp=new V,Ty=new V;class nh extends An{constructor(t=new pi,e=new Xs){super(),this.isLine=!0,this.type="Line",this.geometry=t,this.material=e,this.updateMorphTargets()}copy(t,e){return super.copy(t,e),this.material=Array.isArray(t.material)?t.material.slice():t.material,this.geometry=t.geometry,this}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,i=[0];for(let n=1,s=e.count;n<s;n++)Yu.fromBufferAttribute(e,n-1),Zu.fromBufferAttribute(e,n),i[n]=i[n-1],i[n]+=Yu.distanceTo(Zu);t.setAttribute("lineDistance",new on(i,1))}else console.warn("THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}raycast(t,e){const i=this.geometry,n=this.matrixWorld,s=t.params.Line.threshold,o=i.drawRange;if(i.boundingSphere===null&&i.computeBoundingSphere(),kc.copy(i.boundingSphere),kc.applyMatrix4(n),kc.radius+=s,t.ray.intersectsSphere(kc)===!1)return;Ey.copy(n).invert(),qa.copy(t.ray).applyMatrix4(Ey);const a=s/((this.scale.x+this.scale.y+this.scale.z)/3),h=a*a,l=this.isLineSegments?2:1,c=i.index,d=i.attributes.position;if(c!==null){const f=Math.max(0,o.start),p=Math.min(c.count,o.start+o.count);for(let _=f,g=p-1;_<g;_+=l){const m=c.getX(_),x=c.getX(_+1),y=Vc(this,t,qa,h,m,x,_);y&&e.push(y)}if(this.isLineLoop){const _=c.getX(p-1),g=c.getX(f),m=Vc(this,t,qa,h,_,g,p-1);m&&e.push(m)}}else{const f=Math.max(0,o.start),p=Math.min(d.count,o.start+o.count);for(let _=f,g=p-1;_<g;_+=l){const m=Vc(this,t,qa,h,_,_+1,_);m&&e.push(m)}if(this.isLineLoop){const _=Vc(this,t,qa,h,p-1,f,p-1);_&&e.push(_)}}}updateMorphTargets(){const e=this.geometry.morphAttributes,i=Object.keys(e);if(i.length>0){const n=e[i[0]];if(n!==void 0){this.morphTargetInfluences=[],this.morphTargetDictionary={};for(let s=0,o=n.length;s<o;s++){const a=n[s].name||String(s);this.morphTargetInfluences.push(0),this.morphTargetDictionary[a]=s}}}}}function Vc(r,t,e,i,n,s,o){const a=r.geometry.attributes.position;if(Yu.fromBufferAttribute(a,n),Zu.fromBufferAttribute(a,s),e.distanceSqToSegment(Yu,Zu,vp,Ty)>i)return;vp.applyMatrix4(r.matrixWorld);const l=t.ray.origin.distanceTo(vp);if(!(l<t.near||l>t.far))return{distance:l,point:Ty.clone().applyMatrix4(r.matrixWorld),index:o,face:null,faceIndex:null,barycoord:null,object:r}}const Cy=new V,Ry=new V;class Hc extends nh{constructor(t,e){super(t,e),this.isLineSegments=!0,this.type="LineSegments"}computeLineDistances(){const t=this.geometry;if(t.index===null){const e=t.attributes.position,i=[];for(let n=0,s=e.count;n<s;n+=2)Cy.fromBufferAttribute(e,n),Ry.fromBufferAttribute(e,n+1),i[n]=n===0?0:i[n-1],i[n+1]=i[n]+Cy.distanceTo(Ry);t.setAttribute("lineDistance",new on(i,1))}else console.warn("THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.");return this}}class Wn{constructor(){this.type="Curve",this.arcLengthDivisions=200}getPoint(){return console.warn("THREE.Curve: .getPoint() not implemented."),null}getPointAt(t,e){const i=this.getUtoTmapping(t);return this.getPoint(i,e)}getPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return e}getSpacedPoints(t=5){const e=[];for(let i=0;i<=t;i++)e.push(this.getPointAt(i/t));return e}getLength(){const t=this.getLengths();return t[t.length-1]}getLengths(t=this.arcLengthDivisions){if(this.cacheArcLengths&&this.cacheArcLengths.length===t+1&&!this.needsUpdate)return this.cacheArcLengths;this.needsUpdate=!1;const e=[];let i,n=this.getPoint(0),s=0;e.push(0);for(let o=1;o<=t;o++)i=this.getPoint(o/t),s+=i.distanceTo(n),e.push(s),n=i;return this.cacheArcLengths=e,e}updateArcLengths(){this.needsUpdate=!0,this.getLengths()}getUtoTmapping(t,e){const i=this.getLengths();let n=0;const s=i.length;let o;e?o=e:o=t*i[s-1];let a=0,h=s-1,l;for(;a<=h;)if(n=Math.floor(a+(h-a)/2),l=i[n]-o,l<0)a=n+1;else if(l>0)h=n-1;else{h=n;break}if(n=h,i[n]===o)return n/(s-1);const c=i[n],d=i[n+1]-c,f=(o-c)/d;return(n+f)/(s-1)}getTangent(t,e){let n=t-1e-4,s=t+1e-4;n<0&&(n=0),s>1&&(s=1);const o=this.getPoint(n),a=this.getPoint(s),h=e||(o.isVector2?new Jt:new V);return h.copy(a).sub(o).normalize(),h}getTangentAt(t,e){const i=this.getUtoTmapping(t);return this.getTangent(i,e)}computeFrenetFrames(t,e){const i=new V,n=[],s=[],o=[],a=new V,h=new Li;for(let f=0;f<=t;f++){const p=f/t;n[f]=this.getTangentAt(p,new V)}s[0]=new V,o[0]=new V;let l=Number.MAX_VALUE;const c=Math.abs(n[0].x),u=Math.abs(n[0].y),d=Math.abs(n[0].z);c<=l&&(l=c,i.set(1,0,0)),u<=l&&(l=u,i.set(0,1,0)),d<=l&&i.set(0,0,1),a.crossVectors(n[0],i).normalize(),s[0].crossVectors(n[0],a),o[0].crossVectors(n[0],s[0]);for(let f=1;f<=t;f++){if(s[f]=s[f-1].clone(),o[f]=o[f-1].clone(),a.crossVectors(n[f-1],n[f]),a.length()>Number.EPSILON){a.normalize();const p=Math.acos(te(n[f-1].dot(n[f]),-1,1));s[f].applyMatrix4(h.makeRotationAxis(a,p))}o[f].crossVectors(n[f],s[f])}if(e===!0){let f=Math.acos(te(s[0].dot(s[t]),-1,1));f/=t,n[0].dot(a.crossVectors(s[0],s[t]))>0&&(f=-f);for(let p=1;p<=t;p++)s[p].applyMatrix4(h.makeRotationAxis(n[p],f*p)),o[p].crossVectors(n[p],s[p])}return{tangents:n,normals:s,binormals:o}}clone(){return new this.constructor().copy(this)}copy(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}toJSON(){const t={metadata:{version:4.6,type:"Curve",generator:"Curve.toJSON"}};return t.arcLengthDivisions=this.arcLengthDivisions,t.type=this.type,t}fromJSON(t){return this.arcLengthDivisions=t.arcLengthDivisions,this}}class mg extends Wn{constructor(t=0,e=0,i=1,n=1,s=0,o=Math.PI*2,a=!1,h=0){super(),this.isEllipseCurve=!0,this.type="EllipseCurve",this.aX=t,this.aY=e,this.xRadius=i,this.yRadius=n,this.aStartAngle=s,this.aEndAngle=o,this.aClockwise=a,this.aRotation=h}getPoint(t,e=new Jt){const i=e,n=Math.PI*2;let s=this.aEndAngle-this.aStartAngle;const o=Math.abs(s)<Number.EPSILON;for(;s<0;)s+=n;for(;s>n;)s-=n;s<Number.EPSILON&&(o?s=0:s=n),this.aClockwise===!0&&!o&&(s===n?s=-n:s=s-n);const a=this.aStartAngle+t*s;let h=this.aX+this.xRadius*Math.cos(a),l=this.aY+this.yRadius*Math.sin(a);if(this.aRotation!==0){const c=Math.cos(this.aRotation),u=Math.sin(this.aRotation),d=h-this.aX,f=l-this.aY;h=d*c-f*u+this.aX,l=d*u+f*c+this.aY}return i.set(h,l)}copy(t){return super.copy(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}toJSON(){const t=super.toJSON();return t.aX=this.aX,t.aY=this.aY,t.xRadius=this.xRadius,t.yRadius=this.yRadius,t.aStartAngle=this.aStartAngle,t.aEndAngle=this.aEndAngle,t.aClockwise=this.aClockwise,t.aRotation=this.aRotation,t}fromJSON(t){return super.fromJSON(t),this.aX=t.aX,this.aY=t.aY,this.xRadius=t.xRadius,this.yRadius=t.yRadius,this.aStartAngle=t.aStartAngle,this.aEndAngle=t.aEndAngle,this.aClockwise=t.aClockwise,this.aRotation=t.aRotation,this}}class qR extends mg{constructor(t,e,i,n,s,o){super(t,e,i,i,n,s,o),this.isArcCurve=!0,this.type="ArcCurve"}}function gg(){let r=0,t=0,e=0,i=0;function n(s,o,a,h){r=s,t=a,e=-3*s+3*o-2*a-h,i=2*s-2*o+a+h}return{initCatmullRom:function(s,o,a,h,l){n(o,a,l*(a-s),l*(h-o))},initNonuniformCatmullRom:function(s,o,a,h,l,c,u){let d=(o-s)/l-(a-s)/(l+c)+(a-o)/c,f=(a-o)/c-(h-o)/(c+u)+(h-a)/u;d*=c,f*=c,n(o,a,d,f)},calc:function(s){const o=s*s,a=o*s;return r+t*s+e*o+i*a}}}const Gc=new V,bp=new gg,Mp=new gg,wp=new gg;class YR extends Wn{constructor(t=[],e=!1,i="centripetal",n=.5){super(),this.isCatmullRomCurve3=!0,this.type="CatmullRomCurve3",this.points=t,this.closed=e,this.curveType=i,this.tension=n}getPoint(t,e=new V){const i=e,n=this.points,s=n.length,o=(s-(this.closed?0:1))*t;let a=Math.floor(o),h=o-a;this.closed?a+=a>0?0:(Math.floor(Math.abs(a)/s)+1)*s:h===0&&a===s-1&&(a=s-2,h=1);let l,c;this.closed||a>0?l=n[(a-1)%s]:(Gc.subVectors(n[0],n[1]).add(n[0]),l=Gc);const u=n[a%s],d=n[(a+1)%s];if(this.closed||a+2<s?c=n[(a+2)%s]:(Gc.subVectors(n[s-1],n[s-2]).add(n[s-1]),c=Gc),this.curveType==="centripetal"||this.curveType==="chordal"){const f=this.curveType==="chordal"?.5:.25;let p=Math.pow(l.distanceToSquared(u),f),_=Math.pow(u.distanceToSquared(d),f),g=Math.pow(d.distanceToSquared(c),f);_<1e-4&&(_=1),p<1e-4&&(p=_),g<1e-4&&(g=_),bp.initNonuniformCatmullRom(l.x,u.x,d.x,c.x,p,_,g),Mp.initNonuniformCatmullRom(l.y,u.y,d.y,c.y,p,_,g),wp.initNonuniformCatmullRom(l.z,u.z,d.z,c.z,p,_,g)}else this.curveType==="catmullrom"&&(bp.initCatmullRom(l.x,u.x,d.x,c.x,this.tension),Mp.initCatmullRom(l.y,u.y,d.y,c.y,this.tension),wp.initCatmullRom(l.z,u.z,d.z,c.z,this.tension));return i.set(bp.calc(h),Mp.calc(h),wp.calc(h)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const n=t.points[e];this.points.push(n.clone())}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const n=this.points[e];t.points.push(n.toArray())}return t.closed=this.closed,t.curveType=this.curveType,t.tension=this.tension,t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const n=t.points[e];this.points.push(new V().fromArray(n))}return this.closed=t.closed,this.curveType=t.curveType,this.tension=t.tension,this}}function Py(r,t,e,i,n){const s=(i-t)*.5,o=(n-e)*.5,a=r*r,h=r*a;return(2*e-2*i+s+o)*h+(-3*e+3*i-2*s-o)*a+s*r+e}function ZR(r,t){const e=1-r;return e*e*t}function JR(r,t){return 2*(1-r)*r*t}function KR(r,t){return r*r*t}function mh(r,t,e,i){return ZR(r,t)+JR(r,e)+KR(r,i)}function jR(r,t){const e=1-r;return e*e*e*t}function QR(r,t){const e=1-r;return 3*e*e*r*t}function tP(r,t){return 3*(1-r)*r*r*t}function eP(r,t){return r*r*r*t}function gh(r,t,e,i,n){return jR(r,t)+QR(r,e)+tP(r,i)+eP(r,n)}class $b extends Wn{constructor(t=new Jt,e=new Jt,i=new Jt,n=new Jt){super(),this.isCubicBezierCurve=!0,this.type="CubicBezierCurve",this.v0=t,this.v1=e,this.v2=i,this.v3=n}getPoint(t,e=new Jt){const i=e,n=this.v0,s=this.v1,o=this.v2,a=this.v3;return i.set(gh(t,n.x,s.x,o.x,a.x),gh(t,n.y,s.y,o.y,a.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class iP extends Wn{constructor(t=new V,e=new V,i=new V,n=new V){super(),this.isCubicBezierCurve3=!0,this.type="CubicBezierCurve3",this.v0=t,this.v1=e,this.v2=i,this.v3=n}getPoint(t,e=new V){const i=e,n=this.v0,s=this.v1,o=this.v2,a=this.v3;return i.set(gh(t,n.x,s.x,o.x,a.x),gh(t,n.y,s.y,o.y,a.y),gh(t,n.z,s.z,o.z,a.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this.v3.copy(t.v3),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t.v3=this.v3.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this.v3.fromArray(t.v3),this}}class Xb extends Wn{constructor(t=new Jt,e=new Jt){super(),this.isLineCurve=!0,this.type="LineCurve",this.v1=t,this.v2=e}getPoint(t,e=new Jt){const i=e;return t===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new Jt){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class nP extends Wn{constructor(t=new V,e=new V){super(),this.isLineCurve3=!0,this.type="LineCurve3",this.v1=t,this.v2=e}getPoint(t,e=new V){const i=e;return t===1?i.copy(this.v2):(i.copy(this.v2).sub(this.v1),i.multiplyScalar(t).add(this.v1)),i}getPointAt(t,e){return this.getPoint(t,e)}getTangent(t,e=new V){return e.subVectors(this.v2,this.v1).normalize()}getTangentAt(t,e){return this.getTangent(t,e)}copy(t){return super.copy(t),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class qb extends Wn{constructor(t=new Jt,e=new Jt,i=new Jt){super(),this.isQuadraticBezierCurve=!0,this.type="QuadraticBezierCurve",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new Jt){const i=e,n=this.v0,s=this.v1,o=this.v2;return i.set(mh(t,n.x,s.x,o.x),mh(t,n.y,s.y,o.y)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class sP extends Wn{constructor(t=new V,e=new V,i=new V){super(),this.isQuadraticBezierCurve3=!0,this.type="QuadraticBezierCurve3",this.v0=t,this.v1=e,this.v2=i}getPoint(t,e=new V){const i=e,n=this.v0,s=this.v1,o=this.v2;return i.set(mh(t,n.x,s.x,o.x),mh(t,n.y,s.y,o.y),mh(t,n.z,s.z,o.z)),i}copy(t){return super.copy(t),this.v0.copy(t.v0),this.v1.copy(t.v1),this.v2.copy(t.v2),this}toJSON(){const t=super.toJSON();return t.v0=this.v0.toArray(),t.v1=this.v1.toArray(),t.v2=this.v2.toArray(),t}fromJSON(t){return super.fromJSON(t),this.v0.fromArray(t.v0),this.v1.fromArray(t.v1),this.v2.fromArray(t.v2),this}}class Yb extends Wn{constructor(t=[]){super(),this.isSplineCurve=!0,this.type="SplineCurve",this.points=t}getPoint(t,e=new Jt){const i=e,n=this.points,s=(n.length-1)*t,o=Math.floor(s),a=s-o,h=n[o===0?o:o-1],l=n[o],c=n[o>n.length-2?n.length-1:o+1],u=n[o>n.length-3?n.length-1:o+2];return i.set(Py(a,h.x,l.x,c.x,u.x),Py(a,h.y,l.y,c.y,u.y)),i}copy(t){super.copy(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const n=t.points[e];this.points.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.points=[];for(let e=0,i=this.points.length;e<i;e++){const n=this.points[e];t.points.push(n.toArray())}return t}fromJSON(t){super.fromJSON(t),this.points=[];for(let e=0,i=t.points.length;e<i;e++){const n=t.points[e];this.points.push(new Jt().fromArray(n))}return this}}var Iy=Object.freeze({__proto__:null,ArcCurve:qR,CatmullRomCurve3:YR,CubicBezierCurve:$b,CubicBezierCurve3:iP,EllipseCurve:mg,LineCurve:Xb,LineCurve3:nP,QuadraticBezierCurve:qb,QuadraticBezierCurve3:sP,SplineCurve:Yb});class rP extends Wn{constructor(){super(),this.type="CurvePath",this.curves=[],this.autoClose=!1}add(t){this.curves.push(t)}closePath(){const t=this.curves[0].getPoint(0),e=this.curves[this.curves.length-1].getPoint(1);if(!t.equals(e)){const i=t.isVector2===!0?"LineCurve":"LineCurve3";this.curves.push(new Iy[i](e,t))}return this}getPoint(t,e){const i=t*this.getLength(),n=this.getCurveLengths();let s=0;for(;s<n.length;){if(n[s]>=i){const o=n[s]-i,a=this.curves[s],h=a.getLength(),l=h===0?0:1-o/h;return a.getPointAt(l,e)}s++}return null}getLength(){const t=this.getCurveLengths();return t[t.length-1]}updateArcLengths(){this.needsUpdate=!0,this.cacheLengths=null,this.getCurveLengths()}getCurveLengths(){if(this.cacheLengths&&this.cacheLengths.length===this.curves.length)return this.cacheLengths;const t=[];let e=0;for(let i=0,n=this.curves.length;i<n;i++)e+=this.curves[i].getLength(),t.push(e);return this.cacheLengths=t,t}getSpacedPoints(t=40){const e=[];for(let i=0;i<=t;i++)e.push(this.getPoint(i/t));return this.autoClose&&e.push(e[0]),e}getPoints(t=12){const e=[];let i;for(let n=0,s=this.curves;n<s.length;n++){const o=s[n],a=o.isEllipseCurve?t*2:o.isLineCurve||o.isLineCurve3?1:o.isSplineCurve?t*o.points.length:t,h=o.getPoints(a);for(let l=0;l<h.length;l++){const c=h[l];i&&i.equals(c)||(e.push(c),i=c)}}return this.autoClose&&e.length>1&&!e[e.length-1].equals(e[0])&&e.push(e[0]),e}copy(t){super.copy(t),this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const n=t.curves[e];this.curves.push(n.clone())}return this.autoClose=t.autoClose,this}toJSON(){const t=super.toJSON();t.autoClose=this.autoClose,t.curves=[];for(let e=0,i=this.curves.length;e<i;e++){const n=this.curves[e];t.curves.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.autoClose=t.autoClose,this.curves=[];for(let e=0,i=t.curves.length;e<i;e++){const n=t.curves[e];this.curves.push(new Iy[n.type]().fromJSON(n))}return this}}class rm extends rP{constructor(t){super(),this.type="Path",this.currentPoint=new Jt,t&&this.setFromPoints(t)}setFromPoints(t){this.moveTo(t[0].x,t[0].y);for(let e=1,i=t.length;e<i;e++)this.lineTo(t[e].x,t[e].y);return this}moveTo(t,e){return this.currentPoint.set(t,e),this}lineTo(t,e){const i=new Xb(this.currentPoint.clone(),new Jt(t,e));return this.curves.push(i),this.currentPoint.set(t,e),this}quadraticCurveTo(t,e,i,n){const s=new qb(this.currentPoint.clone(),new Jt(t,e),new Jt(i,n));return this.curves.push(s),this.currentPoint.set(i,n),this}bezierCurveTo(t,e,i,n,s,o){const a=new $b(this.currentPoint.clone(),new Jt(t,e),new Jt(i,n),new Jt(s,o));return this.curves.push(a),this.currentPoint.set(s,o),this}splineThru(t){const e=[this.currentPoint.clone()].concat(t),i=new Yb(e);return this.curves.push(i),this.currentPoint.copy(t[t.length-1]),this}arc(t,e,i,n,s,o){const a=this.currentPoint.x,h=this.currentPoint.y;return this.absarc(t+a,e+h,i,n,s,o),this}absarc(t,e,i,n,s,o){return this.absellipse(t,e,i,i,n,s,o),this}ellipse(t,e,i,n,s,o,a,h){const l=this.currentPoint.x,c=this.currentPoint.y;return this.absellipse(t+l,e+c,i,n,s,o,a,h),this}absellipse(t,e,i,n,s,o,a,h){const l=new mg(t,e,i,n,s,o,a,h);if(this.curves.length>0){const u=l.getPoint(0);u.equals(this.currentPoint)||this.lineTo(u.x,u.y)}this.curves.push(l);const c=l.getPoint(1);return this.currentPoint.copy(c),this}copy(t){return super.copy(t),this.currentPoint.copy(t.currentPoint),this}toJSON(){const t=super.toJSON();return t.currentPoint=this.currentPoint.toArray(),t}fromJSON(t){return super.fromJSON(t),this.currentPoint.fromArray(t.currentPoint),this}}class lu extends rm{constructor(t){super(t),this.uuid=va(),this.type="Shape",this.holes=[]}getPointsHoles(t){const e=[];for(let i=0,n=this.holes.length;i<n;i++)e[i]=this.holes[i].getPoints(t);return e}extractPoints(t){return{shape:this.getPoints(t),holes:this.getPointsHoles(t)}}copy(t){super.copy(t),this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const n=t.holes[e];this.holes.push(n.clone())}return this}toJSON(){const t=super.toJSON();t.uuid=this.uuid,t.holes=[];for(let e=0,i=this.holes.length;e<i;e++){const n=this.holes[e];t.holes.push(n.toJSON())}return t}fromJSON(t){super.fromJSON(t),this.uuid=t.uuid,this.holes=[];for(let e=0,i=t.holes.length;e<i;e++){const n=t.holes[e];this.holes.push(new rm().fromJSON(n))}return this}}const oP={triangulate:function(r,t,e=2){const i=t&&t.length,n=i?t[0]*e:r.length;let s=Zb(r,0,n,e,!0);const o=[];if(!s||s.next===s.prev)return o;let a,h,l,c,u,d,f;if(i&&(s=uP(r,t,s,e)),r.length>80*e){a=l=r[0],h=c=r[1];for(let p=e;p<n;p+=e)u=r[p],d=r[p+1],u<a&&(a=u),d<h&&(h=d),u>l&&(l=u),d>c&&(c=d);f=Math.max(l-a,c-h),f=f!==0?32767/f:0}return Bh(s,o,e,a,h,f,0),o}};function Zb(r,t,e,i,n){let s,o;if(n===MP(r,t,e,i)>0)for(s=t;s<e;s+=i)o=Ly(s,r[s],r[s+1],o);else for(s=e-i;s>=t;s-=i)o=Ly(s,r[s],r[s+1],o);return o&&Ud(o,o.next)&&(Vh(o),o=o.next),o}function Gr(r,t){if(!r)return r;t||(t=r);let e=r,i;do if(i=!1,!e.steiner&&(Ud(e,e.next)||Te(e.prev,e,e.next)===0)){if(Vh(e),e=t=e.prev,e===e.next)break;i=!0}else e=e.next;while(i||e!==t);return t}function Bh(r,t,e,i,n,s,o){if(!r)return;!o&&s&&gP(r,i,n,s);let a=r,h,l;for(;r.prev!==r.next;){if(h=r.prev,l=r.next,s?hP(r,i,n,s):aP(r)){t.push(h.i/e|0),t.push(r.i/e|0),t.push(l.i/e|0),Vh(r),r=l.next,a=l.next;continue}if(r=l,r===a){o?o===1?(r=lP(Gr(r),t,e),Bh(r,t,e,i,n,s,2)):o===2&&cP(r,t,e,i,n,s):Bh(Gr(r),t,e,i,n,s,1);break}}}function aP(r){const t=r.prev,e=r,i=r.next;if(Te(t,e,i)>=0)return!1;const n=t.x,s=e.x,o=i.x,a=t.y,h=e.y,l=i.y,c=n<s?n<o?n:o:s<o?s:o,u=a<h?a<l?a:l:h<l?h:l,d=n>s?n>o?n:o:s>o?s:o,f=a>h?a>l?a:l:h>l?h:l;let p=i.next;for(;p!==t;){if(p.x>=c&&p.x<=d&&p.y>=u&&p.y<=f&&Qo(n,a,s,h,o,l,p.x,p.y)&&Te(p.prev,p,p.next)>=0)return!1;p=p.next}return!0}function hP(r,t,e,i){const n=r.prev,s=r,o=r.next;if(Te(n,s,o)>=0)return!1;const a=n.x,h=s.x,l=o.x,c=n.y,u=s.y,d=o.y,f=a<h?a<l?a:l:h<l?h:l,p=c<u?c<d?c:d:u<d?u:d,_=a>h?a>l?a:l:h>l?h:l,g=c>u?c>d?c:d:u>d?u:d,m=om(f,p,t,e,i),x=om(_,g,t,e,i);let y=r.prevZ,v=r.nextZ;for(;y&&y.z>=m&&v&&v.z<=x;){if(y.x>=f&&y.x<=_&&y.y>=p&&y.y<=g&&y!==n&&y!==o&&Qo(a,c,h,u,l,d,y.x,y.y)&&Te(y.prev,y,y.next)>=0||(y=y.prevZ,v.x>=f&&v.x<=_&&v.y>=p&&v.y<=g&&v!==n&&v!==o&&Qo(a,c,h,u,l,d,v.x,v.y)&&Te(v.prev,v,v.next)>=0))return!1;v=v.nextZ}for(;y&&y.z>=m;){if(y.x>=f&&y.x<=_&&y.y>=p&&y.y<=g&&y!==n&&y!==o&&Qo(a,c,h,u,l,d,y.x,y.y)&&Te(y.prev,y,y.next)>=0)return!1;y=y.prevZ}for(;v&&v.z<=x;){if(v.x>=f&&v.x<=_&&v.y>=p&&v.y<=g&&v!==n&&v!==o&&Qo(a,c,h,u,l,d,v.x,v.y)&&Te(v.prev,v,v.next)>=0)return!1;v=v.nextZ}return!0}function lP(r,t,e){let i=r;do{const n=i.prev,s=i.next.next;!Ud(n,s)&&Jb(n,i,i.next,s)&&kh(n,s)&&kh(s,n)&&(t.push(n.i/e|0),t.push(i.i/e|0),t.push(s.i/e|0),Vh(i),Vh(i.next),i=r=s),i=i.next}while(i!==r);return Gr(i)}function cP(r,t,e,i,n,s){let o=r;do{let a=o.next.next;for(;a!==o.prev;){if(o.i!==a.i&&xP(o,a)){let h=Kb(o,a);o=Gr(o,o.next),h=Gr(h,h.next),Bh(o,t,e,i,n,s,0),Bh(h,t,e,i,n,s,0);return}a=a.next}o=o.next}while(o!==r)}function uP(r,t,e,i){const n=[];let s,o,a,h,l;for(s=0,o=t.length;s<o;s++)a=t[s]*i,h=s<o-1?t[s+1]*i:r.length,l=Zb(r,a,h,i,!1),l===l.next&&(l.steiner=!0),n.push(yP(l));for(n.sort(dP),s=0;s<n.length;s++)e=fP(n[s],e);return e}function dP(r,t){return r.x-t.x}function fP(r,t){const e=pP(r,t);if(!e)return t;const i=Kb(e,r);return Gr(i,i.next),Gr(e,e.next)}function pP(r,t){let e=t,i=-1/0,n;const s=r.x,o=r.y;do{if(o<=e.y&&o>=e.next.y&&e.next.y!==e.y){const d=e.x+(o-e.y)*(e.next.x-e.x)/(e.next.y-e.y);if(d<=s&&d>i&&(i=d,n=e.x<e.next.x?e:e.next,d===s))return n}e=e.next}while(e!==t);if(!n)return null;const a=n,h=n.x,l=n.y;let c=1/0,u;e=n;do s>=e.x&&e.x>=h&&s!==e.x&&Qo(o<l?s:i,o,h,l,o<l?i:s,o,e.x,e.y)&&(u=Math.abs(o-e.y)/(s-e.x),kh(e,r)&&(u<c||u===c&&(e.x>n.x||e.x===n.x&&mP(n,e)))&&(n=e,c=u)),e=e.next;while(e!==a);return n}function mP(r,t){return Te(r.prev,r,t.prev)<0&&Te(t.next,r,r.next)<0}function gP(r,t,e,i){let n=r;do n.z===0&&(n.z=om(n.x,n.y,t,e,i)),n.prevZ=n.prev,n.nextZ=n.next,n=n.next;while(n!==r);n.prevZ.nextZ=null,n.prevZ=null,_P(n)}function _P(r){let t,e,i,n,s,o,a,h,l=1;do{for(e=r,r=null,s=null,o=0;e;){for(o++,i=e,a=0,t=0;t<l&&(a++,i=i.nextZ,!!i);t++);for(h=l;a>0||h>0&&i;)a!==0&&(h===0||!i||e.z<=i.z)?(n=e,e=e.nextZ,a--):(n=i,i=i.nextZ,h--),s?s.nextZ=n:r=n,n.prevZ=s,s=n;e=i}s.nextZ=null,l*=2}while(o>1);return r}function om(r,t,e,i,n){return r=(r-e)*n|0,t=(t-i)*n|0,r=(r|r<<8)&16711935,r=(r|r<<4)&252645135,r=(r|r<<2)&858993459,r=(r|r<<1)&1431655765,t=(t|t<<8)&16711935,t=(t|t<<4)&252645135,t=(t|t<<2)&858993459,t=(t|t<<1)&1431655765,r|t<<1}function yP(r){let t=r,e=r;do(t.x<e.x||t.x===e.x&&t.y<e.y)&&(e=t),t=t.next;while(t!==r);return e}function Qo(r,t,e,i,n,s,o,a){return(n-o)*(t-a)>=(r-o)*(s-a)&&(r-o)*(i-a)>=(e-o)*(t-a)&&(e-o)*(s-a)>=(n-o)*(i-a)}function xP(r,t){return r.next.i!==t.i&&r.prev.i!==t.i&&!vP(r,t)&&(kh(r,t)&&kh(t,r)&&bP(r,t)&&(Te(r.prev,r,t.prev)||Te(r,t.prev,t))||Ud(r,t)&&Te(r.prev,r,r.next)>0&&Te(t.prev,t,t.next)>0)}function Te(r,t,e){return(t.y-r.y)*(e.x-t.x)-(t.x-r.x)*(e.y-t.y)}function Ud(r,t){return r.x===t.x&&r.y===t.y}function Jb(r,t,e,i){const n=$c(Te(r,t,e)),s=$c(Te(r,t,i)),o=$c(Te(e,i,r)),a=$c(Te(e,i,t));return!!(n!==s&&o!==a||n===0&&Wc(r,e,t)||s===0&&Wc(r,i,t)||o===0&&Wc(e,r,i)||a===0&&Wc(e,t,i))}function Wc(r,t,e){return t.x<=Math.max(r.x,e.x)&&t.x>=Math.min(r.x,e.x)&&t.y<=Math.max(r.y,e.y)&&t.y>=Math.min(r.y,e.y)}function $c(r){return r>0?1:r<0?-1:0}function vP(r,t){let e=r;do{if(e.i!==r.i&&e.next.i!==r.i&&e.i!==t.i&&e.next.i!==t.i&&Jb(e,e.next,r,t))return!0;e=e.next}while(e!==r);return!1}function kh(r,t){return Te(r.prev,r,r.next)<0?Te(r,t,r.next)>=0&&Te(r,r.prev,t)>=0:Te(r,t,r.prev)<0||Te(r,r.next,t)<0}function bP(r,t){let e=r,i=!1;const n=(r.x+t.x)/2,s=(r.y+t.y)/2;do e.y>s!=e.next.y>s&&e.next.y!==e.y&&n<(e.next.x-e.x)*(s-e.y)/(e.next.y-e.y)+e.x&&(i=!i),e=e.next;while(e!==r);return i}function Kb(r,t){const e=new am(r.i,r.x,r.y),i=new am(t.i,t.x,t.y),n=r.next,s=t.prev;return r.next=t,t.prev=r,e.next=n,n.prev=e,i.next=e,e.prev=i,s.next=i,i.prev=s,i}function Ly(r,t,e,i){const n=new am(r,t,e);return i?(n.next=i.next,n.prev=i,i.next.prev=n,i.next=n):(n.prev=n,n.next=n),n}function Vh(r){r.next.prev=r.prev,r.prev.next=r.next,r.prevZ&&(r.prevZ.nextZ=r.nextZ),r.nextZ&&(r.nextZ.prevZ=r.prevZ)}function am(r,t,e){this.i=r,this.x=t,this.y=e,this.prev=null,this.next=null,this.z=0,this.prevZ=null,this.nextZ=null,this.steiner=!1}function MP(r,t,e,i){let n=0;for(let s=t,o=e-i;s<e;s+=i)n+=(r[o]-r[s])*(r[s+1]+r[o+1]),o=s;return n}class oa{static area(t){const e=t.length;let i=0;for(let n=e-1,s=0;s<e;n=s++)i+=t[n].x*t[s].y-t[s].x*t[n].y;return i*.5}static isClockWise(t){return oa.area(t)<0}static triangulateShape(t,e){const i=[],n=[],s=[];Dy(t),Oy(i,t);let o=t.length;e.forEach(Dy);for(let h=0;h<e.length;h++)n.push(o),o+=e[h].length,Oy(i,e[h]);const a=oP.triangulate(i,n);for(let h=0;h<a.length;h+=3)s.push(a.slice(h,h+3));return s}}function Dy(r){const t=r.length;t>2&&r[t-1].equals(r[0])&&r.pop()}function Oy(r,t){for(let e=0;e<t.length;e++)r.push(t[e].x),r.push(t[e].y)}class en extends pi{constructor(t=1,e=1,i=1,n=1){super(),this.type="PlaneGeometry",this.parameters={width:t,height:e,widthSegments:i,heightSegments:n};const s=t/2,o=e/2,a=Math.floor(i),h=Math.floor(n),l=a+1,c=h+1,u=t/a,d=e/h,f=[],p=[],_=[],g=[];for(let m=0;m<c;m++){const x=m*d-o;for(let y=0;y<l;y++){const v=y*u-s;p.push(v,-x,0),_.push(0,0,1),g.push(y/a),g.push(1-m/h)}}for(let m=0;m<h;m++)for(let x=0;x<a;x++){const y=x+l*m,v=x+l*(m+1),E=x+1+l*(m+1),b=x+1+l*m;f.push(y,v,b),f.push(v,E,b)}this.setIndex(f),this.setAttribute("position",new on(p,3)),this.setAttribute("normal",new on(_,3)),this.setAttribute("uv",new on(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new en(t.width,t.height,t.widthSegments,t.heightSegments)}}class Ju extends pi{constructor(t=new lu([new Jt(0,.5),new Jt(-.5,-.5),new Jt(.5,-.5)]),e=12){super(),this.type="ShapeGeometry",this.parameters={shapes:t,curveSegments:e};const i=[],n=[],s=[],o=[];let a=0,h=0;if(Array.isArray(t)===!1)l(t);else for(let c=0;c<t.length;c++)l(t[c]),this.addGroup(a,h,c),a+=h,h=0;this.setIndex(i),this.setAttribute("position",new on(n,3)),this.setAttribute("normal",new on(s,3)),this.setAttribute("uv",new on(o,2));function l(c){const u=n.length/3,d=c.extractPoints(e);let f=d.shape;const p=d.holes;oa.isClockWise(f)===!1&&(f=f.reverse());for(let g=0,m=p.length;g<m;g++){const x=p[g];oa.isClockWise(x)===!0&&(p[g]=x.reverse())}const _=oa.triangulateShape(f,p);for(let g=0,m=p.length;g<m;g++){const x=p[g];f=f.concat(x)}for(let g=0,m=f.length;g<m;g++){const x=f[g];n.push(x.x,x.y,0),s.push(0,0,1),o.push(x.x,x.y)}for(let g=0,m=_.length;g<m;g++){const x=_[g],y=x[0]+u,v=x[1]+u,E=x[2]+u;i.push(y,v,E),h+=3}}}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}toJSON(){const t=super.toJSON(),e=this.parameters.shapes;return wP(e,t)}static fromJSON(t,e){const i=[];for(let n=0,s=t.shapes.length;n<s;n++){const o=e[t.shapes[n]];i.push(o)}return new Ju(i,t.curveSegments)}}function wP(r,t){if(t.shapes=[],Array.isArray(r))for(let e=0,i=r.length;e<i;e++){const n=r[e];t.shapes.push(n.uuid)}else t.shapes.push(r.uuid);return t}class Ku extends pi{constructor(t=1,e=32,i=16,n=0,s=Math.PI*2,o=0,a=Math.PI){super(),this.type="SphereGeometry",this.parameters={radius:t,widthSegments:e,heightSegments:i,phiStart:n,phiLength:s,thetaStart:o,thetaLength:a},e=Math.max(3,Math.floor(e)),i=Math.max(2,Math.floor(i));const h=Math.min(o+a,Math.PI);let l=0;const c=[],u=new V,d=new V,f=[],p=[],_=[],g=[];for(let m=0;m<=i;m++){const x=[],y=m/i;let v=0;m===0&&o===0?v=.5/e:m===i&&h===Math.PI&&(v=-.5/e);for(let E=0;E<=e;E++){const b=E/e;u.x=-t*Math.cos(n+b*s)*Math.sin(o+y*a),u.y=t*Math.cos(o+y*a),u.z=t*Math.sin(n+b*s)*Math.sin(o+y*a),p.push(u.x,u.y,u.z),d.copy(u).normalize(),_.push(d.x,d.y,d.z),g.push(b+v,1-y),x.push(l++)}c.push(x)}for(let m=0;m<i;m++)for(let x=0;x<e;x++){const y=c[m][x+1],v=c[m][x],E=c[m+1][x],b=c[m+1][x+1];(m!==0||o>0)&&f.push(y,v,b),(m!==i-1||h<Math.PI)&&f.push(v,E,b)}this.setIndex(f),this.setAttribute("position",new on(p,3)),this.setAttribute("normal",new on(_,3)),this.setAttribute("uv",new on(g,2))}copy(t){return super.copy(t),this.parameters=Object.assign({},t.parameters),this}static fromJSON(t){return new Ku(t.radius,t.widthSegments,t.heightSegments,t.phiStart,t.phiLength,t.thetaStart,t.thetaLength)}}const Fy={enabled:!1,files:{},add:function(r,t){this.enabled!==!1&&(this.files[r]=t)},get:function(r){if(this.enabled!==!1)return this.files[r]},remove:function(r){delete this.files[r]},clear:function(){this.files={}}};class SP{constructor(t,e,i){const n=this;let s=!1,o=0,a=0,h;const l=[];this.onStart=void 0,this.onLoad=t,this.onProgress=e,this.onError=i,this.itemStart=function(c){a++,s===!1&&n.onStart!==void 0&&n.onStart(c,o,a),s=!0},this.itemEnd=function(c){o++,n.onProgress!==void 0&&n.onProgress(c,o,a),o===a&&(s=!1,n.onLoad!==void 0&&n.onLoad())},this.itemError=function(c){n.onError!==void 0&&n.onError(c)},this.resolveURL=function(c){return h?h(c):c},this.setURLModifier=function(c){return h=c,this},this.addHandler=function(c,u){return l.push(c,u),this},this.removeHandler=function(c){const u=l.indexOf(c);return u!==-1&&l.splice(u,2),this},this.getHandler=function(c){for(let u=0,d=l.length;u<d;u+=2){const f=l[u],p=l[u+1];if(f.global&&(f.lastIndex=0),f.test(c))return p}return null}}}const AP=new SP;class _g{constructor(t){this.manager=t!==void 0?t:AP,this.crossOrigin="anonymous",this.withCredentials=!1,this.path="",this.resourcePath="",this.requestHeader={}}load(){}loadAsync(t,e){const i=this;return new Promise(function(n,s){i.load(t,n,e,s)})}parse(){}setCrossOrigin(t){return this.crossOrigin=t,this}setWithCredentials(t){return this.withCredentials=t,this}setPath(t){return this.path=t,this}setResourcePath(t){return this.resourcePath=t,this}setRequestHeader(t){return this.requestHeader=t,this}}_g.DEFAULT_MATERIAL_NAME="__DEFAULT";const hs={};class EP extends Error{constructor(t,e){super(t),this.response=e}}class TP extends _g{constructor(t){super(t)}load(t,e,i,n){t===void 0&&(t=""),this.path!==void 0&&(t=this.path+t),t=this.manager.resolveURL(t);const s=Fy.get(t);if(s!==void 0)return this.manager.itemStart(t),setTimeout(()=>{e&&e(s),this.manager.itemEnd(t)},0),s;if(hs[t]!==void 0){hs[t].push({onLoad:e,onProgress:i,onError:n});return}hs[t]=[],hs[t].push({onLoad:e,onProgress:i,onError:n});const o=new Request(t,{headers:new Headers(this.requestHeader),credentials:this.withCredentials?"include":"same-origin"}),a=this.mimeType,h=this.responseType;fetch(o).then(l=>{if(l.status===200||l.status===0){if(l.status===0&&console.warn("THREE.FileLoader: HTTP Status 0 received."),typeof ReadableStream>"u"||l.body===void 0||l.body.getReader===void 0)return l;const c=hs[t],u=l.body.getReader(),d=l.headers.get("X-File-Size")||l.headers.get("Content-Length"),f=d?parseInt(d):0,p=f!==0;let _=0;const g=new ReadableStream({start(m){x();function x(){u.read().then(({done:y,value:v})=>{if(y)m.close();else{_+=v.byteLength;const E=new ProgressEvent("progress",{lengthComputable:p,loaded:_,total:f});for(let b=0,w=c.length;b<w;b++){const T=c[b];T.onProgress&&T.onProgress(E)}m.enqueue(v),x()}},y=>{m.error(y)})}}});return new Response(g)}else throw new EP(`fetch for "${l.url}" responded with ${l.status}: ${l.statusText}`,l)}).then(l=>{switch(h){case"arraybuffer":return l.arrayBuffer();case"blob":return l.blob();case"document":return l.text().then(c=>new DOMParser().parseFromString(c,a));case"json":return l.json();default:if(a===void 0)return l.text();{const u=/charset="?([^;"\s]*)"?/i.exec(a),d=u&&u[1]?u[1].toLowerCase():void 0,f=new TextDecoder(d);return l.arrayBuffer().then(p=>f.decode(p))}}}).then(l=>{Fy.add(t,l);const c=hs[t];delete hs[t];for(let u=0,d=c.length;u<d;u++){const f=c[u];f.onLoad&&f.onLoad(l)}}).catch(l=>{const c=hs[t];if(c===void 0)throw this.manager.itemError(t),l;delete hs[t];for(let u=0,d=c.length;u<d;u++){const f=c[u];f.onError&&f.onError(l)}this.manager.itemError(t)}).finally(()=>{this.manager.itemEnd(t)}),this.manager.itemStart(t)}setResponseType(t){return this.responseType=t,this}setMimeType(t){return this.mimeType=t,this}}const zy=new Li;class CP{constructor(t,e,i=0,n=1/0){this.ray=new pg(t,e),this.near=i,this.far=n,this.camera=null,this.layers=new Hb,this.params={Mesh:{},Line:{threshold:1},LOD:{},Points:{threshold:1},Sprite:{}}}set(t,e){this.ray.set(t,e)}setFromCamera(t,e){e.isPerspectiveCamera?(this.ray.origin.setFromMatrixPosition(e.matrixWorld),this.ray.direction.set(t.x,t.y,.5).unproject(e).sub(this.ray.origin).normalize(),this.camera=e):e.isOrthographicCamera?(this.ray.origin.set(t.x,t.y,(e.near+e.far)/(e.near-e.far)).unproject(e),this.ray.direction.set(0,0,-1).transformDirection(e.matrixWorld),this.camera=e):console.error("THREE.Raycaster: Unsupported camera type: "+e.type)}setFromXRController(t){return zy.identity().extractRotation(t.matrixWorld),this.ray.origin.setFromMatrixPosition(t.matrixWorld),this.ray.direction.set(0,0,-1).applyMatrix4(zy),this}intersectObject(t,e=!0,i=[]){return hm(t,this,i,e),i.sort(Uy),i}intersectObjects(t,e=!0,i=[]){for(let n=0,s=t.length;n<s;n++)hm(t[n],this,i,e);return i.sort(Uy),i}}function Uy(r,t){return r.distance-t.distance}function hm(r,t,e,i){let n=!0;if(r.layers.test(t.layers)&&r.raycast(t,e)===!1&&(n=!1),n===!0&&i===!0){const s=r.children;for(let o=0,a=s.length;o<a;o++)hm(s[o],t,e,!0)}}class RP{constructor(){this.type="ShapePath",this.color=new ba,this.subPaths=[],this.currentPath=null}moveTo(t,e){return this.currentPath=new rm,this.subPaths.push(this.currentPath),this.currentPath.moveTo(t,e),this}lineTo(t,e){return this.currentPath.lineTo(t,e),this}quadraticCurveTo(t,e,i,n){return this.currentPath.quadraticCurveTo(t,e,i,n),this}bezierCurveTo(t,e,i,n,s,o){return this.currentPath.bezierCurveTo(t,e,i,n,s,o),this}splineThru(t){return this.currentPath.splineThru(t),this}toShapes(t){function e(m){const x=[];for(let y=0,v=m.length;y<v;y++){const E=m[y],b=new lu;b.curves=E.curves,x.push(b)}return x}function i(m,x){const y=x.length;let v=!1;for(let E=y-1,b=0;b<y;E=b++){let w=x[E],T=x[b],S=T.x-w.x,M=T.y-w.y;if(Math.abs(M)>Number.EPSILON){if(M<0&&(w=x[b],S=-S,T=x[E],M=-M),m.y<w.y||m.y>T.y)continue;if(m.y===w.y){if(m.x===w.x)return!0}else{const I=M*(m.x-w.x)-S*(m.y-w.y);if(I===0)return!0;if(I<0)continue;v=!v}}else{if(m.y!==w.y)continue;if(T.x<=m.x&&m.x<=w.x||w.x<=m.x&&m.x<=T.x)return!0}}return v}const n=oa.isClockWise,s=this.subPaths;if(s.length===0)return[];let o,a,h;const l=[];if(s.length===1)return a=s[0],h=new lu,h.curves=a.curves,l.push(h),l;let c=!n(s[0].getPoints());c=t?!c:c;const u=[],d=[];let f=[],p=0,_;d[p]=void 0,f[p]=[];for(let m=0,x=s.length;m<x;m++)a=s[m],_=a.getPoints(),o=n(_),o=t?!o:o,o?(!c&&d[p]&&p++,d[p]={s:new lu,p:_},d[p].s.curves=a.curves,c&&p++,f[p]=[]):f[p].push({h:a,p:_[0]});if(!d[0])return e(s);if(d.length>1){let m=!1,x=0;for(let y=0,v=d.length;y<v;y++)u[y]=[];for(let y=0,v=d.length;y<v;y++){const E=f[y];for(let b=0;b<E.length;b++){const w=E[b];let T=!0;for(let S=0;S<d.length;S++)i(w.p,d[S].p)&&(y!==S&&x++,T?(T=!1,u[S].push(w)):m=!0);T&&u[y].push(w)}}x>0&&m===!1&&(f=u)}let g;for(let m=0,x=d.length;m<x;m++){h=d[m].s,l.push(h),g=f[m];for(let y=0,v=g.length;y<v;y++)h.holes.push(g[y].h)}return l}}typeof __THREE_DEVTOOLS__<"u"&&__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent("register",{detail:{revision:Bb}}));typeof window<"u"&&(window.__THREE__?console.warn("WARNING: Multiple instances of Three.js being imported."):window.__THREE__=Bb);let PP=class extends _g{constructor(t){super(t)}load(t,e,i,n){const s=this,o=new TP(this.manager);o.setPath(this.path),o.setRequestHeader(this.requestHeader),o.setWithCredentials(this.withCredentials),o.load(t,function(a){const h=s.parse(JSON.parse(a));e&&e(h)},i,n)}parse(t){return new IP(t)}},IP=class{constructor(t){this.isFont=!0,this.type="Font",this.data=t}generateShapes(t,e=100){const i=[],n=function(s,o,a){const h=Array.from(s),l=o/a.resolution,c=(a.boundingBox.yMax-a.boundingBox.yMin+a.underlineThickness)*l,u=[];let d=0,f=0;for(let p=0;p<h.length;p++){const _=h[p];if(_===`
`)d=0,f-=c;else{const g=LP(_,l,d,f,a);d+=g.offsetX,u.push(g.path)}}return u}(t,e,this.data);for(let s=0,o=n.length;s<o;s++)i.push(...n[s].toShapes());return i}};function LP(r,t,e,i,n){const s=n.glyphs[r]||n.glyphs["?"];if(!s)return void console.error('THREE.Font: character "'+r+'" does not exists in font family '+n.familyName+".");const o=new RP;let a,h,l,c,u,d,f,p;if(s.o){const _=s._cachedOutline||(s._cachedOutline=s.o.split(" "));for(let g=0,m=_.length;g<m;)switch(_[g++]){case"m":a=_[g++]*t+e,h=_[g++]*t+i,o.moveTo(a,h);break;case"l":a=_[g++]*t+e,h=_[g++]*t+i,o.lineTo(a,h);break;case"q":l=_[g++]*t+e,c=_[g++]*t+i,u=_[g++]*t+e,d=_[g++]*t+i,o.quadraticCurveTo(u,d,l,c);break;case"b":l=_[g++]*t+e,c=_[g++]*t+i,u=_[g++]*t+e,d=_[g++]*t+i,f=_[g++]*t+e,p=_[g++]*t+i,o.bezierCurveTo(u,d,f,p,l,c)}}return{offsetX:s.ha*t,path:o}}let Ny=class extends di{constructor(e,i){super();q(this,"glyph");q(this,"textMesh");q(this,"helperRegionsBox",[]);this.glyph=i,this.createBoundingMesh(e),this.textMesh=e,this.enableEditing=!1}set enableEditing(e){this.visible=e}get enableEditing(){return this.visible}recomputeBoundingMesh(){this.remove(...this.children),this.createBoundingMesh(this.textMesh)}createBoundingMesh(e){const i=new qr().setFromObject(e);i.expandByScalar(.1);const n=new Float32Array([i.min.x,i.max.y,0,i.max.x,i.max.y,0,i.min.x,i.min.y,0,i.max.x,i.min.y,0,i.min.x,i.min.y,0,i.min.x,i.max.y,0,i.max.x,i.min.y,0,i.max.x,i.max.y,0]),s=new pi().setFromPoints([new V(n[0],n[1],n[2]),new V(n[3],n[4],n[5])]),o=new nh(s,new Xs({color:1909962}));this.add(o);const a=new pi().setFromPoints([new V(n[6],n[7],n[8]),new V(n[9],n[10],n[11])]),h=new nh(a,new Xs({color:1909962}));this.add(h);const l=new pi().setFromPoints([new V(n[12],n[13],n[14]),new V(n[15],n[16],n[17])]),c=new nh(l,new Xs({color:1909962}));this.add(c);const u=new pi().setFromPoints([new V(n[18],n[19],n[20]),new V(n[21],n[22],n[23])]),d=new nh(u,new Xs({color:1909962}));this.add(d);const f=new en(.1,.1),p=new di(f,new xi({color:1909962}));p.position.set(n[0],n[1],0),p.name="left-top-corner";const _=new en(.2,.2),g=new di(_,new xi({color:1909962,wireframe:!0}));g.name="left-top-rot-region",g.position.set(-.1,.1,0),g.userData={glyphNode:this.glyph},this.helperRegionsBox.push(g),p.add(g),this.add(p);const m=new en(.1,.1),x=new di(m,new xi({color:1909962}));x.position.set(n[3],n[4],0),x.name="right-top-corner";const y=new en(.2,.2),v=new di(y,new xi({color:1909962,wireframe:!0}));v.name="right-top-rot-region",v.position.set(.1,.1,0),v.userData={glyphNode:this.glyph},this.helperRegionsBox.push(v),x.add(v),this.add(x);const E=new en(.1,.1),b=new di(E,new xi({color:1909962}));b.position.set(n[6],n[7],0),b.name="left-bottom-corner";const w=new en(.2,.2),T=new di(w,new xi({color:1909962,wireframe:!0}));T.name="left-bottom-rot-region",T.position.set(-.1,-.1,0),T.userData={glyphNode:this.glyph},this.helperRegionsBox.push(T),b.add(T),this.add(b);const S=new en(.1,.1),M=new di(S,new xi({color:1909962}));M.position.set(n[9],n[10],0),M.name="right-bottom-corner";const I=new en(.2,.2),N=new di(I,new xi({color:1909962,wireframe:!0}));N.name="right-bottom-rot-region",N.position.set(.1,-.1,0),N.userData={glyphNode:this.glyph},this.helperRegionsBox.push(N),M.add(N),this.add(M);for(const O of this.helperRegionsBox)O.visible=!1}},DP=class extends sm{constructor(e){super();q(this,"options");q(this,"staticZoom",!0);q(this,"baseRotation",0);q(this,"isDragging",!1);q(this,"text");q(this,"fontSize",1);q(this,"textMesh");q(this,"boundMesh");q(this,"helperRegionsBox",[]);this.options=e,this.text=e.text;const i=e.geometry;if(i.computeBoundingBox(),this.staticZoom=e.staticZoom,!i.boundingBox)throw new Error("BoundingBox is null");const n=-.5*(i.boundingBox.max.x-i.boundingBox.min.x),s=-.5*(i.boundingBox.max.y-i.boundingBox.min.y),o=-.5*(i.boundingBox.max.z-i.boundingBox.min.z);i.translate(n,s,o);const a=new xi({color:e.color,side:qu});this.textMesh=new di(i,a),i.computeBoundingBox(),this.boundMesh=new Ny(this.textMesh,this),this.add(this.boundMesh),this.add(this.textMesh)}updateText(e,i){if(this.text=i,this.remove(this.textMesh),this.remove(this.boundMesh),e.computeBoundingBox(),!e.boundingBox)throw new Error("BoundingBox is null");const n=-.5*(e.boundingBox.max.x-e.boundingBox.min.x),s=-.5*(e.boundingBox.max.y-e.boundingBox.min.y),o=-.5*(e.boundingBox.max.z-e.boundingBox.min.z);e.translate(n,s,o);const a=new xi({color:this.options.color,side:qu});this.textMesh=new di(e,a),e.computeBoundingBox(),this.boundMesh=new Ny(this.textMesh,this),this.add(this.textMesh),this.add(this.boundMesh)}},OP=class{constructor(){q(this,"_scene",null);q(this,"_camera",null);q(this,"loader",new PP);q(this,"_glyphNodes",new Map);q(this,"_currentFont",null);q(this,"_currentFontFace","Imprima_Regular");q(this,"_selectorBox",new sm);q(this,"selectorBoxes",[]);q(this,"_selectedGlyph",null);q(this,"_tempDirection",new V);q(this,"_selectedRotRegion","");q(this,"_tempAngle",0);q(this,"cameraDistance",0);q(this,"_isEditing",!1);q(this,"_glyphSelectorHelper",{nodeCenter:new V,center:new V,direction:new V,angle:0,baseAngleLine:new Hc,debugMesh:new sm,bounds:{min:new V,max:new V}});q(this,"glyphCaster",new CP);q(this,"_canvasDimensions",{width:100,height:100});q(this,"_glyphGround",new di)}set axes(t){switch(this._glyphGround.rotation.set(0,0,0),t){case"x":this._glyphGround.rotation.x=-Math.PI/2;break;case"y":this._glyphGround.rotation.y=-Math.PI/2;break;case"z":this._glyphGround.rotation.z=-Math.PI/2}}set canvasDimensions(t){if(this._canvasDimensions=t,!this._scene)return;this._glyphGround&&this._scene.remove(this._glyphGround);const e=new en(this.canvasDimensions.width,this.canvasDimensions.height),i=new xi({color:16711680,side:qu});this._glyphGround=new di(e,i),this._glyphGround.rotation.x=-Math.PI/2,this._glyphGround.name="glyph-ground",this._scene.add(this._glyphGround)}get canvasDimensions(){return this._canvasDimensions}set scene(t){this._scene=t,this._scene.add(this._selectorBox),this._scene.add(this._glyphSelectorHelper.debugMesh);const e=new di(new Ku(.01),new xi({color:255}));e.name="debug-node-center",this._glyphSelectorHelper.debugMesh.add(e);const i=new di(new Ku(.01),new xi({color:65280}));i.name="debug-direction-sphere",this._glyphSelectorHelper.debugMesh.add(i);const n=new pi().setFromPoints([this._glyphSelectorHelper.center,this._glyphSelectorHelper.direction]),s=new Hc(n,new Xs({color:255}));s.name="debug-line-ac";const o=new pi().setFromPoints([this._glyphSelectorHelper.center,this._glyphSelectorHelper.center]),a=new Hc(o,new Xs({color:16711680}));a.name="debug-line-ab",this._glyphSelectorHelper.debugMesh.add(a),this._glyphSelectorHelper.debugMesh.add(s),this._glyphSelectorHelper.debugMesh.visible=!1;const h=new en(this.canvasDimensions.width,this.canvasDimensions.height),l=new xi({color:16711680,side:qu,transparent:!0,opacity:0});this._glyphGround=new di(h,l),this._glyphGround.rotation.x=-Math.PI/2,this._glyphGround.name="glyph-ground",this._scene.add(this._glyphGround)}set camera(t){this._camera=t,this.setupEvents()}async loadFaces(t){switch(t){case"Imprima_Regular":const e=await fetch("https://raw.githubusercontent.com/OpenGeometry-io/OpenGlyph/refs/heads/main/fontFaces/Imprima_Regular.json"),i=await e.json();this._currentFont=this.loader.parse(i);break;case"Source_Code_Pro_Regular":const n=await fetch("https://raw.githubusercontent.com/OpenGeometry-io/OpenGlyph/refs/heads/main/fontFaces/Source_Code_Pro_Regular.json"),s=await n.json();this._currentFont=this.loader.parse(s);break;case"Roboto_Regular":const o=await fetch("https://raw.githubusercontent.com/OpenGeometry-io/OpenGlyph/refs/heads/main/fontFaces/Roboto_Regular.json"),a=await o.json();this._currentFont=this.loader.parse(a);break;default:const h=await fetch("https://raw.githubusercontent.com/OpenGeometry-io/OpenGlyph/refs/heads/main/fontFaces/Imprima_Regular.json"),l=await h.json();this._currentFont=this.loader.parse(l)}this._currentFontFace=t||"Imprima_Regular"}get fontFace(){return this._currentFontFace}setupEvents(){this.setupTransformation()}checkAssigmnet(){if(this._scene===null)throw new Error("Scene not assigned")}updateSelectorBox(t=new V(-1,0,-1),e=new V(1,0,1)){this.checkAssigmnet(),this._selectorBox&&(this._selectorBox.visible=!1,this._selectorBox.children=[]);const i=new Float32Array([t.x,0,t.z,e.x,0,t.z,t.x,0,e.z,e.x,0,e.z,t.x,0,t.z,t.x,0,e.z,e.x,0,t.z,e.x,0,e.z]),n=new pi;n.setAttribute("position",new zr(i,3));const s=new Hc(n,new Xs({color:1909962}));s.userData={type:"glyph-box-lines"},this._selectorBox.add(s),this._selectorBox&&(this._selectorBox.visible=!0)}get glyphNodes(){return this._glyphNodes}addGlyph(t,e,i,n=!0){var h;this.checkAssigmnet();const s=(h=this._currentFont)==null?void 0:h.generateShapes(t,.1*e),o=new Ju(s),a=new DP({geometry:o,text:t,color:i,staticZoom:n});a.fontSize=e,a.rotation.x=-Math.PI/2,a.updateMatrixWorld(!0),this._scene&&this._scene.add(a),this._glyphNodes.set(a.uuid,a);for(const l of a.boundMesh.helperRegionsBox)this.selectorBoxes.push(l);return a}updateGlyphText(t,e){var a;this.checkAssigmnet();const i=this._glyphNodes.get(t);if(!i)throw new Error("Glyph Node not found");for(const h of i.boundMesh.helperRegionsBox)this.selectorBoxes=this.selectorBoxes.filter(l=>l.uuid!==h.uuid);const n=i.boundMesh.enableEditing,s=(a=this._currentFont)==null?void 0:a.generateShapes(e,.1*i.fontSize),o=new Ju(s);i.updateText(o,e);for(const h of i.boundMesh.helperRegionsBox)this.selectorBoxes.push(h);n&&this.selectGlyph(t)}setupTransformation(){window.addEventListener("mousemove",t=>{var s,o,a,h;const e=new Jt;if(e.x=t.clientX/window.innerWidth*2-1,e.y=-t.clientY/window.innerHeight*2+1,!this._camera||!this._scene)return;this.glyphCaster.setFromCamera(e,this._camera);const i=this.glyphCaster.intersectObjects(this.selectorBoxes);if(i.length>0){const l=i[0].object;if(l.userData.glyphNode.uuid!==((s=this._selectedGlyph)==null?void 0:s.uuid))return void(document.body.style.cursor="default");l.name!=="left-top-rot-region"&&l.name!=="right-top-rot-region"&&l.name!=="left-bottom-rot-region"&&l.name!=="right-bottom-rot-region"||(document.body.style.cursor=`url('https://opengeometry-43705.web.app/Open-Plans-Resources/${l.name}-cursor.png') 10 10, default`,this._selectedRotRegion=l.name)}else document.body.style.cursor="default";if(!this._isEditing)return;const n=this.glyphCaster.intersectObjects([this._scene.getObjectByName("glyph-ground")]);if(n.length>0){document.body.style.cursor=`url('https://opengeometry-43705.web.app/Open-Plans-Resources/${this._selectedRotRegion}-cursor.png') 10 10, default`;const l=n[0].point;if(!((o=this._selectedGlyph)==null?void 0:o.boundMesh.helperRegionsBox.find(v=>v.name===this._selectedRotRegion)))return;const u=this._tempDirection;this._glyphSelectorHelper.debugMesh.getObjectByName("debug-direction-sphere").position.copy(u);const d=this._glyphSelectorHelper.debugMesh.getObjectByName("debug-line-ab"),f=new pi().setFromPoints([this._glyphSelectorHelper.center,l]);d.geometry=f;const p=this._glyphSelectorHelper.debugMesh.getObjectByName("debug-line-ac"),_=new pi().setFromPoints([this._glyphSelectorHelper.center,u]);p.geometry=_;const g=l.clone().sub(this._glyphSelectorHelper.center).normalize(),m=u.clone().sub(this._glyphSelectorHelper.center).normalize(),x=(g.clone().cross(m).y<0?1:-1)*Math.acos(g.dot(m))*180/Math.PI,y=(a=this._selectedGlyph)==null?void 0:a.baseRotation;this._tempAngle=x,this.rotateGlyph((h=this._selectedGlyph)==null?void 0:h.uuid,y+x)}}),window.addEventListener("mousedown",t=>{var n,s;const e=new Jt;if(e.x=t.clientX/window.innerWidth*2-1,e.y=-t.clientY/window.innerHeight*2+1,!this._camera||!this._scene)return;this.glyphCaster.setFromCamera(e,this._camera);const i=this.glyphCaster.intersectObjects(this.selectorBoxes);if(i.length>0){const o=i[0].object;if(o.userData.glyphNode.uuid!==((n=this._selectedGlyph)==null?void 0:n.uuid))return void(document.body.style.cursor="default");if(o.name==="left-top-rot-region"||o.name==="right-top-rot-region"||o.name==="left-bottom-rot-region"||o.name==="right-bottom-rot-region"){this._isEditing=!0,this._selectedGlyph=o.userData.glyphNode;const a=(s=this._selectedGlyph)==null?void 0:s.boundMesh.helperRegionsBox.find(l=>l.name===o.name);if(!a)return;const h=new V;a.getWorldPosition(h),this._tempDirection.copy(h),this._selectedGlyph&&(this._selectedGlyph.isDragging=!0)}}}),window.addEventListener("mouseup",t=>{this._isEditing=!1,document.body.style.cursor="default",this._selectedGlyph&&(this._selectedGlyph.isDragging=!1,this._selectedGlyph.baseRotation+=this._tempAngle,this._tempAngle=0)})}selectGlyph(t){var s;const e=this._glyphNodes.get(t);if(!e)throw new Error("Glyph Node not found");this._selectedGlyph=e,e.boundMesh.enableEditing=!0;const i=new qr().setFromObject(e),n=new V;i.getCenter(n),this._glyphSelectorHelper.center=n,(s=this._glyphSelectorHelper.debugMesh.getObjectByName("debug-node-center"))==null||s.position.copy(n)}clearSelection(){this._selectedGlyph&&(this._selectedGlyph.boundMesh.enableEditing=!1,this._selectedGlyph=null)}updateManager(t){const e=t.position.distanceTo(new V(0,0,0));if(e>this.cameraDistance+1||e<this.cameraDistance-1){for(const[,i]of this._glyphNodes)if(!i.staticZoom){const n=.135*t.position.distanceTo(i.position);for(const s of i.boundMesh.children)s.name!=="left-top-corner"&&s.name!=="right-top-corner"&&s.name!=="left-bottom-corner"&&s.name!=="right-bottom-corner"||s.scale.set(n,n,n)}}}rotateGlyph(t,e){const i=this._glyphNodes.get(t);if(!i)throw new Error("Glyph Node not found");const n=e*Math.PI/180;i.rotation.z=n}getGlyph(t){return this._glyphNodes.get(t)}},Sp=null;const yi=(Sp||(Sp=new OP),Sp);class jb{constructor(){q(this,"trigger",t=>{const e=this.handlers.slice(0);for(const i of e)i(t)});q(this,"handlers",[])}add(t){this.handlers.push(t)}remove(t){this.handlers=this.handlers.filter(e=>e!==t)}reset(){this.handlers.length=0}}class FP extends td{constructor(e,i){super();q(this,"ogType","space");q(this,"mesh",null);q(this,"spaceSetMesh",{});q(this,"spaceSet");q(this,"isEditing",!1);q(this,"isHovered",!1);q(this,"isHighlighted",!1);q(this,"isLocked",!1);q(this,"onSpaceSelected",new jb);this.pencil=e,this.name="space"+this.ogid,i?this.spaceSet=i:this.spaceSet={id:0,position:{x:0,y:0,z:0},color:16711680,type:"internal",coordinates:[[-10,0,-10],[10,0,-10],[10,0,10],[-10,0,10]],labelName:"Space"},this.setGeometry(),this.setupEvents()}get labelName(){return this.spaceSetMesh.labelMesh.text}set labelName(e){const i=this.spaceSetMesh.labelMesh;yi.updateGlyphText(i.uuid,e)}setupEvents(){this.pencil.onElementHover.add(e=>{if(e.name===this.name)this.isHovered=!0;else{this.isHovered=!1;const i=this.material;this.isEditing?i.color.setHex(16777215):i.color.setHex(this.spaceSet.color)}}),this.pencil.onElementSelected.add(e=>{})}setGeometry(){if(!this.spaceSetMesh)return;const{coordinates:e,color:i}=this.spaceSet,{x:n,y:s,z:o}=this.spaceSet.position,a=new Xt;for(let f=0;f<e.length;f++){const p=e[f],_=p[0],g=p[1],m=p[2],x=new me(_,g,m);this.addVertex(x)}const h=Math.floor(Math.random()*16777215);this.spaceSet.color=h;const l=new Oe({color:h,side:fi,transparent:!0,opacity:.5});new ge(a,l).position.set(n,s,o),this.material=l;const u=yi.addGlyph(this.spaceSet.labelName,8,0,!1);this.spaceSetMesh.labelMesh=u;const d=new R;this.geometry.computeBoundingBox(),this.geometry.boundingBox&&(this.geometry.boundingBox.getCenter(d),u.position.set(d.x+n,d.y+.01,d.z+o),this.add(u),this.pencil.pencilMeshes.push(this))}get area(){const e={area:0},i=this.geometry.getAttribute("position");for(let n=0;n<i.array.length;n+=9){const s=new $s(new R(i.array[n],i.array[n+1],i.array[n+2]),new R(i.array[n+3],i.array[n+4],i.array[n+5]),new R(i.array[n+6],i.array[n+7],i.array[n+8]));e.area+=s.getArea()}return e.area}}function By(r){return[r[0],r[2],r[1]]}function zP(r,t,e,i){const n=(s,o)=>Math.abs(s[0]-o[0])<.01&&Math.abs(s[1]-o[1])<.01&&Math.abs(s[2]-o[2])<.01;return n(r,e)||n(r,i)||n(t,e)||n(t,i)}function UP(r){const t=new Set,e=[],i=[],n=[],s=[],o=new Map;Object.entries(r.panels.items).forEach(([l,c])=>{const u=(parseInt(l)+1).toString().padStart(3,"0"),d=By(c.start_point),f=By(c.end_point);if(c.panel_type.includes("WINDOW")){const p={OG_ID:`WINDOW_${u}`,OG_TYPE:"OG_WINDOW",type:"internal",thickness:c.thickness,start:d,end:f};n.push(p),c.room&&(o.has(c.room)||o.set(c.room,new Set),o.get(c.room).add(p.OG_ID))}else if(c.panel_type.includes("DOOR")){const p={OG_ID:`DOOR_${u}`,OG_TYPE:"OG_DOOR",type:"internal",thickness:c.thickness,hingeThickness:c.thickness*.5,start:d,end:f};s.push(p),c.room&&(o.has(c.room)||o.set(c.room,new Set),o.get(c.room).add(p.OG_ID))}else{const p={OG_ID:`WALL_${u}`,OG_TYPE:"OG_WALL",USER_DATA:JSON.stringify(c.panel_type),type:"internal",thickness:c.thickness,start:d,end:f};i.push(p),c.room&&(o.has(c.room)||o.set(c.room,new Set),o.get(c.room).add(p.OG_ID))}}),Object.entries(r.spaces).forEach(([l,c])=>{const u=`ROOM_${(parseInt(l)+1).toString().padStart(3,"0")}`,d=c.coordinates.map(g=>[g.x,g.z,g.y]);d.push([...d[d.length-1]]);const f=[];(o.get(c.room_type)||new Set).forEach(g=>{if(g.startsWith("WALL_")){if(t.has(g))return;const m=i.find(x=>x.OG_ID===g);m&&f.push({OG_ID:m.OG_ID,OG_TYPE:"OG_WALL"}),t.add(g)}else if(g.startsWith("WINDOW_")){const m=n.find(x=>x.OG_ID===g);m&&f.push({OG_ID:m.OG_ID,OG_TYPE:"OG_WINDOW"})}else if(g.startsWith("DOOR_")){const m=s.find(x=>x.OG_ID===g);m&&f.push({OG_ID:m.OG_ID,OG_TYPE:"OG_DOOR"})}});const _={OG_ID:u,OG_TYPE:"OG_ROOM",type:c.room_type.charAt(0).toUpperCase()+c.room_type.slice(1),OG_DATA:f,coordinates:d,connections:[],USER_DATA:JSON.stringify(c.room_type)};e.push(_)});const a=new Set;return e.forEach(l=>{e.forEach(c=>{if(l.OG_ID===c.OG_ID)return;const u=[l.OG_ID,c.OG_ID].sort().join("-");if(a.has(u))return;l.OG_DATA.some(f=>{const p=[...i,...n,...s].find(_=>_.OG_ID===f.OG_ID);return p?c.OG_DATA.some(_=>{const g=[...i,...n,...s].find(m=>m.OG_ID===_.OG_ID);return g?zP(p.start,p.end,g.start,g.end):!1}):!1})&&(l.connections.push(c.OG_ID),c.connections.push(l.OG_ID)),a.add(u)})}),{building_id:"BLDG_001",building_name:"Apartment Building 1",floors:[{OG_ID:"FLOOR_001",OG_TYPE:"OG_FLOOR",OG_DATA:e.map(l=>l.OG_ID)}],rooms:e,walls:i,windows:n,doors:s}}/*!
 * camera-controls
 * https://github.com/yomotsu/camera-controls
 * (c) 2017 @yomotsu
 * Released under the MIT License.
 */const Se={LEFT:1,RIGHT:2,MIDDLE:4},k=Object.freeze({NONE:0,ROTATE:1,TRUCK:2,SCREEN_PAN:4,OFFSET:8,DOLLY:16,ZOOM:32,TOUCH_ROTATE:64,TOUCH_TRUCK:128,TOUCH_SCREEN_PAN:256,TOUCH_OFFSET:512,TOUCH_DOLLY:1024,TOUCH_ZOOM:2048,TOUCH_DOLLY_TRUCK:4096,TOUCH_DOLLY_SCREEN_PAN:8192,TOUCH_DOLLY_OFFSET:16384,TOUCH_DOLLY_ROTATE:32768,TOUCH_ZOOM_TRUCK:65536,TOUCH_ZOOM_OFFSET:131072,TOUCH_ZOOM_SCREEN_PAN:262144,TOUCH_ZOOM_ROTATE:524288}),Ho={NONE:0,IN:1,OUT:-1};function xr(r){return r.isPerspectiveCamera}function ks(r){return r.isOrthographicCamera}const Go=Math.PI*2,ky=Math.PI/2,Qb=1e-5,Ya=Math.PI/180;function Mn(r,t,e){return Math.max(t,Math.min(e,r))}function xe(r,t=Qb){return Math.abs(r)<t}function fe(r,t,e=Qb){return xe(r-t,e)}function Vy(r,t){return Math.round(r/t)*t}function Za(r){return isFinite(r)?r:r<0?-Number.MAX_VALUE:Number.MAX_VALUE}function Ja(r){return Math.abs(r)<Number.MAX_VALUE?r:r*(1/0)}function Xc(r,t,e,i,n=1/0,s){i=Math.max(1e-4,i);const o=2/i,a=o*s,h=1/(1+a+.48*a*a+.235*a*a*a);let l=r-t;const c=t,u=n*i;l=Mn(l,-u,u),t=r-l;const d=(e.value+o*l)*s;e.value=(e.value-o*d)*h;let f=t+(l+d)*h;return c-r>0==f>c&&(f=c,e.value=(f-c)/s),f}function Hy(r,t,e,i,n=1/0,s,o){i=Math.max(1e-4,i);const a=2/i,h=a*s,l=1/(1+h+.48*h*h+.235*h*h*h);let c=t.x,u=t.y,d=t.z,f=r.x-c,p=r.y-u,_=r.z-d;const g=c,m=u,x=d,y=n*i,v=y*y,E=f*f+p*p+_*_;if(E>v){const Y=Math.sqrt(E);f=f/Y*y,p=p/Y*y,_=_/Y*y}c=r.x-f,u=r.y-p,d=r.z-_;const b=(e.x+a*f)*s,w=(e.y+a*p)*s,T=(e.z+a*_)*s;e.x=(e.x-a*b)*l,e.y=(e.y-a*w)*l,e.z=(e.z-a*T)*l,o.x=c+(f+b)*l,o.y=u+(p+w)*l,o.z=d+(_+T)*l;const S=g-r.x,M=m-r.y,I=x-r.z,N=o.x-g,O=o.y-m,B=o.z-x;return S*N+M*O+I*B>0&&(o.x=g,o.y=m,o.z=x,e.x=(o.x-g)/s,e.y=(o.y-m)/s,e.z=(o.z-x)/s),o}function Ap(r,t){t.set(0,0),r.forEach(e=>{t.x+=e.clientX,t.y+=e.clientY}),t.x/=r.length,t.y/=r.length}function Ep(r,t){return ks(r)?(console.warn(`${t} is not supported in OrthographicCamera`),!0):!1}class NP{constructor(){this._listeners={}}addEventListener(t,e){const i=this._listeners;i[t]===void 0&&(i[t]=[]),i[t].indexOf(e)===-1&&i[t].push(e)}hasEventListener(t,e){const i=this._listeners;return i[t]!==void 0&&i[t].indexOf(e)!==-1}removeEventListener(t,e){const n=this._listeners[t];if(n!==void 0){const s=n.indexOf(e);s!==-1&&n.splice(s,1)}}removeAllEventListeners(t){if(!t){this._listeners={};return}Array.isArray(this._listeners[t])&&(this._listeners[t].length=0)}dispatchEvent(t){const i=this._listeners[t.type];if(i!==void 0){t.target=this;const n=i.slice(0);for(let s=0,o=n.length;s<o;s++)n[s].call(this,t)}}}var Tp;const BP="2.10.1",qc=1/8,kP=/Mac/.test((Tp=globalThis==null?void 0:globalThis.navigator)===null||Tp===void 0?void 0:Tp.platform);let Nt,Gy,Yc,Cp,Ei,qt,oe,Wo,Ka,In,Ln,vr,Wy,$y,tn,ja,$o,Xy,Rp,qy,Pp,Ip,Zc;class Ur extends NP{static install(t){Nt=t.THREE,Gy=Object.freeze(new Nt.Vector3(0,0,0)),Yc=Object.freeze(new Nt.Vector3(0,1,0)),Cp=Object.freeze(new Nt.Vector3(0,0,1)),Ei=new Nt.Vector2,qt=new Nt.Vector3,oe=new Nt.Vector3,Wo=new Nt.Vector3,Ka=new Nt.Vector3,In=new Nt.Vector3,Ln=new Nt.Vector3,vr=new Nt.Vector3,Wy=new Nt.Vector3,$y=new Nt.Vector3,tn=new Nt.Spherical,ja=new Nt.Spherical,$o=new Nt.Box3,Xy=new Nt.Box3,Rp=new Nt.Sphere,qy=new Nt.Quaternion,Pp=new Nt.Quaternion,Ip=new Nt.Matrix4,Zc=new Nt.Raycaster}static get ACTION(){return k}set verticalDragToForward(t){console.warn("camera-controls: `verticalDragToForward` was removed. Use `mouseButtons.left = CameraControls.ACTION.SCREEN_PAN` instead.")}constructor(t,e){super(),this.minPolarAngle=0,this.maxPolarAngle=Math.PI,this.minAzimuthAngle=-1/0,this.maxAzimuthAngle=1/0,this.minDistance=Number.EPSILON,this.maxDistance=1/0,this.infinityDolly=!1,this.minZoom=.01,this.maxZoom=1/0,this.smoothTime=.25,this.draggingSmoothTime=.125,this.maxSpeed=1/0,this.azimuthRotateSpeed=1,this.polarRotateSpeed=1,this.dollySpeed=1,this.dollyDragInverted=!1,this.truckSpeed=2,this.dollyToCursor=!1,this.dragToOffset=!1,this.boundaryFriction=0,this.restThreshold=.01,this.colliderMeshes=[],this.cancel=()=>{},this._enabled=!0,this._state=k.NONE,this._viewport=null,this._changedDolly=0,this._changedZoom=0,this._hasRested=!0,this._boundaryEnclosesCamera=!1,this._needsUpdate=!0,this._updatedLastTime=!1,this._elementRect=new DOMRect,this._isDragging=!1,this._dragNeedsUpdate=!0,this._activePointers=[],this._lockedPointer=null,this._interactiveArea=new DOMRect(0,0,1,1),this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._isUserControllingOffset=!1,this._isUserControllingZoom=!1,this._lastDollyDirection=Ho.NONE,this._thetaVelocity={value:0},this._phiVelocity={value:0},this._radiusVelocity={value:0},this._targetVelocity=new Nt.Vector3,this._focalOffsetVelocity=new Nt.Vector3,this._zoomVelocity={value:0},this._truckInternal=(m,x,y,v)=>{let E,b;if(xr(this._camera)){const w=qt.copy(this._camera.position).sub(this._target),T=this._camera.getEffectiveFOV()*Ya,S=w.length()*Math.tan(T*.5);E=this.truckSpeed*m*S/this._elementRect.height,b=this.truckSpeed*x*S/this._elementRect.height}else if(ks(this._camera)){const w=this._camera;E=this.truckSpeed*m*(w.right-w.left)/w.zoom/this._elementRect.width,b=this.truckSpeed*x*(w.top-w.bottom)/w.zoom/this._elementRect.height}else return;v?(y?this.setFocalOffset(this._focalOffsetEnd.x+E,this._focalOffsetEnd.y,this._focalOffsetEnd.z,!0):this.truck(E,0,!0),this.forward(-b,!0)):y?this.setFocalOffset(this._focalOffsetEnd.x+E,this._focalOffsetEnd.y+b,this._focalOffsetEnd.z,!0):this.truck(E,b,!0)},this._rotateInternal=(m,x)=>{const y=Go*this.azimuthRotateSpeed*m/this._elementRect.height,v=Go*this.polarRotateSpeed*x/this._elementRect.height;this.rotate(y,v,!0)},this._dollyInternal=(m,x,y)=>{const v=Math.pow(.95,-m*this.dollySpeed),E=this._sphericalEnd.radius,b=this._sphericalEnd.radius*v,w=Mn(b,this.minDistance,this.maxDistance),T=w-b;this.infinityDolly&&this.dollyToCursor?this._dollyToNoClamp(b,!0):this.infinityDolly&&!this.dollyToCursor?(this.dollyInFixed(T,!0),this._dollyToNoClamp(w,!0)):this._dollyToNoClamp(w,!0),this.dollyToCursor&&(this._changedDolly+=(this.infinityDolly?b:w)-E,this._dollyControlCoord.set(x,y)),this._lastDollyDirection=Math.sign(-m)},this._zoomInternal=(m,x,y)=>{const v=Math.pow(.95,m*this.dollySpeed),E=this._zoom,b=this._zoom*v;this.zoomTo(b,!0),this.dollyToCursor&&(this._changedZoom+=b-E,this._dollyControlCoord.set(x,y))},typeof Nt>"u"&&console.error("camera-controls: `THREE` is undefined. You must first run `CameraControls.install( { THREE: THREE } )`. Check the docs for further information."),this._camera=t,this._yAxisUpSpace=new Nt.Quaternion().setFromUnitVectors(this._camera.up,Yc),this._yAxisUpSpaceInverse=this._yAxisUpSpace.clone().invert(),this._state=k.NONE,this._target=new Nt.Vector3,this._targetEnd=this._target.clone(),this._focalOffset=new Nt.Vector3,this._focalOffsetEnd=this._focalOffset.clone(),this._spherical=new Nt.Spherical().setFromVector3(qt.copy(this._camera.position).applyQuaternion(this._yAxisUpSpace)),this._sphericalEnd=this._spherical.clone(),this._lastDistance=this._spherical.radius,this._zoom=this._camera.zoom,this._zoomEnd=this._zoom,this._lastZoom=this._zoom,this._nearPlaneCorners=[new Nt.Vector3,new Nt.Vector3,new Nt.Vector3,new Nt.Vector3],this._updateNearPlaneCorners(),this._boundary=new Nt.Box3(new Nt.Vector3(-1/0,-1/0,-1/0),new Nt.Vector3(1/0,1/0,1/0)),this._cameraUp0=this._camera.up.clone(),this._target0=this._target.clone(),this._position0=this._camera.position.clone(),this._zoom0=this._zoom,this._focalOffset0=this._focalOffset.clone(),this._dollyControlCoord=new Nt.Vector2,this.mouseButtons={left:k.ROTATE,middle:k.DOLLY,right:k.TRUCK,wheel:xr(this._camera)?k.DOLLY:ks(this._camera)?k.ZOOM:k.NONE},this.touches={one:k.TOUCH_ROTATE,two:xr(this._camera)?k.TOUCH_DOLLY_TRUCK:ks(this._camera)?k.TOUCH_ZOOM_TRUCK:k.NONE,three:k.TOUCH_TRUCK};const i=new Nt.Vector2,n=new Nt.Vector2,s=new Nt.Vector2,o=m=>{if(!this._enabled||!this._domElement)return;if(this._interactiveArea.left!==0||this._interactiveArea.top!==0||this._interactiveArea.width!==1||this._interactiveArea.height!==1){const v=this._domElement.getBoundingClientRect(),E=m.clientX/v.width,b=m.clientY/v.height;if(E<this._interactiveArea.left||E>this._interactiveArea.right||b<this._interactiveArea.top||b>this._interactiveArea.bottom)return}const x=m.pointerType!=="mouse"?null:(m.buttons&Se.LEFT)===Se.LEFT?Se.LEFT:(m.buttons&Se.MIDDLE)===Se.MIDDLE?Se.MIDDLE:(m.buttons&Se.RIGHT)===Se.RIGHT?Se.RIGHT:null;if(x!==null){const v=this._findPointerByMouseButton(x);v&&this._disposePointer(v)}if((m.buttons&Se.LEFT)===Se.LEFT&&this._lockedPointer)return;const y={pointerId:m.pointerId,clientX:m.clientX,clientY:m.clientY,deltaX:0,deltaY:0,mouseButton:x};this._activePointers.push(y),this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",h),this._domElement.ownerDocument.addEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",h),this._isDragging=!0,d(m)},a=m=>{m.cancelable&&m.preventDefault();const x=m.pointerId,y=this._lockedPointer||this._findPointerById(x);if(y){if(y.clientX=m.clientX,y.clientY=m.clientY,y.deltaX=m.movementX,y.deltaY=m.movementY,this._state=0,m.pointerType==="touch")switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else(!this._isDragging&&this._lockedPointer||this._isDragging&&(m.buttons&Se.LEFT)===Se.LEFT)&&(this._state=this._state|this.mouseButtons.left),this._isDragging&&(m.buttons&Se.MIDDLE)===Se.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),this._isDragging&&(m.buttons&Se.RIGHT)===Se.RIGHT&&(this._state=this._state|this.mouseButtons.right);f()}},h=m=>{const x=this._findPointerById(m.pointerId);if(!(x&&x===this._lockedPointer)){if(x&&this._disposePointer(x),m.pointerType==="touch")switch(this._activePointers.length){case 0:this._state=k.NONE;break;case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else this._state=k.NONE;p()}};let l=-1;const c=m=>{if(!this._domElement||!this._enabled||this.mouseButtons.wheel===k.NONE)return;if(this._interactiveArea.left!==0||this._interactiveArea.top!==0||this._interactiveArea.width!==1||this._interactiveArea.height!==1){const b=this._domElement.getBoundingClientRect(),w=m.clientX/b.width,T=m.clientY/b.height;if(w<this._interactiveArea.left||w>this._interactiveArea.right||T<this._interactiveArea.top||T>this._interactiveArea.bottom)return}if(m.preventDefault(),this.dollyToCursor||this.mouseButtons.wheel===k.ROTATE||this.mouseButtons.wheel===k.TRUCK){const b=performance.now();l-b<1e3&&this._getClientRect(this._elementRect),l=b}const x=kP?-1:-3,y=m.deltaMode===1||m.ctrlKey?m.deltaY/x:m.deltaY/(x*10),v=this.dollyToCursor?(m.clientX-this._elementRect.x)/this._elementRect.width*2-1:0,E=this.dollyToCursor?(m.clientY-this._elementRect.y)/this._elementRect.height*-2+1:0;switch(this.mouseButtons.wheel){case k.ROTATE:{this._rotateInternal(m.deltaX,m.deltaY),this._isUserControllingRotate=!0;break}case k.TRUCK:{this._truckInternal(m.deltaX,m.deltaY,!1,!1),this._isUserControllingTruck=!0;break}case k.SCREEN_PAN:{this._truckInternal(m.deltaX,m.deltaY,!1,!0),this._isUserControllingTruck=!0;break}case k.OFFSET:{this._truckInternal(m.deltaX,m.deltaY,!0,!1),this._isUserControllingOffset=!0;break}case k.DOLLY:{this._dollyInternal(-y,v,E),this._isUserControllingDolly=!0;break}case k.ZOOM:{this._zoomInternal(-y,v,E),this._isUserControllingZoom=!0;break}}this.dispatchEvent({type:"control"})},u=m=>{if(!(!this._domElement||!this._enabled)){if(this.mouseButtons.right===Ur.ACTION.NONE){const x=m instanceof PointerEvent?m.pointerId:0,y=this._findPointerById(x);y&&this._disposePointer(y),this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",h);return}m.preventDefault()}},d=m=>{if(!this._enabled)return;if(Ap(this._activePointers,Ei),this._getClientRect(this._elementRect),i.copy(Ei),n.copy(Ei),this._activePointers.length>=2){const y=Ei.x-this._activePointers[1].clientX,v=Ei.y-this._activePointers[1].clientY,E=Math.sqrt(y*y+v*v);s.set(0,E);const b=(this._activePointers[0].clientX+this._activePointers[1].clientX)*.5,w=(this._activePointers[0].clientY+this._activePointers[1].clientY)*.5;n.set(b,w)}if(this._state=0,!m)this._lockedPointer&&(this._state=this._state|this.mouseButtons.left);else if("pointerType"in m&&m.pointerType==="touch")switch(this._activePointers.length){case 1:this._state=this.touches.one;break;case 2:this._state=this.touches.two;break;case 3:this._state=this.touches.three;break}else!this._lockedPointer&&(m.buttons&Se.LEFT)===Se.LEFT&&(this._state=this._state|this.mouseButtons.left),(m.buttons&Se.MIDDLE)===Se.MIDDLE&&(this._state=this._state|this.mouseButtons.middle),(m.buttons&Se.RIGHT)===Se.RIGHT&&(this._state=this._state|this.mouseButtons.right);((this._state&k.ROTATE)===k.ROTATE||(this._state&k.TOUCH_ROTATE)===k.TOUCH_ROTATE||(this._state&k.TOUCH_DOLLY_ROTATE)===k.TOUCH_DOLLY_ROTATE||(this._state&k.TOUCH_ZOOM_ROTATE)===k.TOUCH_ZOOM_ROTATE)&&(this._sphericalEnd.theta=this._spherical.theta,this._sphericalEnd.phi=this._spherical.phi,this._thetaVelocity.value=0,this._phiVelocity.value=0),((this._state&k.TRUCK)===k.TRUCK||(this._state&k.SCREEN_PAN)===k.SCREEN_PAN||(this._state&k.TOUCH_TRUCK)===k.TOUCH_TRUCK||(this._state&k.TOUCH_SCREEN_PAN)===k.TOUCH_SCREEN_PAN||(this._state&k.TOUCH_DOLLY_TRUCK)===k.TOUCH_DOLLY_TRUCK||(this._state&k.TOUCH_DOLLY_SCREEN_PAN)===k.TOUCH_DOLLY_SCREEN_PAN||(this._state&k.TOUCH_ZOOM_TRUCK)===k.TOUCH_ZOOM_TRUCK||(this._state&k.TOUCH_ZOOM_SCREEN_PAN)===k.TOUCH_DOLLY_SCREEN_PAN)&&(this._targetEnd.copy(this._target),this._targetVelocity.set(0,0,0)),((this._state&k.DOLLY)===k.DOLLY||(this._state&k.TOUCH_DOLLY)===k.TOUCH_DOLLY||(this._state&k.TOUCH_DOLLY_TRUCK)===k.TOUCH_DOLLY_TRUCK||(this._state&k.TOUCH_DOLLY_SCREEN_PAN)===k.TOUCH_DOLLY_SCREEN_PAN||(this._state&k.TOUCH_DOLLY_OFFSET)===k.TOUCH_DOLLY_OFFSET||(this._state&k.TOUCH_DOLLY_ROTATE)===k.TOUCH_DOLLY_ROTATE)&&(this._sphericalEnd.radius=this._spherical.radius,this._radiusVelocity.value=0),((this._state&k.ZOOM)===k.ZOOM||(this._state&k.TOUCH_ZOOM)===k.TOUCH_ZOOM||(this._state&k.TOUCH_ZOOM_TRUCK)===k.TOUCH_ZOOM_TRUCK||(this._state&k.TOUCH_ZOOM_SCREEN_PAN)===k.TOUCH_ZOOM_SCREEN_PAN||(this._state&k.TOUCH_ZOOM_OFFSET)===k.TOUCH_ZOOM_OFFSET||(this._state&k.TOUCH_ZOOM_ROTATE)===k.TOUCH_ZOOM_ROTATE)&&(this._zoomEnd=this._zoom,this._zoomVelocity.value=0),((this._state&k.OFFSET)===k.OFFSET||(this._state&k.TOUCH_OFFSET)===k.TOUCH_OFFSET||(this._state&k.TOUCH_DOLLY_OFFSET)===k.TOUCH_DOLLY_OFFSET||(this._state&k.TOUCH_ZOOM_OFFSET)===k.TOUCH_ZOOM_OFFSET)&&(this._focalOffsetEnd.copy(this._focalOffset),this._focalOffsetVelocity.set(0,0,0)),this.dispatchEvent({type:"controlstart"})},f=()=>{if(!this._enabled||!this._dragNeedsUpdate)return;this._dragNeedsUpdate=!1,Ap(this._activePointers,Ei);const x=this._domElement&&this._domElement.ownerDocument.pointerLockElement===this._domElement?this._lockedPointer||this._activePointers[0]:null,y=x?-x.deltaX:n.x-Ei.x,v=x?-x.deltaY:n.y-Ei.y;if(n.copy(Ei),((this._state&k.ROTATE)===k.ROTATE||(this._state&k.TOUCH_ROTATE)===k.TOUCH_ROTATE||(this._state&k.TOUCH_DOLLY_ROTATE)===k.TOUCH_DOLLY_ROTATE||(this._state&k.TOUCH_ZOOM_ROTATE)===k.TOUCH_ZOOM_ROTATE)&&(this._rotateInternal(y,v),this._isUserControllingRotate=!0),(this._state&k.DOLLY)===k.DOLLY||(this._state&k.ZOOM)===k.ZOOM){const E=this.dollyToCursor?(i.x-this._elementRect.x)/this._elementRect.width*2-1:0,b=this.dollyToCursor?(i.y-this._elementRect.y)/this._elementRect.height*-2+1:0,w=this.dollyDragInverted?-1:1;(this._state&k.DOLLY)===k.DOLLY?(this._dollyInternal(w*v*qc,E,b),this._isUserControllingDolly=!0):(this._zoomInternal(w*v*qc,E,b),this._isUserControllingZoom=!0)}if((this._state&k.TOUCH_DOLLY)===k.TOUCH_DOLLY||(this._state&k.TOUCH_ZOOM)===k.TOUCH_ZOOM||(this._state&k.TOUCH_DOLLY_TRUCK)===k.TOUCH_DOLLY_TRUCK||(this._state&k.TOUCH_ZOOM_TRUCK)===k.TOUCH_ZOOM_TRUCK||(this._state&k.TOUCH_DOLLY_SCREEN_PAN)===k.TOUCH_DOLLY_SCREEN_PAN||(this._state&k.TOUCH_ZOOM_SCREEN_PAN)===k.TOUCH_ZOOM_SCREEN_PAN||(this._state&k.TOUCH_DOLLY_OFFSET)===k.TOUCH_DOLLY_OFFSET||(this._state&k.TOUCH_ZOOM_OFFSET)===k.TOUCH_ZOOM_OFFSET||(this._state&k.TOUCH_DOLLY_ROTATE)===k.TOUCH_DOLLY_ROTATE||(this._state&k.TOUCH_ZOOM_ROTATE)===k.TOUCH_ZOOM_ROTATE){const E=Ei.x-this._activePointers[1].clientX,b=Ei.y-this._activePointers[1].clientY,w=Math.sqrt(E*E+b*b),T=s.y-w;s.set(0,w);const S=this.dollyToCursor?(n.x-this._elementRect.x)/this._elementRect.width*2-1:0,M=this.dollyToCursor?(n.y-this._elementRect.y)/this._elementRect.height*-2+1:0;(this._state&k.TOUCH_DOLLY)===k.TOUCH_DOLLY||(this._state&k.TOUCH_DOLLY_ROTATE)===k.TOUCH_DOLLY_ROTATE||(this._state&k.TOUCH_DOLLY_TRUCK)===k.TOUCH_DOLLY_TRUCK||(this._state&k.TOUCH_DOLLY_SCREEN_PAN)===k.TOUCH_DOLLY_SCREEN_PAN||(this._state&k.TOUCH_DOLLY_OFFSET)===k.TOUCH_DOLLY_OFFSET?(this._dollyInternal(T*qc,S,M),this._isUserControllingDolly=!0):(this._zoomInternal(T*qc,S,M),this._isUserControllingZoom=!0)}((this._state&k.TRUCK)===k.TRUCK||(this._state&k.TOUCH_TRUCK)===k.TOUCH_TRUCK||(this._state&k.TOUCH_DOLLY_TRUCK)===k.TOUCH_DOLLY_TRUCK||(this._state&k.TOUCH_ZOOM_TRUCK)===k.TOUCH_ZOOM_TRUCK)&&(this._truckInternal(y,v,!1,!1),this._isUserControllingTruck=!0),((this._state&k.SCREEN_PAN)===k.SCREEN_PAN||(this._state&k.TOUCH_SCREEN_PAN)===k.TOUCH_SCREEN_PAN||(this._state&k.TOUCH_DOLLY_SCREEN_PAN)===k.TOUCH_DOLLY_SCREEN_PAN||(this._state&k.TOUCH_ZOOM_SCREEN_PAN)===k.TOUCH_ZOOM_SCREEN_PAN)&&(this._truckInternal(y,v,!1,!0),this._isUserControllingTruck=!0),((this._state&k.OFFSET)===k.OFFSET||(this._state&k.TOUCH_OFFSET)===k.TOUCH_OFFSET||(this._state&k.TOUCH_DOLLY_OFFSET)===k.TOUCH_DOLLY_OFFSET||(this._state&k.TOUCH_ZOOM_OFFSET)===k.TOUCH_ZOOM_OFFSET)&&(this._truckInternal(y,v,!0,!1),this._isUserControllingOffset=!0),this.dispatchEvent({type:"control"})},p=()=>{Ap(this._activePointers,Ei),n.copy(Ei),this._dragNeedsUpdate=!1,(this._activePointers.length===0||this._activePointers.length===1&&this._activePointers[0]===this._lockedPointer)&&(this._isDragging=!1),this._activePointers.length===0&&this._domElement&&(this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",h),this.dispatchEvent({type:"controlend"}))};this.lockPointer=()=>{!this._enabled||!this._domElement||(this.cancel(),this._lockedPointer={pointerId:-1,clientX:0,clientY:0,deltaX:0,deltaY:0,mouseButton:null},this._activePointers.push(this._lockedPointer),this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",h),this._domElement.requestPointerLock(),this._domElement.ownerDocument.addEventListener("pointerlockchange",_),this._domElement.ownerDocument.addEventListener("pointerlockerror",g),this._domElement.ownerDocument.addEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.addEventListener("pointerup",h),d())},this.unlockPointer=()=>{var m,x,y;this._lockedPointer!==null&&(this._disposePointer(this._lockedPointer),this._lockedPointer=null),(m=this._domElement)===null||m===void 0||m.ownerDocument.exitPointerLock(),(x=this._domElement)===null||x===void 0||x.ownerDocument.removeEventListener("pointerlockchange",_),(y=this._domElement)===null||y===void 0||y.ownerDocument.removeEventListener("pointerlockerror",g),this.cancel()};const _=()=>{this._domElement&&this._domElement.ownerDocument.pointerLockElement===this._domElement||this.unlockPointer()},g=()=>{this.unlockPointer()};this._addAllEventListeners=m=>{this._domElement=m,this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none",this._domElement.addEventListener("pointerdown",o),this._domElement.addEventListener("pointercancel",h),this._domElement.addEventListener("wheel",c,{passive:!1}),this._domElement.addEventListener("contextmenu",u)},this._removeAllEventListeners=()=>{this._domElement&&(this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect="",this._domElement.removeEventListener("pointerdown",o),this._domElement.removeEventListener("pointercancel",h),this._domElement.removeEventListener("wheel",c,{passive:!1}),this._domElement.removeEventListener("contextmenu",u),this._domElement.ownerDocument.removeEventListener("pointermove",a,{passive:!1}),this._domElement.ownerDocument.removeEventListener("pointerup",h),this._domElement.ownerDocument.removeEventListener("pointerlockchange",_),this._domElement.ownerDocument.removeEventListener("pointerlockerror",g))},this.cancel=()=>{this._state!==k.NONE&&(this._state=k.NONE,this._activePointers.length=0,p())},e&&this.connect(e),this.update(0)}get camera(){return this._camera}set camera(t){this._camera=t,this.updateCameraUp(),this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0}get enabled(){return this._enabled}set enabled(t){this._enabled=t,this._domElement&&(t?(this._domElement.style.touchAction="none",this._domElement.style.userSelect="none",this._domElement.style.webkitUserSelect="none"):(this.cancel(),this._domElement.style.touchAction="",this._domElement.style.userSelect="",this._domElement.style.webkitUserSelect=""))}get active(){return!this._hasRested}get currentAction(){return this._state}get distance(){return this._spherical.radius}set distance(t){this._spherical.radius===t&&this._sphericalEnd.radius===t||(this._spherical.radius=t,this._sphericalEnd.radius=t,this._needsUpdate=!0)}get azimuthAngle(){return this._spherical.theta}set azimuthAngle(t){this._spherical.theta===t&&this._sphericalEnd.theta===t||(this._spherical.theta=t,this._sphericalEnd.theta=t,this._needsUpdate=!0)}get polarAngle(){return this._spherical.phi}set polarAngle(t){this._spherical.phi===t&&this._sphericalEnd.phi===t||(this._spherical.phi=t,this._sphericalEnd.phi=t,this._needsUpdate=!0)}get boundaryEnclosesCamera(){return this._boundaryEnclosesCamera}set boundaryEnclosesCamera(t){this._boundaryEnclosesCamera=t,this._needsUpdate=!0}set interactiveArea(t){this._interactiveArea.width=Mn(t.width,0,1),this._interactiveArea.height=Mn(t.height,0,1),this._interactiveArea.x=Mn(t.x,0,1-this._interactiveArea.width),this._interactiveArea.y=Mn(t.y,0,1-this._interactiveArea.height)}addEventListener(t,e){super.addEventListener(t,e)}removeEventListener(t,e){super.removeEventListener(t,e)}rotate(t,e,i=!1){return this.rotateTo(this._sphericalEnd.theta+t,this._sphericalEnd.phi+e,i)}rotateAzimuthTo(t,e=!1){return this.rotateTo(t,this._sphericalEnd.phi,e)}rotatePolarTo(t,e=!1){return this.rotateTo(this._sphericalEnd.theta,t,e)}rotateTo(t,e,i=!1){this._isUserControllingRotate=!1;const n=Mn(t,this.minAzimuthAngle,this.maxAzimuthAngle),s=Mn(e,this.minPolarAngle,this.maxPolarAngle);this._sphericalEnd.theta=n,this._sphericalEnd.phi=s,this._sphericalEnd.makeSafe(),this._needsUpdate=!0,i||(this._spherical.theta=this._sphericalEnd.theta,this._spherical.phi=this._sphericalEnd.phi);const o=!i||fe(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&fe(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold);return this._createOnRestPromise(o)}dolly(t,e=!1){return this.dollyTo(this._sphericalEnd.radius-t,e)}dollyTo(t,e=!1){return this._isUserControllingDolly=!1,this._lastDollyDirection=Ho.NONE,this._changedDolly=0,this._dollyToNoClamp(Mn(t,this.minDistance,this.maxDistance),e)}_dollyToNoClamp(t,e=!1){const i=this._sphericalEnd.radius;if(this.colliderMeshes.length>=1){const o=this._collisionTest(),a=fe(o,this._spherical.radius);if(!(i>t)&&a)return Promise.resolve();this._sphericalEnd.radius=Math.min(t,o)}else this._sphericalEnd.radius=t;this._needsUpdate=!0,e||(this._spherical.radius=this._sphericalEnd.radius);const s=!e||fe(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(s)}dollyInFixed(t,e=!1){this._targetEnd.add(this._getCameraDirection(Ka).multiplyScalar(t)),e||this._target.copy(this._targetEnd);const i=!e||fe(this._target.x,this._targetEnd.x,this.restThreshold)&&fe(this._target.y,this._targetEnd.y,this.restThreshold)&&fe(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(i)}zoom(t,e=!1){return this.zoomTo(this._zoomEnd+t,e)}zoomTo(t,e=!1){this._isUserControllingZoom=!1,this._zoomEnd=Mn(t,this.minZoom,this.maxZoom),this._needsUpdate=!0,e||(this._zoom=this._zoomEnd);const i=!e||fe(this._zoom,this._zoomEnd,this.restThreshold);return this._changedZoom=0,this._createOnRestPromise(i)}pan(t,e,i=!1){return console.warn("`pan` has been renamed to `truck`"),this.truck(t,e,i)}truck(t,e,i=!1){this._camera.updateMatrix(),In.setFromMatrixColumn(this._camera.matrix,0),Ln.setFromMatrixColumn(this._camera.matrix,1),In.multiplyScalar(t),Ln.multiplyScalar(-e);const n=qt.copy(In).add(Ln),s=oe.copy(this._targetEnd).add(n);return this.moveTo(s.x,s.y,s.z,i)}forward(t,e=!1){qt.setFromMatrixColumn(this._camera.matrix,0),qt.crossVectors(this._camera.up,qt),qt.multiplyScalar(t);const i=oe.copy(this._targetEnd).add(qt);return this.moveTo(i.x,i.y,i.z,e)}elevate(t,e=!1){return qt.copy(this._camera.up).multiplyScalar(t),this.moveTo(this._targetEnd.x+qt.x,this._targetEnd.y+qt.y,this._targetEnd.z+qt.z,e)}moveTo(t,e,i,n=!1){this._isUserControllingTruck=!1;const s=qt.set(t,e,i).sub(this._targetEnd);this._encloseToBoundary(this._targetEnd,s,this.boundaryFriction),this._needsUpdate=!0,n||this._target.copy(this._targetEnd);const o=!n||fe(this._target.x,this._targetEnd.x,this.restThreshold)&&fe(this._target.y,this._targetEnd.y,this.restThreshold)&&fe(this._target.z,this._targetEnd.z,this.restThreshold);return this._createOnRestPromise(o)}lookInDirectionOf(t,e,i,n=!1){const a=qt.set(t,e,i).sub(this._targetEnd).normalize().multiplyScalar(-this._sphericalEnd.radius).add(this._targetEnd);return this.setPosition(a.x,a.y,a.z,n)}fitToBox(t,e,{cover:i=!1,paddingLeft:n=0,paddingRight:s=0,paddingBottom:o=0,paddingTop:a=0}={}){const h=[],l=t.isBox3?$o.copy(t):$o.setFromObject(t);l.isEmpty()&&(console.warn("camera-controls: fitTo() cannot be used with an empty box. Aborting"),Promise.resolve());const c=Vy(this._sphericalEnd.theta,ky),u=Vy(this._sphericalEnd.phi,ky);h.push(this.rotateTo(c,u,e));const d=qt.setFromSpherical(this._sphericalEnd).normalize(),f=qy.setFromUnitVectors(d,Cp),p=fe(Math.abs(d.y),1);p&&f.multiply(Pp.setFromAxisAngle(Yc,c)),f.multiply(this._yAxisUpSpaceInverse);const _=Xy.makeEmpty();oe.copy(l.min).applyQuaternion(f),_.expandByPoint(oe),oe.copy(l.min).setX(l.max.x).applyQuaternion(f),_.expandByPoint(oe),oe.copy(l.min).setY(l.max.y).applyQuaternion(f),_.expandByPoint(oe),oe.copy(l.max).setZ(l.min.z).applyQuaternion(f),_.expandByPoint(oe),oe.copy(l.min).setZ(l.max.z).applyQuaternion(f),_.expandByPoint(oe),oe.copy(l.max).setY(l.min.y).applyQuaternion(f),_.expandByPoint(oe),oe.copy(l.max).setX(l.min.x).applyQuaternion(f),_.expandByPoint(oe),oe.copy(l.max).applyQuaternion(f),_.expandByPoint(oe),_.min.x-=n,_.min.y-=o,_.max.x+=s,_.max.y+=a,f.setFromUnitVectors(Cp,d),p&&f.premultiply(Pp.invert()),f.premultiply(this._yAxisUpSpace);const g=_.getSize(qt),m=_.getCenter(oe).applyQuaternion(f);if(xr(this._camera)){const x=this.getDistanceToFitBox(g.x,g.y,g.z,i);h.push(this.moveTo(m.x,m.y,m.z,e)),h.push(this.dollyTo(x,e)),h.push(this.setFocalOffset(0,0,0,e))}else if(ks(this._camera)){const x=this._camera,y=x.right-x.left,v=x.top-x.bottom,E=i?Math.max(y/g.x,v/g.y):Math.min(y/g.x,v/g.y);h.push(this.moveTo(m.x,m.y,m.z,e)),h.push(this.zoomTo(E,e)),h.push(this.setFocalOffset(0,0,0,e))}return Promise.all(h)}fitToSphere(t,e){const i=[],s="isObject3D"in t?Ur.createBoundingSphere(t,Rp):Rp.copy(t);if(i.push(this.moveTo(s.center.x,s.center.y,s.center.z,e)),xr(this._camera)){const o=this.getDistanceToFitSphere(s.radius);i.push(this.dollyTo(o,e))}else if(ks(this._camera)){const o=this._camera.right-this._camera.left,a=this._camera.top-this._camera.bottom,h=2*s.radius,l=Math.min(o/h,a/h);i.push(this.zoomTo(l,e))}return i.push(this.setFocalOffset(0,0,0,e)),Promise.all(i)}setLookAt(t,e,i,n,s,o,a=!1){this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._lastDollyDirection=Ho.NONE,this._changedDolly=0;const h=oe.set(n,s,o),l=qt.set(t,e,i);this._targetEnd.copy(h),this._sphericalEnd.setFromVector3(l.sub(h).applyQuaternion(this._yAxisUpSpace)),this.normalizeRotations(),this._needsUpdate=!0,a||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const c=!a||fe(this._target.x,this._targetEnd.x,this.restThreshold)&&fe(this._target.y,this._targetEnd.y,this.restThreshold)&&fe(this._target.z,this._targetEnd.z,this.restThreshold)&&fe(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&fe(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&fe(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(c)}lerpLookAt(t,e,i,n,s,o,a,h,l,c,u,d,f,p=!1){this._isUserControllingRotate=!1,this._isUserControllingDolly=!1,this._isUserControllingTruck=!1,this._lastDollyDirection=Ho.NONE,this._changedDolly=0;const _=qt.set(n,s,o),g=oe.set(t,e,i);tn.setFromVector3(g.sub(_).applyQuaternion(this._yAxisUpSpace));const m=Wo.set(c,u,d),x=oe.set(a,h,l);ja.setFromVector3(x.sub(m).applyQuaternion(this._yAxisUpSpace)),this._targetEnd.copy(_.lerp(m,f));const y=ja.theta-tn.theta,v=ja.phi-tn.phi,E=ja.radius-tn.radius;this._sphericalEnd.set(tn.radius+E*f,tn.phi+v*f,tn.theta+y*f),this.normalizeRotations(),this._needsUpdate=!0,p||(this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd));const b=!p||fe(this._target.x,this._targetEnd.x,this.restThreshold)&&fe(this._target.y,this._targetEnd.y,this.restThreshold)&&fe(this._target.z,this._targetEnd.z,this.restThreshold)&&fe(this._spherical.theta,this._sphericalEnd.theta,this.restThreshold)&&fe(this._spherical.phi,this._sphericalEnd.phi,this.restThreshold)&&fe(this._spherical.radius,this._sphericalEnd.radius,this.restThreshold);return this._createOnRestPromise(b)}setPosition(t,e,i,n=!1){return this.setLookAt(t,e,i,this._targetEnd.x,this._targetEnd.y,this._targetEnd.z,n)}setTarget(t,e,i,n=!1){const s=this.getPosition(qt),o=this.setLookAt(s.x,s.y,s.z,t,e,i,n);return this._sphericalEnd.phi=Mn(this._sphericalEnd.phi,this.minPolarAngle,this.maxPolarAngle),o}setFocalOffset(t,e,i,n=!1){this._isUserControllingOffset=!1,this._focalOffsetEnd.set(t,e,i),this._needsUpdate=!0,n||this._focalOffset.copy(this._focalOffsetEnd);const s=!n||fe(this._focalOffset.x,this._focalOffsetEnd.x,this.restThreshold)&&fe(this._focalOffset.y,this._focalOffsetEnd.y,this.restThreshold)&&fe(this._focalOffset.z,this._focalOffsetEnd.z,this.restThreshold);return this._createOnRestPromise(s)}setOrbitPoint(t,e,i){this._camera.updateMatrixWorld(),In.setFromMatrixColumn(this._camera.matrixWorldInverse,0),Ln.setFromMatrixColumn(this._camera.matrixWorldInverse,1),vr.setFromMatrixColumn(this._camera.matrixWorldInverse,2);const n=qt.set(t,e,i),s=n.distanceTo(this._camera.position),o=n.sub(this._camera.position);In.multiplyScalar(o.x),Ln.multiplyScalar(o.y),vr.multiplyScalar(o.z),qt.copy(In).add(Ln).add(vr),qt.z=qt.z+s,this.dollyTo(s,!1),this.setFocalOffset(-qt.x,qt.y,-qt.z,!1),this.moveTo(t,e,i,!1)}setBoundary(t){if(!t){this._boundary.min.set(-1/0,-1/0,-1/0),this._boundary.max.set(1/0,1/0,1/0),this._needsUpdate=!0;return}this._boundary.copy(t),this._boundary.clampPoint(this._targetEnd,this._targetEnd),this._needsUpdate=!0}setViewport(t,e,i,n){if(t===null){this._viewport=null;return}this._viewport=this._viewport||new Nt.Vector4,typeof t=="number"?this._viewport.set(t,e,i,n):this._viewport.copy(t)}getDistanceToFitBox(t,e,i,n=!1){if(Ep(this._camera,"getDistanceToFitBox"))return this._spherical.radius;const s=t/e,o=this._camera.getEffectiveFOV()*Ya,a=this._camera.aspect;return((n?s>a:s<a)?e:t/a)*.5/Math.tan(o*.5)+i*.5}getDistanceToFitSphere(t){if(Ep(this._camera,"getDistanceToFitSphere"))return this._spherical.radius;const e=this._camera.getEffectiveFOV()*Ya,i=Math.atan(Math.tan(e*.5)*this._camera.aspect)*2,n=1<this._camera.aspect?e:i;return t/Math.sin(n*.5)}getTarget(t,e=!0){return(t&&t.isVector3?t:new Nt.Vector3).copy(e?this._targetEnd:this._target)}getPosition(t,e=!0){return(t&&t.isVector3?t:new Nt.Vector3).setFromSpherical(e?this._sphericalEnd:this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(e?this._targetEnd:this._target)}getSpherical(t,e=!0){return(t||new Nt.Spherical).copy(e?this._sphericalEnd:this._spherical)}getFocalOffset(t,e=!0){return(t&&t.isVector3?t:new Nt.Vector3).copy(e?this._focalOffsetEnd:this._focalOffset)}normalizeRotations(){this._sphericalEnd.theta=this._sphericalEnd.theta%Go,this._sphericalEnd.theta<0&&(this._sphericalEnd.theta+=Go),this._spherical.theta+=Go*Math.round((this._sphericalEnd.theta-this._spherical.theta)/Go)}stop(){this._focalOffset.copy(this._focalOffsetEnd),this._target.copy(this._targetEnd),this._spherical.copy(this._sphericalEnd),this._zoom=this._zoomEnd}reset(t=!1){if(!fe(this._camera.up.x,this._cameraUp0.x)||!fe(this._camera.up.y,this._cameraUp0.y)||!fe(this._camera.up.z,this._cameraUp0.z)){this._camera.up.copy(this._cameraUp0);const i=this.getPosition(qt);this.updateCameraUp(),this.setPosition(i.x,i.y,i.z)}const e=[this.setLookAt(this._position0.x,this._position0.y,this._position0.z,this._target0.x,this._target0.y,this._target0.z,t),this.setFocalOffset(this._focalOffset0.x,this._focalOffset0.y,this._focalOffset0.z,t),this.zoomTo(this._zoom0,t)];return Promise.all(e)}saveState(){this._cameraUp0.copy(this._camera.up),this.getTarget(this._target0),this.getPosition(this._position0),this._zoom0=this._zoom,this._focalOffset0.copy(this._focalOffset)}updateCameraUp(){this._yAxisUpSpace.setFromUnitVectors(this._camera.up,Yc),this._yAxisUpSpaceInverse.copy(this._yAxisUpSpace).invert()}applyCameraUp(){const t=qt.subVectors(this._target,this._camera.position).normalize(),e=oe.crossVectors(t,this._camera.up);this._camera.up.crossVectors(e,t).normalize(),this._camera.updateMatrixWorld();const i=this.getPosition(qt);this.updateCameraUp(),this.setPosition(i.x,i.y,i.z)}update(t){const e=this._sphericalEnd.theta-this._spherical.theta,i=this._sphericalEnd.phi-this._spherical.phi,n=this._sphericalEnd.radius-this._spherical.radius,s=Wy.subVectors(this._targetEnd,this._target),o=$y.subVectors(this._focalOffsetEnd,this._focalOffset),a=this._zoomEnd-this._zoom;if(xe(e))this._thetaVelocity.value=0,this._spherical.theta=this._sphericalEnd.theta;else{const u=this._isUserControllingRotate?this.draggingSmoothTime:this.smoothTime;this._spherical.theta=Xc(this._spherical.theta,this._sphericalEnd.theta,this._thetaVelocity,u,1/0,t),this._needsUpdate=!0}if(xe(i))this._phiVelocity.value=0,this._spherical.phi=this._sphericalEnd.phi;else{const u=this._isUserControllingRotate?this.draggingSmoothTime:this.smoothTime;this._spherical.phi=Xc(this._spherical.phi,this._sphericalEnd.phi,this._phiVelocity,u,1/0,t),this._needsUpdate=!0}if(xe(n))this._radiusVelocity.value=0,this._spherical.radius=this._sphericalEnd.radius;else{const u=this._isUserControllingDolly?this.draggingSmoothTime:this.smoothTime;this._spherical.radius=Xc(this._spherical.radius,this._sphericalEnd.radius,this._radiusVelocity,u,this.maxSpeed,t),this._needsUpdate=!0}if(xe(s.x)&&xe(s.y)&&xe(s.z))this._targetVelocity.set(0,0,0),this._target.copy(this._targetEnd);else{const u=this._isUserControllingTruck?this.draggingSmoothTime:this.smoothTime;Hy(this._target,this._targetEnd,this._targetVelocity,u,this.maxSpeed,t,this._target),this._needsUpdate=!0}if(xe(o.x)&&xe(o.y)&&xe(o.z))this._focalOffsetVelocity.set(0,0,0),this._focalOffset.copy(this._focalOffsetEnd);else{const u=this._isUserControllingOffset?this.draggingSmoothTime:this.smoothTime;Hy(this._focalOffset,this._focalOffsetEnd,this._focalOffsetVelocity,u,this.maxSpeed,t,this._focalOffset),this._needsUpdate=!0}if(xe(a))this._zoomVelocity.value=0,this._zoom=this._zoomEnd;else{const u=this._isUserControllingZoom?this.draggingSmoothTime:this.smoothTime;this._zoom=Xc(this._zoom,this._zoomEnd,this._zoomVelocity,u,1/0,t)}if(this.dollyToCursor){if(xr(this._camera)&&this._changedDolly!==0){const u=this._spherical.radius-this._lastDistance,d=this._camera,f=this._getCameraDirection(Ka),p=qt.copy(f).cross(d.up).normalize();p.lengthSq()===0&&(p.x=1);const _=oe.crossVectors(p,f),g=this._sphericalEnd.radius*Math.tan(d.getEffectiveFOV()*Ya*.5),x=(this._sphericalEnd.radius-u-this._sphericalEnd.radius)/this._sphericalEnd.radius,y=Wo.copy(this._targetEnd).add(p.multiplyScalar(this._dollyControlCoord.x*g*d.aspect)).add(_.multiplyScalar(this._dollyControlCoord.y*g)),v=qt.copy(this._targetEnd).lerp(y,x),E=this._lastDollyDirection===Ho.IN&&this._spherical.radius<=this.minDistance,b=this._lastDollyDirection===Ho.OUT&&this.maxDistance<=this._spherical.radius;if(this.infinityDolly&&(E||b)){this._sphericalEnd.radius-=u,this._spherical.radius-=u;const T=oe.copy(f).multiplyScalar(-u);v.add(T)}this._boundary.clampPoint(v,v);const w=oe.subVectors(v,this._targetEnd);this._targetEnd.copy(v),this._target.add(w),this._changedDolly-=u,xe(this._changedDolly)&&(this._changedDolly=0)}else if(ks(this._camera)&&this._changedZoom!==0){const u=this._zoom-this._lastZoom,d=this._camera,f=qt.set(this._dollyControlCoord.x,this._dollyControlCoord.y,(d.near+d.far)/(d.near-d.far)).unproject(d),p=oe.set(0,0,-1).applyQuaternion(d.quaternion),_=Wo.copy(f).add(p.multiplyScalar(-f.dot(d.up))),m=-(this._zoom-u-this._zoom)/this._zoom,x=this._getCameraDirection(Ka),y=this._targetEnd.dot(x),v=qt.copy(this._targetEnd).lerp(_,m),E=v.dot(x),b=x.multiplyScalar(E-y);v.sub(b),this._boundary.clampPoint(v,v);const w=oe.subVectors(v,this._targetEnd);this._targetEnd.copy(v),this._target.add(w),this._changedZoom-=u,xe(this._changedZoom)&&(this._changedZoom=0)}}this._camera.zoom!==this._zoom&&(this._camera.zoom=this._zoom,this._camera.updateProjectionMatrix(),this._updateNearPlaneCorners(),this._needsUpdate=!0),this._dragNeedsUpdate=!0;const h=this._collisionTest();this._spherical.radius=Math.min(this._spherical.radius,h),this._spherical.makeSafe(),this._camera.position.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse).add(this._target),this._camera.lookAt(this._target),(!xe(this._focalOffset.x)||!xe(this._focalOffset.y)||!xe(this._focalOffset.z))&&(In.setFromMatrixColumn(this._camera.matrix,0),Ln.setFromMatrixColumn(this._camera.matrix,1),vr.setFromMatrixColumn(this._camera.matrix,2),In.multiplyScalar(this._focalOffset.x),Ln.multiplyScalar(-this._focalOffset.y),vr.multiplyScalar(this._focalOffset.z),qt.copy(In).add(Ln).add(vr),this._camera.position.add(qt),this._camera.updateMatrixWorld()),this._boundaryEnclosesCamera&&this._encloseToBoundary(this._camera.position.copy(this._target),qt.setFromSpherical(this._spherical).applyQuaternion(this._yAxisUpSpaceInverse),1);const c=this._needsUpdate;return c&&!this._updatedLastTime?(this._hasRested=!1,this.dispatchEvent({type:"wake"}),this.dispatchEvent({type:"update"})):c?(this.dispatchEvent({type:"update"}),xe(e,this.restThreshold)&&xe(i,this.restThreshold)&&xe(n,this.restThreshold)&&xe(s.x,this.restThreshold)&&xe(s.y,this.restThreshold)&&xe(s.z,this.restThreshold)&&xe(o.x,this.restThreshold)&&xe(o.y,this.restThreshold)&&xe(o.z,this.restThreshold)&&xe(a,this.restThreshold)&&!this._hasRested&&(this._hasRested=!0,this.dispatchEvent({type:"rest"}))):!c&&this._updatedLastTime&&this.dispatchEvent({type:"sleep"}),this._lastDistance=this._spherical.radius,this._lastZoom=this._zoom,this._updatedLastTime=c,this._needsUpdate=!1,c}toJSON(){return JSON.stringify({enabled:this._enabled,minDistance:this.minDistance,maxDistance:Za(this.maxDistance),minZoom:this.minZoom,maxZoom:Za(this.maxZoom),minPolarAngle:this.minPolarAngle,maxPolarAngle:Za(this.maxPolarAngle),minAzimuthAngle:Za(this.minAzimuthAngle),maxAzimuthAngle:Za(this.maxAzimuthAngle),smoothTime:this.smoothTime,draggingSmoothTime:this.draggingSmoothTime,dollySpeed:this.dollySpeed,truckSpeed:this.truckSpeed,dollyToCursor:this.dollyToCursor,target:this._targetEnd.toArray(),position:qt.setFromSpherical(this._sphericalEnd).add(this._targetEnd).toArray(),zoom:this._zoomEnd,focalOffset:this._focalOffsetEnd.toArray(),target0:this._target0.toArray(),position0:this._position0.toArray(),zoom0:this._zoom0,focalOffset0:this._focalOffset0.toArray()})}fromJSON(t,e=!1){const i=JSON.parse(t);this.enabled=i.enabled,this.minDistance=i.minDistance,this.maxDistance=Ja(i.maxDistance),this.minZoom=i.minZoom,this.maxZoom=Ja(i.maxZoom),this.minPolarAngle=i.minPolarAngle,this.maxPolarAngle=Ja(i.maxPolarAngle),this.minAzimuthAngle=Ja(i.minAzimuthAngle),this.maxAzimuthAngle=Ja(i.maxAzimuthAngle),this.smoothTime=i.smoothTime,this.draggingSmoothTime=i.draggingSmoothTime,this.dollySpeed=i.dollySpeed,this.truckSpeed=i.truckSpeed,this.dollyToCursor=i.dollyToCursor,this._target0.fromArray(i.target0),this._position0.fromArray(i.position0),this._zoom0=i.zoom0,this._focalOffset0.fromArray(i.focalOffset0),this.moveTo(i.target[0],i.target[1],i.target[2],e),tn.setFromVector3(qt.fromArray(i.position).sub(this._targetEnd).applyQuaternion(this._yAxisUpSpace)),this.rotateTo(tn.theta,tn.phi,e),this.dollyTo(tn.radius,e),this.zoomTo(i.zoom,e),this.setFocalOffset(i.focalOffset[0],i.focalOffset[1],i.focalOffset[2],e),this._needsUpdate=!0}connect(t){if(this._domElement){console.warn("camera-controls is already connected.");return}t.setAttribute("data-camera-controls-version",BP),this._addAllEventListeners(t),this._getClientRect(this._elementRect)}disconnect(){this.cancel(),this._removeAllEventListeners(),this._domElement&&(this._domElement.removeAttribute("data-camera-controls-version"),this._domElement=void 0)}dispose(){this.removeAllEventListeners(),this.disconnect()}_getTargetDirection(t){return t.setFromSpherical(this._spherical).divideScalar(this._spherical.radius).applyQuaternion(this._yAxisUpSpaceInverse)}_getCameraDirection(t){return this._getTargetDirection(t).negate()}_findPointerById(t){return this._activePointers.find(e=>e.pointerId===t)}_findPointerByMouseButton(t){return this._activePointers.find(e=>e.mouseButton===t)}_disposePointer(t){this._activePointers.splice(this._activePointers.indexOf(t),1)}_encloseToBoundary(t,e,i){const n=e.lengthSq();if(n===0)return t;const s=oe.copy(e).add(t),a=this._boundary.clampPoint(s,Wo).sub(s),h=a.lengthSq();if(h===0)return t.add(e);if(h===n)return t;if(i===0)return t.add(e).add(a);{const l=1+i*h/e.dot(a);return t.add(oe.copy(e).multiplyScalar(l)).add(a.multiplyScalar(1-i))}}_updateNearPlaneCorners(){if(xr(this._camera)){const t=this._camera,e=t.near,i=t.getEffectiveFOV()*Ya,n=Math.tan(i*.5)*e,s=n*t.aspect;this._nearPlaneCorners[0].set(-s,-n,0),this._nearPlaneCorners[1].set(s,-n,0),this._nearPlaneCorners[2].set(s,n,0),this._nearPlaneCorners[3].set(-s,n,0)}else if(ks(this._camera)){const t=this._camera,e=1/t.zoom,i=t.left*e,n=t.right*e,s=t.top*e,o=t.bottom*e;this._nearPlaneCorners[0].set(i,s,0),this._nearPlaneCorners[1].set(n,s,0),this._nearPlaneCorners[2].set(n,o,0),this._nearPlaneCorners[3].set(i,o,0)}}_collisionTest(){let t=1/0;if(!(this.colliderMeshes.length>=1)||Ep(this._camera,"_collisionTest"))return t;const i=this._getTargetDirection(Ka);Ip.lookAt(Gy,i,this._camera.up);for(let n=0;n<4;n++){const s=oe.copy(this._nearPlaneCorners[n]);s.applyMatrix4(Ip);const o=Wo.addVectors(this._target,s);Zc.set(o,i),Zc.far=this._spherical.radius+1;const a=Zc.intersectObjects(this.colliderMeshes);a.length!==0&&a[0].distance<t&&(t=a[0].distance)}return t}_getClientRect(t){if(!this._domElement)return;const e=this._domElement.getBoundingClientRect();return t.x=e.left,t.y=e.top,this._viewport?(t.x+=this._viewport.x,t.y+=e.height-this._viewport.w-this._viewport.y,t.width=this._viewport.z,t.height=this._viewport.w):(t.width=e.width,t.height=e.height),t}_createOnRestPromise(t){return t?Promise.resolve():(this._hasRested=!1,this.dispatchEvent({type:"transitionstart"}),new Promise(e=>{const i=()=>{this.removeEventListener("rest",i),e()};this.addEventListener("rest",i)}))}_addAllEventListeners(t){}_removeAllEventListeners(){}get dampingFactor(){return console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead."),0}set dampingFactor(t){console.warn(".dampingFactor has been deprecated. use smoothTime (in seconds) instead.")}get draggingDampingFactor(){return console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead."),0}set draggingDampingFactor(t){console.warn(".draggingDampingFactor has been deprecated. use draggingSmoothTime (in seconds) instead.")}static createBoundingSphere(t,e=new Nt.Sphere){const i=e,n=i.center;$o.makeEmpty(),t.traverseVisible(o=>{o.isMesh&&$o.expandByObject(o)}),$o.getCenter(n);let s=0;return t.traverseVisible(o=>{if(!o.isMesh)return;const a=o;if(!a.geometry)return;const h=a.geometry.clone();h.applyMatrix4(a.matrixWorld);const c=h.attributes.position;for(let u=0,d=c.count;u<d;u++)qt.fromBufferAttribute(c,u),s=Math.max(s,n.distanceToSquared(qt))}),i.radius=Math.sqrt(s),i}}class VP{constructor(t,e){q(this,"camera");q(this,"controls");q(this,"clock",new hg);this.camera=t,this.camera.position.set(0,20,0),this.controls=new Ur(t,e),this.controls.mouseButtons.left=Ur.ACTION.NONE,this.controls.touches.one=Ur.ACTION.NONE,this.controls.dollyToCursor=!0,this.controls.minDistance=1.5,this.setupCamera()}setupCamera(){}orthoCamera(){}perspectiveCamera(){}isometricCamera(){}fitToElement(t){const e=new Le;for(const i of t)e.expandByObject(i);e.expandByScalar(2),this.controls.fitToSphere(e.getBoundingSphere(new He),!0)}update(){const t=this.clock.getDelta();this.controls.update(t)}}const Yy=new Le,Jc=new R;class tM extends og{constructor(){super(),this.isLineSegmentsGeometry=!0,this.type="LineSegmentsGeometry";const t=[-1,2,0,1,2,0,-1,1,0,1,1,0,-1,0,0,1,0,0,-1,-1,0,1,-1,0],e=[-1,2,1,2,-1,1,1,1,-1,-1,1,-1,-1,-2,1,-2],i=[0,2,1,2,3,1,2,4,3,4,5,3,4,6,5,6,7,5];this.setIndex(i),this.setAttribute("position",new Tt(t,3)),this.setAttribute("uv",new Tt(e,2))}applyMatrix4(t){const e=this.attributes.instanceStart,i=this.attributes.instanceEnd;return e!==void 0&&(e.applyMatrix4(t),i.applyMatrix4(t),e.needsUpdate=!0),this.boundingBox!==null&&this.computeBoundingBox(),this.boundingSphere!==null&&this.computeBoundingSphere(),this}setPositions(t){let e;t instanceof Float32Array?e=t:Array.isArray(t)&&(e=new Float32Array(t));const i=new Xu(e,6,1);return this.setAttribute("instanceStart",new $i(i,3,0)),this.setAttribute("instanceEnd",new $i(i,3,3)),this.computeBoundingBox(),this.computeBoundingSphere(),this}setColors(t){let e;t instanceof Float32Array?e=t:Array.isArray(t)&&(e=new Float32Array(t));const i=new Xu(e,6,1);return this.setAttribute("instanceColorStart",new $i(i,3,0)),this.setAttribute("instanceColorEnd",new $i(i,3,3)),this}fromWireframeGeometry(t){return this.setPositions(t.attributes.position.array),this}fromEdgesGeometry(t){return this.setPositions(t.attributes.position.array),this}fromMesh(t){return this.fromWireframeGeometry(new Jm(t.geometry)),this}fromLineSegments(t){const e=t.geometry;return this.setPositions(e.attributes.position.array),this}computeBoundingBox(){this.boundingBox===null&&(this.boundingBox=new Le);const t=this.attributes.instanceStart,e=this.attributes.instanceEnd;t!==void 0&&e!==void 0&&(this.boundingBox.setFromBufferAttribute(t),Yy.setFromBufferAttribute(e),this.boundingBox.union(Yy))}computeBoundingSphere(){this.boundingSphere===null&&(this.boundingSphere=new He),this.boundingBox===null&&this.computeBoundingBox();const t=this.attributes.instanceStart,e=this.attributes.instanceEnd;if(t!==void 0&&e!==void 0){const i=this.boundingSphere.center;this.boundingBox.getCenter(i);let n=0;for(let s=0,o=t.count;s<o;s++)Jc.fromBufferAttribute(t,s),n=Math.max(n,i.distanceToSquared(Jc)),Jc.fromBufferAttribute(e,s),n=Math.max(n,i.distanceToSquared(Jc));this.boundingSphere.radius=Math.sqrt(n),isNaN(this.boundingSphere.radius)&&console.error("THREE.LineSegmentsGeometry.computeBoundingSphere(): Computed radius is NaN. The instanced position data is likely to have NaN values.",this)}}toJSON(){}applyMatrix(t){return console.warn("THREE.LineSegmentsGeometry: applyMatrix() has been renamed to applyMatrix4()."),this.applyMatrix4(t)}}dt.line={worldUnits:{value:1},linewidth:{value:1},resolution:{value:new Q(1,1)},dashOffset:{value:0},dashScale:{value:1},dashSize:{value:1},gapSize:{value:1}};vi.line={uniforms:fd.merge([dt.common,dt.fog,dt.line]),vertexShader:`
		#include <common>
		#include <color_pars_vertex>
		#include <fog_pars_vertex>
		#include <logdepthbuf_pars_vertex>
		#include <clipping_planes_pars_vertex>

		uniform float linewidth;
		uniform vec2 resolution;

		attribute vec3 instanceStart;
		attribute vec3 instanceEnd;

		attribute vec3 instanceColorStart;
		attribute vec3 instanceColorEnd;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#ifdef USE_DASH

			uniform float dashScale;
			attribute float instanceDistanceStart;
			attribute float instanceDistanceEnd;
			varying float vLineDistance;

		#endif

		void trimSegment( const in vec4 start, inout vec4 end ) {

			// trim end segment so it terminates between the camera plane and the near plane

			// conservative estimate of the near plane
			float a = projectionMatrix[ 2 ][ 2 ]; // 3nd entry in 3th column
			float b = projectionMatrix[ 3 ][ 2 ]; // 3nd entry in 4th column
			float nearEstimate = - 0.5 * b / a;

			float alpha = ( nearEstimate - start.z ) / ( end.z - start.z );

			end.xyz = mix( start.xyz, end.xyz, alpha );

		}

		void main() {

			#ifdef USE_COLOR

				vColor.xyz = ( position.y < 0.5 ) ? instanceColorStart : instanceColorEnd;

			#endif

			#ifdef USE_DASH

				vLineDistance = ( position.y < 0.5 ) ? dashScale * instanceDistanceStart : dashScale * instanceDistanceEnd;
				vUv = uv;

			#endif

			float aspect = resolution.x / resolution.y;

			// camera space
			vec4 start = modelViewMatrix * vec4( instanceStart, 1.0 );
			vec4 end = modelViewMatrix * vec4( instanceEnd, 1.0 );

			#ifdef WORLD_UNITS

				worldStart = start.xyz;
				worldEnd = end.xyz;

			#else

				vUv = uv;

			#endif

			// special case for perspective projection, and segments that terminate either in, or behind, the camera plane
			// clearly the gpu firmware has a way of addressing this issue when projecting into ndc space
			// but we need to perform ndc-space calculations in the shader, so we must address this issue directly
			// perhaps there is a more elegant solution -- WestLangley

			bool perspective = ( projectionMatrix[ 2 ][ 3 ] == - 1.0 ); // 4th entry in the 3rd column

			if ( perspective ) {

				if ( start.z < 0.0 && end.z >= 0.0 ) {

					trimSegment( start, end );

				} else if ( end.z < 0.0 && start.z >= 0.0 ) {

					trimSegment( end, start );

				}

			}

			// clip space
			vec4 clipStart = projectionMatrix * start;
			vec4 clipEnd = projectionMatrix * end;

			// ndc space
			vec3 ndcStart = clipStart.xyz / clipStart.w;
			vec3 ndcEnd = clipEnd.xyz / clipEnd.w;

			// direction
			vec2 dir = ndcEnd.xy - ndcStart.xy;

			// account for clip-space aspect ratio
			dir.x *= aspect;
			dir = normalize( dir );

			#ifdef WORLD_UNITS

				vec3 worldDir = normalize( end.xyz - start.xyz );
				vec3 tmpFwd = normalize( mix( start.xyz, end.xyz, 0.5 ) );
				vec3 worldUp = normalize( cross( worldDir, tmpFwd ) );
				vec3 worldFwd = cross( worldDir, worldUp );
				worldPos = position.y < 0.5 ? start: end;

				// height offset
				float hw = linewidth * 0.5;
				worldPos.xyz += position.x < 0.0 ? hw * worldUp : - hw * worldUp;

				// don't extend the line if we're rendering dashes because we
				// won't be rendering the endcaps
				#ifndef USE_DASH

					// cap extension
					worldPos.xyz += position.y < 0.5 ? - hw * worldDir : hw * worldDir;

					// add width to the box
					worldPos.xyz += worldFwd * hw;

					// endcaps
					if ( position.y > 1.0 || position.y < 0.0 ) {

						worldPos.xyz -= worldFwd * 2.0 * hw;

					}

				#endif

				// project the worldpos
				vec4 clip = projectionMatrix * worldPos;

				// shift the depth of the projected points so the line
				// segments overlap neatly
				vec3 clipPose = ( position.y < 0.5 ) ? ndcStart : ndcEnd;
				clip.z = clipPose.z * clip.w;

			#else

				vec2 offset = vec2( dir.y, - dir.x );
				// undo aspect ratio adjustment
				dir.x /= aspect;
				offset.x /= aspect;

				// sign flip
				if ( position.x < 0.0 ) offset *= - 1.0;

				// endcaps
				if ( position.y < 0.0 ) {

					offset += - dir;

				} else if ( position.y > 1.0 ) {

					offset += dir;

				}

				// adjust for linewidth
				offset *= linewidth;

				// adjust for clip-space to screen-space conversion // maybe resolution should be based on viewport ...
				offset /= resolution.y;

				// select end
				vec4 clip = ( position.y < 0.5 ) ? clipStart : clipEnd;

				// back to clip space
				offset *= clip.w;

				clip.xy += offset;

			#endif

			gl_Position = clip;

			vec4 mvPosition = ( position.y < 0.5 ) ? start : end; // this is an approximation

			#include <logdepthbuf_vertex>
			#include <clipping_planes_vertex>
			#include <fog_vertex>

		}
		`,fragmentShader:`
		uniform vec3 diffuse;
		uniform float opacity;
		uniform float linewidth;

		#ifdef USE_DASH

			uniform float dashOffset;
			uniform float dashSize;
			uniform float gapSize;

		#endif

		varying float vLineDistance;

		#ifdef WORLD_UNITS

			varying vec4 worldPos;
			varying vec3 worldStart;
			varying vec3 worldEnd;

			#ifdef USE_DASH

				varying vec2 vUv;

			#endif

		#else

			varying vec2 vUv;

		#endif

		#include <common>
		#include <color_pars_fragment>
		#include <fog_pars_fragment>
		#include <logdepthbuf_pars_fragment>
		#include <clipping_planes_pars_fragment>

		vec2 closestLineToLine(vec3 p1, vec3 p2, vec3 p3, vec3 p4) {

			float mua;
			float mub;

			vec3 p13 = p1 - p3;
			vec3 p43 = p4 - p3;

			vec3 p21 = p2 - p1;

			float d1343 = dot( p13, p43 );
			float d4321 = dot( p43, p21 );
			float d1321 = dot( p13, p21 );
			float d4343 = dot( p43, p43 );
			float d2121 = dot( p21, p21 );

			float denom = d2121 * d4343 - d4321 * d4321;

			float numer = d1343 * d4321 - d1321 * d4343;

			mua = numer / denom;
			mua = clamp( mua, 0.0, 1.0 );
			mub = ( d1343 + d4321 * ( mua ) ) / d4343;
			mub = clamp( mub, 0.0, 1.0 );

			return vec2( mua, mub );

		}

		void main() {

			#include <clipping_planes_fragment>

			#ifdef USE_DASH

				if ( vUv.y < - 1.0 || vUv.y > 1.0 ) discard; // discard endcaps

				if ( mod( vLineDistance + dashOffset, dashSize + gapSize ) > dashSize ) discard; // todo - FIX

			#endif

			float alpha = opacity;

			#ifdef WORLD_UNITS

				// Find the closest points on the view ray and the line segment
				vec3 rayEnd = normalize( worldPos.xyz ) * 1e5;
				vec3 lineDir = worldEnd - worldStart;
				vec2 params = closestLineToLine( worldStart, worldEnd, vec3( 0.0, 0.0, 0.0 ), rayEnd );

				vec3 p1 = worldStart + lineDir * params.x;
				vec3 p2 = rayEnd * params.y;
				vec3 delta = p1 - p2;
				float len = length( delta );
				float norm = len / linewidth;

				#ifndef USE_DASH

					#ifdef USE_ALPHA_TO_COVERAGE

						float dnorm = fwidth( norm );
						alpha = 1.0 - smoothstep( 0.5 - dnorm, 0.5 + dnorm, norm );

					#else

						if ( norm > 0.5 ) {

							discard;

						}

					#endif

				#endif

			#else

				#ifdef USE_ALPHA_TO_COVERAGE

					// artifacts appear on some hardware if a derivative is taken within a conditional
					float a = vUv.x;
					float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
					float len2 = a * a + b * b;
					float dlen = fwidth( len2 );

					if ( abs( vUv.y ) > 1.0 ) {

						alpha = 1.0 - smoothstep( 1.0 - dlen, 1.0 + dlen, len2 );

					}

				#else

					if ( abs( vUv.y ) > 1.0 ) {

						float a = vUv.x;
						float b = ( vUv.y > 0.0 ) ? vUv.y - 1.0 : vUv.y + 1.0;
						float len2 = a * a + b * b;

						if ( len2 > 1.0 ) discard;

					}

				#endif

			#endif

			vec4 diffuseColor = vec4( diffuse, alpha );

			#include <logdepthbuf_fragment>
			#include <color_fragment>

			gl_FragColor = vec4( diffuseColor.rgb, alpha );

			#include <tonemapping_fragment>
			#include <colorspace_fragment>
			#include <fog_fragment>
			#include <premultiplied_alpha_fragment>

		}
		`};class yg extends hn{constructor(t){super({type:"LineMaterial",uniforms:fd.clone(vi.line.uniforms),vertexShader:vi.line.vertexShader,fragmentShader:vi.line.fragmentShader,clipping:!0}),this.isLineMaterial=!0,this.setValues(t)}get color(){return this.uniforms.diffuse.value}set color(t){this.uniforms.diffuse.value=t}get worldUnits(){return"WORLD_UNITS"in this.defines}set worldUnits(t){t===!0?this.defines.WORLD_UNITS="":delete this.defines.WORLD_UNITS}get linewidth(){return this.uniforms.linewidth.value}set linewidth(t){this.uniforms.linewidth&&(this.uniforms.linewidth.value=t)}get dashed(){return"USE_DASH"in this.defines}set dashed(t){t===!0!==this.dashed&&(this.needsUpdate=!0),t===!0?this.defines.USE_DASH="":delete this.defines.USE_DASH}get dashScale(){return this.uniforms.dashScale.value}set dashScale(t){this.uniforms.dashScale.value=t}get dashSize(){return this.uniforms.dashSize.value}set dashSize(t){this.uniforms.dashSize.value=t}get dashOffset(){return this.uniforms.dashOffset.value}set dashOffset(t){this.uniforms.dashOffset.value=t}get gapSize(){return this.uniforms.gapSize.value}set gapSize(t){this.uniforms.gapSize.value=t}get opacity(){return this.uniforms.opacity.value}set opacity(t){this.uniforms&&(this.uniforms.opacity.value=t)}get resolution(){return this.uniforms.resolution.value}set resolution(t){this.uniforms.resolution.value.copy(t)}get alphaToCoverage(){return"USE_ALPHA_TO_COVERAGE"in this.defines}set alphaToCoverage(t){this.defines&&(t===!0!==this.alphaToCoverage&&(this.needsUpdate=!0),t===!0?this.defines.USE_ALPHA_TO_COVERAGE="":delete this.defines.USE_ALPHA_TO_COVERAGE)}}const Lp=new se,Zy=new R,Jy=new R,ti=new se,ei=new se,Dn=new se,Dp=new R,Op=new Ft,ni=new zb,Ky=new R,Kc=new Le,jc=new He,On=new se;let zn,Nr;function jy(r,t,e){return On.set(0,0,-t,1).applyMatrix4(r.projectionMatrix),On.multiplyScalar(1/On.w),On.x=Nr/e.width,On.y=Nr/e.height,On.applyMatrix4(r.projectionMatrixInverse),On.multiplyScalar(1/On.w),Math.abs(Math.max(On.x,On.y))}function HP(r,t){const e=r.matrixWorld,i=r.geometry,n=i.attributes.instanceStart,s=i.attributes.instanceEnd,o=Math.min(i.instanceCount,n.count);for(let a=0,h=o;a<h;a++){ni.start.fromBufferAttribute(n,a),ni.end.fromBufferAttribute(s,a),ni.applyMatrix4(e);const l=new R,c=new R;zn.distanceSqToSegment(ni.start,ni.end,c,l),c.distanceTo(l)<Nr*.5&&t.push({point:c,pointOnLine:l,distance:zn.origin.distanceTo(c),object:r,face:null,faceIndex:a,uv:null,uv1:null})}}function GP(r,t,e){const i=t.projectionMatrix,s=r.material.resolution,o=r.matrixWorld,a=r.geometry,h=a.attributes.instanceStart,l=a.attributes.instanceEnd,c=Math.min(a.instanceCount,h.count),u=-t.near;zn.at(1,Dn),Dn.w=1,Dn.applyMatrix4(t.matrixWorldInverse),Dn.applyMatrix4(i),Dn.multiplyScalar(1/Dn.w),Dn.x*=s.x/2,Dn.y*=s.y/2,Dn.z=0,Dp.copy(Dn),Op.multiplyMatrices(t.matrixWorldInverse,o);for(let d=0,f=c;d<f;d++){if(ti.fromBufferAttribute(h,d),ei.fromBufferAttribute(l,d),ti.w=1,ei.w=1,ti.applyMatrix4(Op),ei.applyMatrix4(Op),ti.z>u&&ei.z>u)continue;if(ti.z>u){const y=ti.z-ei.z,v=(ti.z-u)/y;ti.lerp(ei,v)}else if(ei.z>u){const y=ei.z-ti.z,v=(ei.z-u)/y;ei.lerp(ti,v)}ti.applyMatrix4(i),ei.applyMatrix4(i),ti.multiplyScalar(1/ti.w),ei.multiplyScalar(1/ei.w),ti.x*=s.x/2,ti.y*=s.y/2,ei.x*=s.x/2,ei.y*=s.y/2,ni.start.copy(ti),ni.start.z=0,ni.end.copy(ei),ni.end.z=0;const _=ni.closestPointToPointParameter(Dp,!0);ni.at(_,Ky);const g=bv.lerp(ti.z,ei.z,_),m=g>=-1&&g<=1,x=Dp.distanceTo(Ky)<Nr*.5;if(m&&x){ni.start.fromBufferAttribute(h,d),ni.end.fromBufferAttribute(l,d),ni.start.applyMatrix4(o),ni.end.applyMatrix4(o);const y=new R,v=new R;zn.distanceSqToSegment(ni.start,ni.end,v,y),e.push({point:v,pointOnLine:y,distance:zn.origin.distanceTo(v),object:r,face:null,faceIndex:d,uv:null,uv1:null})}}}class WP extends ge{constructor(t=new tM,e=new yg({color:Math.random()*16777215})){super(t,e),this.isLineSegments2=!0,this.type="LineSegments2"}computeLineDistances(){const t=this.geometry,e=t.attributes.instanceStart,i=t.attributes.instanceEnd,n=new Float32Array(2*e.count);for(let o=0,a=0,h=e.count;o<h;o++,a+=2)Zy.fromBufferAttribute(e,o),Jy.fromBufferAttribute(i,o),n[a]=a===0?0:n[a-1],n[a+1]=n[a]+Zy.distanceTo(Jy);const s=new Xu(n,2,1);return t.setAttribute("instanceDistanceStart",new $i(s,1,0)),t.setAttribute("instanceDistanceEnd",new $i(s,1,1)),this}raycast(t,e){const i=this.material.worldUnits,n=t.camera;n===null&&!i&&console.error('LineSegments2: "Raycaster.camera" needs to be set in order to raycast against LineSegments2 while worldUnits is set to false.');const s=t.params.Line2!==void 0&&t.params.Line2.threshold||0;zn=t.ray;const o=this.matrixWorld,a=this.geometry,h=this.material;Nr=h.linewidth+s,a.boundingSphere===null&&a.computeBoundingSphere(),jc.copy(a.boundingSphere).applyMatrix4(o);let l;if(i)l=Nr*.5;else{const u=Math.max(n.near,jc.distanceToPoint(zn.origin));l=jy(n,u,h.resolution)}if(jc.radius+=l,zn.intersectsSphere(jc)===!1)return;a.boundingBox===null&&a.computeBoundingBox(),Kc.copy(a.boundingBox).applyMatrix4(o);let c;if(i)c=Nr*.5;else{const u=Math.max(n.near,Kc.distanceToPoint(zn.origin));c=jy(n,u,h.resolution)}Kc.expandByScalar(c),zn.intersectsBox(Kc)!==!1&&(i?HP(this,e):GP(this,n,e))}onBeforeRender(t){const e=this.material.uniforms;e&&e.resolution&&(t.getViewport(Lp),this.material.uniforms.resolution.value.set(Lp.z,Lp.w))}}class eM extends tM{constructor(){super(),this.isLineGeometry=!0,this.type="LineGeometry"}setPositions(t){const e=t.length-3,i=new Float32Array(2*e);for(let n=0;n<e;n+=3)i[2*n]=t[n],i[2*n+1]=t[n+1],i[2*n+2]=t[n+2],i[2*n+3]=t[n+3],i[2*n+4]=t[n+4],i[2*n+5]=t[n+5];return super.setPositions(i),this}setColors(t){const e=t.length-3,i=new Float32Array(2*e);for(let n=0;n<e;n+=3)i[2*n]=t[n],i[2*n+1]=t[n+1],i[2*n+2]=t[n+2],i[2*n+3]=t[n+3],i[2*n+4]=t[n+4],i[2*n+5]=t[n+5];return super.setColors(i),this}fromLine(t){const e=t.geometry;return this.setPositions(e.attributes.position.array),this}}class $P extends WP{constructor(t=new eM,e=new yg({color:Math.random()*16777215})){super(t,e),this.isLine2=!0,this.type="Line2"}}var aa;class Fp{constructor(){q(this,"activeShape",null);q(this,"selectorMesh",new Rr);Cg(this,aa,null);q(this,"_pencil",null);q(this,"isDragging",!1);q(this,"isHovering",!1);q(this,"isPicked",!1);q(this,"isTransforming",!1);q(this,"initialCursorPos",new R(0,0,0));q(this,"initialFirstPosition",new R(0,0,0));q(this,"selectorBounds",null);q(this,"selectorBoundsMeshs",{})}set pencil(t){this._pencil=t,this.pencil.onElementHover.add(e=>{var s;const{mesh:i,point:n}=e;i.name===((s=this.activeShape)==null?void 0:s.ogid)+"-overlay-selector"&&(this.isPicked||(this.isHovering=!0),this.isPicked&&(this.isHovering=!1,this.isDragging=!0,this.handleDrag(n)))}),this.pencil.onElementSelected.add(e=>{var s,o;const{mesh:i,point:n}=e;i.name===((s=this.activeShape)==null?void 0:s.ogid)+"-overlay-selector"&&(console.log("Selected active shape:",(o=this.activeShape)==null?void 0:o.ogid),this.isPicked=!0,this.initialCursorPos.copy(n))}),this.pencil.onElementUnselected.add(e=>{var n,s,o;const{mesh:i}=e;i.name===((n=this.activeShape)==null?void 0:n.ogid)+"-overlay-selector"&&(console.log("Unselected active shape:",(s=this.activeShape)==null?void 0:s.ogid),this.isPicked=!1,this.isDragging=!1,this.initialFirstPosition.copy(((o=this.activeShape)==null?void 0:o.position)||new R(0,0,0)))})}get pencil(){if(this._pencil)return this._pencil;throw new Error("Pencil is not set for this PolyLine.")}set scene(t){Rg(this,aa,t)}get scene(){if(!Hd(this,aa))throw new Error("Scene is not set. Please set the scene before accessing it.");return Hd(this,aa)}set shape(t){if(!t){console.warn("Shape is null, clearing active shape."),this.selectorMesh.removeFromParent(),this.activeShape=null,this.isPicked=!1,this.isDragging=!1,this.isHovering=!1,this.isTransforming=!1,this.initialCursorPos.set(0,0,0),this.initialFirstPosition.set(0,0,0);return}this.activeShape=t,this.activeShape._selected=!0,this.pencil.mode="select",this.addControlsToActiveShape()}addControlsToActiveShape(){if(!this.activeShape)return;const t=this.activeShape.clone();t.rotation.set(0,0,0),t.updateMatrixWorld();const e=new Le().setFromObject(t),i=e.min,n=e.max;this.initialFirstPosition=this.activeShape.position.clone();const s=i.clone().sub(this.activeShape.position).subScalar(.05),o=n.clone().sub(this.activeShape.position).addScalar(.05),a=[s.x,0,s.z,o.x,0,s.z,o.x,0,o.z,s.x,0,o.z,s.x,0,s.z,o.x,0,s.z,o.x,0,o.z,s.x,0,o.z],h=new Float32Array(a),l=new eM().setPositions(h),c=new yg({color:4481279,linewidth:2,resolution:new Q(window.innerWidth,window.innerHeight)}),u=new $P(l,c);u.computeLineDistances(),u.name=this.activeShape.ogid+"-edge-selector",this.selectorMesh.add(u);const d=new Js(o.x-s.x,0,o.z-s.z),f=new Oe({color:4481279,transparent:!0,opacity:0,side:fi}),p=new ge(d,f);p.name=this.activeShape.ogid+"-overlay-selector",this.selectorMesh.add(p),this.pencil.pencilMeshes.push(this.selectorMesh),this.activeShape.add(this.selectorMesh),this.selectorBounds={min:s,max:o,center:new R((s.x+o.x)/2,0,(s.z+o.z)/2)};const _=new ge(new sa(.1,16,16),new Oe({color:16711680}));_.position.copy(s),_.name=this.activeShape.ogid+"-selector-min-bound",this.selectorBoundsMeshs.min=_;const g=new ge(new sa(.1,16,16),new Oe({color:65280}));g.position.copy(o),g.name=this.activeShape.ogid+"-selector-max-bound",this.selectorBoundsMeshs.max=g;const m=new ge(new sa(.1,16,16),new Oe({color:255}));m.position.copy(this.selectorBounds.center),m.name=this.activeShape.ogid+"-selector-center-bound",this.selectorBoundsMeshs.center=m,this.selectorMesh.add(_),this.selectorMesh.add(g),this.selectorMesh.add(m)}handleDrag(t){if(!this.activeShape||!this.isDragging)return;const e=t.clone().sub(this.initialCursorPos).add(this.initialFirstPosition);this.activeShape.position.copy(e),this.activeShape.positionToPlacement();const i=this.activeShape.localToWorld(new R(0,0,0));console.log("Selector Bounds Center Position:",i)}update(){this.activeShape}}aa=new WeakMap;const lm={_instance:null,set scene(r){this._instance?this._instance.scene=r:(this._instance=new Fp,this._instance.scene=r)},set pencil(r){this._instance?this._instance.pencil=r:(this._instance=new Fp,this._instance.pencil=r)},update(){this._instance&&this._instance.update()},select(r){this._instance?this._instance.shape=r:(console.log("Creating new ShapeSelector instance"),this._instance=new Fp,this._instance.shape=r)},clearSelection(){this._instance&&(this._instance.shape=null)}};new R(0,0,0);class XP{constructor(t,e){q(this,"scene");q(this,"renderer");q(this,"labelRenderer");q(this,"planCamera");q(this,"threeCamera");q(this,"container");q(this,"theme");q(this,"activeTheme","light");q(this,"openGrid");this.callback=e,Ur.install({THREE:xR}),this.generateTheme(),this.container=t,this.scene=new Bm,this.renderer=new Wv({antialias:!0,logarithmicDepthBuffer:!0}),this.threeCamera=new Ye(75,this.container.clientWidth/this.container.clientHeight,1,1e3),this.planCamera=new VP(this.threeCamera,t),this.setup()}generateTheme(){this.theme={darkBlue:{background:"#003ca0",color:"#fff",gridColor:16777215},light:{background:"#ebdbcc",color:"#003ca0",gridColor:15520},dark:{background:"#242b2f",color:"#fff",gridColor:16777215}}}toggleTheme(t){this.theme[t]&&(this.activeTheme=t,this.scene.background=new vt(this.theme[this.activeTheme].background),this.hexToRgb(this.theme[this.activeTheme].gridColor))}async setup(){this.renderer.setSize(this.container.clientWidth,this.container.clientHeight),this.renderer.setPixelRatio(Math.min(window.devicePixelRatio,2)),this.container.appendChild(this.renderer.domElement);const t=new rg(16777215,.5);this.scene.add(t);const e=new sg(16777215,.5);this.scene.add(e),this.scene.background=new vt(this.theme[this.activeTheme].background),window.addEventListener("resize",()=>{this.renderer.setSize(this.container.clientWidth,this.container.clientHeight),this.threeCamera.aspect=this.container.clientWidth/this.container.clientHeight,this.threeCamera.updateProjectionMatrix()}),this.animate(),this.hexToRgb(this.theme[this.activeTheme].gridColor),this.openGrid=new Nb(100,100),this.scene.add(this.openGrid),lm.scene=this.scene}toggleGrid(t){this.openGrid?t?this.scene.add(this.openGrid):this.scene.remove(this.openGrid):console.warn("OpenGrid is not initialized")}hexToRgb(t){const e=new vt(t);return new R(e.r,e.g,e.b)}animate(){this.renderer.render(this.scene,this.threeCamera),this.planCamera.update(),this.callback(),lm.update(),requestAnimationFrame(()=>this.animate())}}class qP extends cw{constructor(e){super(e);q(this,"ogType","PolylinePrimitive");q(this,"subNodes");q(this,"selected");q(this,"edit");q(this,"propertySet");q(this,"dimensionsSet",new Map);q(this,"activeProperty",null);this.subNodes=new Map,this.selected=!1,this.edit=!1,e?this.propertySet={...e,...this.options}:this.propertySet=this.options}setOPConfig(e){this.discardGeometry(),console.log("Setting Polyline Config:",e),this.propertySet=e,this.setConfig(e),console.log(this.geometry.attributes.position)}getOPConfig(){return this.propertySet}setOPGeometry(){}setOPMaterial(){}}class iM extends pe{constructor(t=document.createElement("div")){super(),this.isCSS2DObject=!0,this.element=t,this.element.style.position="absolute",this.element.style.userSelect="none",this.element.setAttribute("draggable",!1),this.center=new Q(.5,.5),this.addEventListener("removed",function(){this.traverse(function(e){e.element instanceof Element&&e.element.parentNode!==null&&e.element.parentNode.removeChild(e.element)})})}copy(t,e){return super.copy(t,e),this.element=t.element.cloneNode(!0),this.center=t.center,this}}const Xo=new R,Qy=new Ft,tx=new Ft,ex=new R,ix=new R;class YP{constructor(t={}){const e=this;let i,n,s,o;const a={objects:new WeakMap},h=t.element!==void 0?t.element:document.createElement("div");h.style.overflow="hidden",this.domElement=h,this.getSize=function(){return{width:i,height:n}},this.render=function(p,_){p.matrixWorldAutoUpdate===!0&&p.updateMatrixWorld(),_.parent===null&&_.matrixWorldAutoUpdate===!0&&_.updateMatrixWorld(),Qy.copy(_.matrixWorldInverse),tx.multiplyMatrices(_.projectionMatrix,Qy),c(p,p,_),f(p)},this.setSize=function(p,_){i=p,n=_,s=i/2,o=n/2,h.style.width=p+"px",h.style.height=_+"px"};function l(p){p.isCSS2DObject&&(p.element.style.display="none");for(let _=0,g=p.children.length;_<g;_++)l(p.children[_])}function c(p,_,g){if(p.visible===!1){l(p);return}if(p.isCSS2DObject){Xo.setFromMatrixPosition(p.matrixWorld),Xo.applyMatrix4(tx);const m=Xo.z>=-1&&Xo.z<=1&&p.layers.test(g.layers)===!0,x=p.element;x.style.display=m===!0?"":"none",m===!0&&(p.onBeforeRender(e,_,g),x.style.transform="translate("+-100*p.center.x+"%,"+-100*p.center.y+"%)translate("+(Xo.x*s+s)+"px,"+(-Xo.y*o+o)+"px)",x.parentNode!==h&&h.appendChild(x),p.onAfterRender(e,_,g));const y={distanceToCameraSquared:u(g,p)};a.objects.set(p,y)}for(let m=0,x=p.children.length;m<x;m++)c(p.children[m],_,g)}function u(p,_){return ex.setFromMatrixPosition(p.matrixWorld),ix.setFromMatrixPosition(_.matrixWorld),ex.distanceToSquared(ix)}function d(p){const _=[];return p.traverseVisible(function(g){g.isCSS2DObject&&_.push(g)}),_}function f(p){const _=d(p).sort(function(m,x){if(m.renderOrder!==x.renderOrder)return x.renderOrder-m.renderOrder;const y=a.objects.get(m).distanceToCameraSquared,v=a.objects.get(x).distanceToCameraSquared;return y-v}),g=_.length;for(let m=0,x=_.length;m<x;m++)_[m].element.style.zIndex=g-m}}}class ZP extends Mx{constructor(e){super(e);q(this,"ogType","LineDimension");q(this,"dimensionData");q(this,"dimensionLabel","1");q(this,"dimensionMesh",null);this.dimensionData=e||this.options,this.createDimension()}setDimensionLabel(e){this.dimensionLabel=e,this.dimensionMesh&&(this.dimensionMesh.element.textContent=e)}setDimensionData(e,i){this.dimensionData.start=e.start,new R(e.start.x,e.start.y,e.start.z);const n=new R(e.end.x,e.end.y,e.end.z);this.dimensionData.end=n,this.setDimensionLabel(i.toString()),this.setConfig(this.dimensionData)}getDimensionLabel(){return this.dimensionLabel}createDimension(){this.createDimensionMesh();const e=new Je({color:0}),i=.1,n=new R().subVectors(this.dimensionData.end,this.dimensionData.start).normalize(),s=new R(-n.y,0,n.x).normalize(),o=new Xt().setFromPoints([new R().addVectors(this.dimensionData.start,s.clone().multiplyScalar(i/2)),new R().addVectors(this.dimensionData.start,s.clone().multiplyScalar(-.1/2))]),a=new Hn(o,e);this.add(a);const h=new Xt().setFromPoints([new R().addVectors(this.dimensionData.end,s.clone().multiplyScalar(i/2)),new R().addVectors(this.dimensionData.end,s.clone().multiplyScalar(-.1/2))]),l=new Hn(h,e);this.add(l)}createDimensionMesh(){if(this.dimensionMesh)return this.dimensionMesh;const e=document.createElement("div");e.className="label",e.textContent=this.dimensionLabel,e.style.marginTop="-1em",e.style.padding="2px 5px",e.style.backgroundColor="rgba(255, 255, 255, 0.7)",e.style.border="1px solid #000",e.style.borderRadius="4px",e.style.fontSize="12px",this.dimensionMesh=new iM(e);const i=new R().addVectors(this.dimensionData.start,this.dimensionData.end).multiplyScalar(.5);this.dimensionMesh.position.set(i.x,i.y,i.z),this.add(this.dimensionMesh)}updateDimensionMeshPosition(){this.dimensionMesh}}const Hs=class Hs{constructor(){q(this,"scene",null);q(this,"store");this.store=new Map,Hs.instance=this}static getInstance(){return Hs.instance||(Hs.instance=new Hs),Hs.instance}set(t,e){this.store.set(t,e)}set sceneRef(t){this.scene=t}get sceneRef(){if(!this.scene)throw new Error("Scene not initialized");return this.scene}getDimensionsById(t){return this.store.get(t)}createDimension(t,e){switch(e){case"length":const i=new ZP;this.sceneRef.add(i),this.store.set(t,i);break}}};q(Hs,"instance");let cm=Hs;const um=cm.getInstance();class JP extends uw{constructor(e){super(e);q(this,"ogType","ArcPrimitive");q(this,"subNodes");q(this,"selected");q(this,"edit");q(this,"propertySet");q(this,"dimensionsSet",new Map);q(this,"activeProperty",null);this.subNodes=new Map,this.selected=!1,this.edit=!1,e?this.propertySet={...e,...this.options}:this.propertySet=this.options}setDimensions(){for(const e in this.propertySet)e==="radius"&&(um.createDimension(this.ogid+"-radius","length"),this.activeProperty="radius")}listenKeyboardEvents(){window.addEventListener("keypress",e=>{if(console.log(`Key pressed: ${e.key}`),e.key>="0"&&e.key<="9"){const i=parseInt(e.key);if(this.activeProperty==="radius"){this.options.radius=i;const n=this.ogid+"-radius";um.getDimensionsById(n).setDimensionData(this.options,i)}}e.key==="Enter"&&(console.log("Finalizing property:",this.activeProperty),this.activeProperty=null,this.setOPConfig(this.options))})}setOPConfig(e){this.discardGeometry(),console.log("Setting Arc Config:",e),this.propertySet=e,this.setConfig(e),console.log(this.geometry.attributes.position)}getOPConfig(){return this.propertySet}setOPGeometry(){}setOPMaterial(){}}class KP extends wx{constructor(e){super(e);q(this,"ogType","RectanglePrimitive");q(this,"subNodes");q(this,"selected");q(this,"edit");q(this,"propertySet");this.subNodes=new Map,this.selected=!1,this.edit=!1,e?this.propertySet={...e,...this.options}:this.propertySet=this.options}setOPConfig(e){this.discardGeometry(),console.log("Setting Rectangle Config:",e),this.propertySet=e,this.setConfig(e)}getOPConfig(){return this.propertySet}setOPGeometry(){}setOPMaterial(){}}const nx={A4:{width:21,height:29.7},A3:{width:29.7,height:42},A2:{width:42,height:59.4},Custom:{width:0,height:0}};class jP extends td{constructor(){super();q(this,"ogType","paperFrame");q(this,"options");q(this,"subNodes",new Map);q(this,"Y_OFFSET",.001);this.options={name:"PaperFrame",format:"A4",orientation:"portrait",margin:10,backgroundColor:"#ffffff",borderColor:"#000000",borderWidth:1,paperSize:nx.A4},this.setupGeometry(),this.setupMaterial(),this.createOuterBorder(),this.createInnerBorder()}set paperName(e){this.options.name=e}set format(e){this.options.format=e,this.options.paperSize=nx[e],this.updateGeometry()}set orientation(e){this.options.orientation=e,this.updateGeometry()}set margin(e){this.options.margin=e,this.remove(this.subNodes.get("InnerBorder")),this.createInnerBorder()}get margin(){return this.options.margin}set backgroundColor(e){this.options.backgroundColor=e}set borderColor(e){this.options.borderColor=e}set borderWidth(e){this.options.borderWidth=e}get paperSize(){return this.options.paperSize}set paperSize(e){if(this.format!=="Custom")throw new Error("Cannot set paper size for non-custom formats");this.options.paperSize=e,this.updateGeometry()}setupGeometry(){const{width:e,height:i}=this.options.paperSize,n=this.options.orientation==="portrait",s=n?e:i,o=n?i:e,a=[new me(-s/2,-o/2,0),new me(s/2,-o/2,0),new me(s/2,o/2,0),new me(-s/2,o/2,0)];this.addVertices(a),this.rotation.x=-Math.PI/2,this.position.y=-.01}setupMaterial(){const e=new Oe({color:this.options.backgroundColor});this.material=e}createOuterBorder(){const e=new Je({color:"#000000",linewidth:1}),i=new Zm(this.geometry),n=new ln(i,e);this.add(n),this.subNodes.set("OuterBorder",n)}createInnerBorder(){const{width:e,height:i}=this.options.paperSize,n=this.options.margin/10,s=this.options.orientation==="portrait",o=s?e:i,a=s?i:e,h=[new R(-o/2+n,-a/2+n,0),new R(o/2-n,-a/2+n,0),new R(o/2-n,a/2-n,0),new R(-o/2+n,a/2-n,0),new R(-o/2+n,-a/2+n,0),new R(-o/2+n,a/2-n,0),new R(o/2-n,-a/2+n,0),new R(o/2-n,a/2-n,0)],l=new Je({color:"#000000",linewidth:1}),c=new Xt().setFromPoints(h),u=new ln(c,l);u.position.set(0,0,this.Y_OFFSET),this.add(u),this.subNodes.set("InnerBorder",u)}updateGeometry(){this.resetVertices(),this.remove(this.subNodes.get("InnerBorder")),this.remove(this.subNodes.get("OuterBorder")),this.setupGeometry(),this.setupMaterial(),this.createOuterBorder(),this.createInnerBorder()}removeBlock(e){const i=this.subNodes.get(e);console.log("BlockMesh:",i),i&&(this.remove(i),this.subNodes.delete(e))}}class QP extends wx{constructor(e){super({width:e.width,breadth:e.height,center:new me(0,0,0)});q(this,"rowOptions");q(this,"name");this.rowOptions=e,this.name="rowInfoBlock"+this.ogid,this.blockConfig(),this.addBlockData(e)}set borderColor(e){this.color=e}set description(e){this.rowOptions.description=e,this.clearBlockData(),this.addBlockData(this.rowOptions)}set title(e){this.rowOptions.title=e}blockConfig(){const{width:e,height:i,backgroundColor:n,borderColor:s}=this.rowOptions;this.color=s||0}clearBlockData(){for(;this.children.length>0;){const e=this.children[0];this.remove(e),e instanceof ge&&(e.geometry.dispose(),e.material instanceof si&&e.material.dispose(),e.geometry=null,e.material=null)}this.children=[]}async addBlockData(e){const{width:i,height:n}=e;if(e.title){const s=yi.addGlyph(e.title,e.fontSize||.5,e.fontColor||0,!1);if(e.fontSize){const o=new Le().setFromObject(s),a=new R;o.getCenter(a);const h=o.max.x-o.min.x,l=o.max.z-o.min.z;s.position.set(-i/2+h/2,a.y,-n/2+l/2)}this.add(s)}if(e.description){const s=yi.addGlyph(e.description,e.fontSize||.5,e.fontColor||0,!1);if(e.fontSize){const o=new Le().setFromObject(s),a=new R;o.getCenter(a);const h=o.max.x-o.min.x,l=o.max.z-o.min.z;s.position.set(-i/2+h/2,a.y,n/2-l/2)}this.add(s)}}}class t3 extends td{constructor(e){super();q(this,"rowOptions");q(this,"name");this.rowOptions=e;const i=[new me(-e.width/2,0,-e.height/2),new me(e.width/2,0,-e.height/2),new me(e.width/2,0,e.height/2),new me(-e.width/2,0,e.height/2)];this.addVertices(i),this.outline=!0,this.name="rowInfoBlock"+this.ogid;const n=new Oe({color:16777215});this.material=n,this.blockConfig(),this.addBlockData(e)}set borderColor(e){this.outlineColor=e}blockConfig(){const{width:e,height:i,borderColor:n}=this.rowOptions;this.borderColor=n||0}async addBlockData(e){if(!e.url)throw new Error("No image URL provided for logo block");new ig().load(e.url,n=>{n.needsUpdate=!0;const{width:s,height:o}=n.image,a=s/o,h=new Oe({map:n,side:fi,color:16777215});e.width,e.height;const l=e.height-.002,c=l*a,u=new _a(c,l),d=new ge(u,h);d.name="LogoInfoBlock",d.position.set(0,.001,0),d.rotateX(-Math.PI/2),this.add(d)})}}class e3 extends td{}class i3 extends e3{constructor(e){super();q(this,"ogType","board");q(this,"subNodes",new Map);q(this,"labelDivMesh",null);q(this,"_selected",!1);q(this,"propertySet",{center:{x:0,y:0,z:0},color:13421772,type:"board",coordinates:[[0,0,0],[0,0,0],[0,0,0],[0,0,0]],labelName:"Drawing Board",dimensions:{start:{x:0,y:0,z:0},end:{x:10,y:-10,z:0},width:20,height:20}});e?this.setOPConfig(e):this.propertySet.id=this.ogid,this.calculateCoordinatesByConfig(),this.rotateX(-Math.PI/2),this.createLabelDivMesh()}set selected(e){e?this.outlineColor=4481279:this.outlineColor=0,this._selected=e}get selected(){return this._selected}set width(e){this.propertySet.dimensions.width=e,this.calculateCoordinatesByConfig()}get width(){return this.propertySet.dimensions.width}set height(e){this.propertySet.dimensions.height=e,this.calculateCoordinatesByConfig()}get height(){return this.propertySet.dimensions.height}set start(e){this.propertySet.dimensions.start.x=e.x,this.propertySet.dimensions.start.y=e.y,this.calculateCoordinatesByConfig()}set labelName(e){this.propertySet.labelName=e}get labelName(){return this.propertySet.labelName}set color(e){const i=new Oe({color:e});this.material=i}get color(){return this.material.color.getHex()}calculateCoordinatesByConfig(){const e=this.propertySet.dimensions.start,i=this.propertySet.dimensions.width,n=this.propertySet.dimensions.height;this.propertySet.coordinates[0][0]=e.x,this.propertySet.coordinates[0][1]=e.y,this.propertySet.coordinates[1][0]=e.x,this.propertySet.coordinates[1][1]=e.y-n,this.propertySet.coordinates[2][0]=e.x+i,this.propertySet.coordinates[2][1]=e.y-n,this.propertySet.coordinates[3][0]=e.x+i,this.propertySet.coordinates[3][1]=e.y,this.propertySet.center.x=e.x+i/2,this.propertySet.center.y=e.y-n/2,this.propertySet.center.z=e.z,this.propertySet.dimensions.end.x=e.x+i,this.propertySet.dimensions.end.y=e.y+n,this.setOPGeometry()}setOPConfig(e){this.propertySet=e}getOPConfig(){return this.propertySet}setOPGeometry(){var i;this.resetVertices(),this.outline=!1;const e=[new me(this.propertySet.coordinates[0][0],this.propertySet.coordinates[0][1],0),new me(this.propertySet.coordinates[1][0],this.propertySet.coordinates[1][1],0),new me(this.propertySet.coordinates[2][0],this.propertySet.coordinates[2][1],0),new me(this.propertySet.coordinates[3][0],this.propertySet.coordinates[3][1],0)];this.addVertices(e),this.setOPMaterial(),this.outline=!0,(i=this.labelDivMesh)==null||i.position.set(this.propertySet.dimensions.start.x,this.propertySet.dimensions.start.y,this.propertySet.dimensions.start.z)}dispose(){var e;this.geometry.dispose(),(e=this.labelDivMesh)==null||e.element.remove(),this.labelDivMesh=null,this.clear(),this.subNodes.clear(),this.removeFromParent()}setOPMaterial(){const e=new Oe({color:16777215});this.material=e}createLabelDivMesh(){const e=document.createElement("div");e.textContent=this.propertySet.labelName,e.style.fontSize="12px",this.labelDivMesh=new iM(e),this.add(this.labelDivMesh),setTimeout(()=>{this.setLabelPosition()},100)}setLabelPosition(){var a,h;const e=(a=this.labelDivMesh)==null?void 0:a.element;if(!e)return;const i=e.clientWidth,n=i+i+10;e.style.width=`${n}px`,e.style.textAlign="right";const s=e.clientHeight,o=s+s+10;e.style.height=`${o}px`,(h=this.labelDivMesh)==null||h.position.set(this.propertySet.dimensions.start.x,this.propertySet.dimensions.start.y,0)}}class n3 extends Mx{constructor(e){super(e);q(this,"ogType","LinePrimitive");q(this,"subNodes");q(this,"selected");q(this,"edit");q(this,"propertySet");this.subNodes=new Map,this.selected=!1,this.edit=!1,e?this.propertySet={...e,...this.options}:this.propertySet=this.options}setOPConfig(e){this.discardGeometry(),console.log("Setting Line Config:",e),this.propertySet=e,this.setConfig(e),console.log(this.geometry.attributes.position)}getOPConfig(){return this.propertySet}setOPGeometry(){}setOPMaterial(){}}class s3 extends fw{constructor(e){super(e);q(this,"ogType","CuboidShape");q(this,"subNodes");q(this,"selected");q(this,"edit");q(this,"propertySet");this.subNodes=new Map,this.selected=!1,this.edit=!1,e?this.propertySet={...e,...this.options}:this.propertySet=this.options}setOPConfig(e){this.discardGeometry(),console.log("Setting Cuboid Config:",e),this.propertySet=e,this.setConfig(e)}getOPConfig(){return this.propertySet}setOPGeometry(){}setOPMaterial(){}}class r3 extends dw{constructor(e){super(e);q(this,"ogType","CylinderShape");q(this,"subNodes");q(this,"selected");q(this,"edit");q(this,"propertySet");this.subNodes=new Map,this.selected=!1,this.edit=!1,e?this.propertySet={...e,...this.options}:this.propertySet=this.options}setOPConfig(e){this.discardGeometry(),this.propertySet=e,this.setConfig(e)}getOPConfig(){return this.propertySet}setOPGeometry(){}setOPMaterial(){}}const Ar=class Ar{constructor(t){q(this,"container");q(this,"openThree");q(this,"pencil");q(this,"planCamera");q(this,"og");q(this,"ogElements",[]);q(this,"labelRenderer");q(this,"onRender",new jb);q(this,"renderCallback",()=>{this.openThree&&this.labelRenderer&&this.labelRenderer.render(this.openThree.scene,this.openThree.threeCamera)});this.container=t,this.openThree=new XP(t,this.renderCallback),Ar.sOThree=this.openThree,this.planCamera=this.openThree.planCamera,this.openThree.planCamera.controls.addEventListener("update",()=>{yi.updateManager(this.openThree.threeCamera)}),this.setuplabelRenderer(),this.setupEvent()}update(t,e){var i;(i=this.labelRenderer)==null||i.render(t,e)}setuplabelRenderer(){if(!this.container||!this.openThree.scene)throw new Error("Container or Scene is not defined");const t=new YP;t.setSize(this.container.clientWidth,this.container.clientHeight),t.domElement.style.position="absolute",t.domElement.style.top="0",this.container.appendChild(t.domElement),this.labelRenderer=t}setupEvent(){window.addEventListener("resize",()=>{var t,e,i;this.container&&((i=this.labelRenderer)==null||i.setSize((t=this.container)==null?void 0:t.clientWidth,(e=this.container)==null?void 0:e.clientHeight))})}async setupOpenGeometry(t){var i;this.og=await Ws.create({wasmURL:t}),await yi.loadFaces("Source_Code_Pro_Regular"),yi.scene=this.openThree.scene,yi.camera=this.openThree.threeCamera;const e=um;e.sceneRef=this.openThree.scene,(i=this.pencil)==null||i.onCursorDown.add(n=>{console.log("Cursor Down",n)}),this.pencil&&(lm.pencil=this.pencil)}disposeElement(t){const e=this.ogElements.find(i=>i.ogid===t);e?(e.dispose(),this.openThree.scene.remove(e),this.ogElements.splice(this.ogElements.indexOf(e),1)):console.warn(`Element with ogid ${t} not found`)}line(t){const e=new n3(t);return this.openThree.scene.add(e),this.ogElements.push(e),e}arc(t){const e=new JP(t);return this.openThree.scene.add(e),this.ogElements.push(e),e}rectangle(t){const e=new KP(t);return this.openThree.scene.add(e),this.ogElements.push(e),e}polyline(t){const e=new qP(t);return this.openThree.scene.add(e),this.ogElements.push(e),e}cuboid(t){const e=new s3(t);return this.openThree.scene.add(e),this.ogElements.push(e),e}cylinder(t){const e=new r3(t);return this.openThree.scene.add(e),this.ogElements.push(e),e}space(){if(!this.pencil)throw new Error("Pencil not initialized");const t=new FP(this.pencil);return this.openThree.scene.add(t),this.ogElements.push(t),t}board(t){if(!this.pencil)throw new Error("Pencil not initialized");const e=new i3(t);return this.openThree.scene.add(e),this.ogElements.push(e),e}getEntitiesByType(t){return this.ogElements.filter(e=>e.ogType===t)}fit(t){if(!t)return;const e=this.getEntitiesByType(t);e.length!==0&&this.planCamera.fitToElement(e)}glyph(t,e,i,n=!0){return yi.addGlyph(t,e,i,n)}getGlyph(t){const e=yi.getGlyph(t);if(!e)throw new Error("Glyph not found");return e}selectGlyph(t){if(!t)throw new Error("ID not provided");yi.selectGlyph(t)}rotateGlyph(t,e){if(!t)throw new Error("ID not provided");yi.rotateGlyph(t,e)}get glyphNodes(){return yi.glyphNodes}clearGlyphSelection(){yi.clearSelection()}updateGlyphText(t,e){yi.updateGlyphText(t,e)}convertImpleniaToOGFormat(t){UP(t)}startEditingSpaces(){const t=this.getEntitiesByType("space");for(let e=0;e<t.length;e++){const i=new Oe({color:16777215,side:fi,transparent:!0,opacity:.5});t[e].material=i,t[e].isEditing=!0}}stopEditingSpaces(){const t=this.getEntitiesByType("space");for(let e=0;e<t.length;e++)t[e].isEditing=!1,t[e].material=new Oe({color:t[e].spaceSet.color,side:fi,transparent:!0,opacity:.5})}fitToSpace(t){const e=this.getEntitiesByType("space").find(i=>i.name===t);e&&this.planCamera.fitToElement([e])}fitToAllSpaces(){const t=this.getEntitiesByType("space");this.planCamera.fitToElement(t)}getSpaceData(t){const e=this.getEntitiesByType("space").find(i=>i.name===t);if(e)return e.spaceSet}getSpaceArea(t){const e=this.getEntitiesByType("space").find(n=>n.name===t);return e?e.area:void 0}getElementArea(t){const e=this.ogElements.find(n=>n.id===t);return e?e.area:void 0}paperFrame(){const t=new jP;return this.openThree.scene.add(t),this.ogElements.push(t),t}logoInfoBlock(t){const e=new t3(t);return this.openThree.scene.add(e),e}rowInfoBlock(t){const e=new QP(t);return this.openThree.scene.add(e),e}static toScreenPosition(t){const e=t.clone().project(Ar.sOThree.threeCamera),i=Ar.sOThree.renderer.domElement.clientWidth/2,n=Ar.sOThree.renderer.domElement.clientHeight/2;return{x:e.x*i+i,y:-e.y*n+n}}set showGrid(t){this.openThree.toggleGrid(t)}addImagePlane(t){if(!this.pencil)throw new Error("Pencil not initialized");new ig().load(t,e=>{const i=new _a(e.image.width,e.image.height),n=new Oe({map:e,side:fi}),s=new ge(i,n);s.position.set(0,-.1,0),s.scale.set(.239,.239,.239),s.rotateX(-Math.PI/2),this.openThree.scene.add(s),this.ogElements.push(s)})}};q(Ar,"sOThree");let sx=Ar;/**
 * lil-gui
 * https://lil-gui.georgealways.com
 * @version 0.17.0
 * @author George Michael Brower
 * @license MIT
 */class kn{constructor(t,e,i,n,s="div"){this.parent=t,this.object=e,this.property=i,this._disabled=!1,this._hidden=!1,this.initialValue=this.getValue(),this.domElement=document.createElement("div"),this.domElement.classList.add("controller"),this.domElement.classList.add(n),this.$name=document.createElement("div"),this.$name.classList.add("name"),kn.nextNameID=kn.nextNameID||0,this.$name.id="lil-gui-name-"+ ++kn.nextNameID,this.$widget=document.createElement(s),this.$widget.classList.add("widget"),this.$disable=this.$widget,this.domElement.appendChild(this.$name),this.domElement.appendChild(this.$widget),this.parent.children.push(this),this.parent.controllers.push(this),this.parent.$children.appendChild(this.domElement),this._listenCallback=this._listenCallback.bind(this),this.name(i)}name(t){return this._name=t,this.$name.innerHTML=t,this}onChange(t){return this._onChange=t,this}_callOnChange(){this.parent._callOnChange(this),this._onChange!==void 0&&this._onChange.call(this,this.getValue()),this._changed=!0}onFinishChange(t){return this._onFinishChange=t,this}_callOnFinishChange(){this._changed&&(this.parent._callOnFinishChange(this),this._onFinishChange!==void 0&&this._onFinishChange.call(this,this.getValue())),this._changed=!1}reset(){return this.setValue(this.initialValue),this._callOnFinishChange(),this}enable(t=!0){return this.disable(!t)}disable(t=!0){return t===this._disabled||(this._disabled=t,this.domElement.classList.toggle("disabled",t),this.$disable.toggleAttribute("disabled",t)),this}show(t=!0){return this._hidden=!t,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}options(t){const e=this.parent.add(this.object,this.property,t);return e.name(this._name),this.destroy(),e}min(t){return this}max(t){return this}step(t){return this}decimals(t){return this}listen(t=!0){return this._listening=t,this._listenCallbackID!==void 0&&(cancelAnimationFrame(this._listenCallbackID),this._listenCallbackID=void 0),this._listening&&this._listenCallback(),this}_listenCallback(){this._listenCallbackID=requestAnimationFrame(this._listenCallback);const t=this.save();t!==this._listenPrevValue&&this.updateDisplay(),this._listenPrevValue=t}getValue(){return this.object[this.property]}setValue(t){return this.object[this.property]=t,this._callOnChange(),this.updateDisplay(),this}updateDisplay(){return this}load(t){return this.setValue(t),this._callOnFinishChange(),this}save(){return this.getValue()}destroy(){this.listen(!1),this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.controllers.splice(this.parent.controllers.indexOf(this),1),this.parent.$children.removeChild(this.domElement)}}class o3 extends kn{constructor(t,e,i){super(t,e,i,"boolean","label"),this.$input=document.createElement("input"),this.$input.setAttribute("type","checkbox"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$input.addEventListener("change",()=>{this.setValue(this.$input.checked),this._callOnFinishChange()}),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.checked=this.getValue(),this}}function dm(r){let t,e;return(t=r.match(/(#|0x)?([a-f0-9]{6})/i))?e=t[2]:(t=r.match(/rgb\(\s*(\d*)\s*,\s*(\d*)\s*,\s*(\d*)\s*\)/))?e=parseInt(t[1]).toString(16).padStart(2,0)+parseInt(t[2]).toString(16).padStart(2,0)+parseInt(t[3]).toString(16).padStart(2,0):(t=r.match(/^#?([a-f0-9])([a-f0-9])([a-f0-9])$/i))&&(e=t[1]+t[1]+t[2]+t[2]+t[3]+t[3]),!!e&&"#"+e}const a3={isPrimitive:!0,match:r=>typeof r=="string",fromHexString:dm,toHexString:dm},Hh={isPrimitive:!0,match:r=>typeof r=="number",fromHexString:r=>parseInt(r.substring(1),16),toHexString:r=>"#"+r.toString(16).padStart(6,0)},h3={isPrimitive:!1,match:Array.isArray,fromHexString(r,t,e=1){const i=Hh.fromHexString(r);t[0]=(i>>16&255)/255*e,t[1]=(i>>8&255)/255*e,t[2]=(255&i)/255*e},toHexString:([r,t,e],i=1)=>Hh.toHexString(r*(i=255/i)<<16^t*i<<8^e*i<<0)},l3={isPrimitive:!1,match:r=>Object(r)===r,fromHexString(r,t,e=1){const i=Hh.fromHexString(r);t.r=(i>>16&255)/255*e,t.g=(i>>8&255)/255*e,t.b=(255&i)/255*e},toHexString:({r,g:t,b:e},i=1)=>Hh.toHexString(r*(i=255/i)<<16^t*i<<8^e*i<<0)},c3=[a3,Hh,h3,l3];class u3 extends kn{constructor(t,e,i,n){var s;super(t,e,i,"color"),this.$input=document.createElement("input"),this.$input.setAttribute("type","color"),this.$input.setAttribute("tabindex",-1),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$text=document.createElement("input"),this.$text.setAttribute("type","text"),this.$text.setAttribute("spellcheck","false"),this.$text.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this.$display.appendChild(this.$input),this.$widget.appendChild(this.$display),this.$widget.appendChild(this.$text),this._format=(s=this.initialValue,c3.find(o=>o.match(s))),this._rgbScale=n,this._initialValueHexString=this.save(),this._textFocused=!1,this.$input.addEventListener("input",()=>{this._setValueFromHexString(this.$input.value)}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$text.addEventListener("input",()=>{const o=dm(this.$text.value);o&&this._setValueFromHexString(o)}),this.$text.addEventListener("focus",()=>{this._textFocused=!0,this.$text.select()}),this.$text.addEventListener("blur",()=>{this._textFocused=!1,this.updateDisplay(),this._callOnFinishChange()}),this.$disable=this.$text,this.updateDisplay()}reset(){return this._setValueFromHexString(this._initialValueHexString),this}_setValueFromHexString(t){if(this._format.isPrimitive){const e=this._format.fromHexString(t);this.setValue(e)}else this._format.fromHexString(t,this.getValue(),this._rgbScale),this._callOnChange(),this.updateDisplay()}save(){return this._format.toHexString(this.getValue(),this._rgbScale)}load(t){return this._setValueFromHexString(t),this._callOnFinishChange(),this}updateDisplay(){return this.$input.value=this._format.toHexString(this.getValue(),this._rgbScale),this._textFocused||(this.$text.value=this.$input.value.substring(1)),this.$display.style.backgroundColor=this.$input.value,this}}class zp extends kn{constructor(t,e,i){super(t,e,i,"function"),this.$button=document.createElement("button"),this.$button.appendChild(this.$name),this.$widget.appendChild(this.$button),this.$button.addEventListener("click",n=>{n.preventDefault(),this.getValue().call(this.object)}),this.$button.addEventListener("touchstart",()=>{},{passive:!0}),this.$disable=this.$button}}class d3 extends kn{constructor(t,e,i,n,s,o){super(t,e,i,"number"),this._initInput(),this.min(n),this.max(s);const a=o!==void 0;this.step(a?o:this._getImplicitStep(),a),this.updateDisplay()}decimals(t){return this._decimals=t,this.updateDisplay(),this}min(t){return this._min=t,this._onUpdateMinMax(),this}max(t){return this._max=t,this._onUpdateMinMax(),this}step(t,e=!0){return this._step=t,this._stepExplicit=e,this}updateDisplay(){const t=this.getValue();if(this._hasSlider){let e=(t-this._min)/(this._max-this._min);e=Math.max(0,Math.min(e,1)),this.$fill.style.width=100*e+"%"}return this._inputFocused||(this.$input.value=this._decimals===void 0?t:t.toFixed(this._decimals)),this}_initInput(){this.$input=document.createElement("input"),this.$input.setAttribute("type","number"),this.$input.setAttribute("step","any"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$widget.appendChild(this.$input),this.$disable=this.$input;const t=c=>{const u=parseFloat(this.$input.value);isNaN(u)||(this._snapClampSetValue(u+c),this.$input.value=this.getValue())};let e,i,n,s,o,a=!1;const h=c=>{if(a){const u=c.clientX-e,d=c.clientY-i;Math.abs(d)>5?(c.preventDefault(),this.$input.blur(),a=!1,this._setDraggingStyle(!0,"vertical")):Math.abs(u)>5&&l()}if(!a){const u=c.clientY-n;o-=u*this._step*this._arrowKeyMultiplier(c),s+o>this._max?o=this._max-s:s+o<this._min&&(o=this._min-s),this._snapClampSetValue(s+o)}n=c.clientY},l=()=>{this._setDraggingStyle(!1,"vertical"),this._callOnFinishChange(),window.removeEventListener("mousemove",h),window.removeEventListener("mouseup",l)};this.$input.addEventListener("input",()=>{let c=parseFloat(this.$input.value);isNaN(c)||(this._stepExplicit&&(c=this._snap(c)),this.setValue(this._clamp(c)))}),this.$input.addEventListener("keydown",c=>{c.code==="Enter"&&this.$input.blur(),c.code==="ArrowUp"&&(c.preventDefault(),t(this._step*this._arrowKeyMultiplier(c))),c.code==="ArrowDown"&&(c.preventDefault(),t(this._step*this._arrowKeyMultiplier(c)*-1))}),this.$input.addEventListener("wheel",c=>{this._inputFocused&&(c.preventDefault(),t(this._step*this._normalizeMouseWheel(c)))},{passive:!1}),this.$input.addEventListener("mousedown",c=>{e=c.clientX,i=n=c.clientY,a=!0,s=this.getValue(),o=0,window.addEventListener("mousemove",h),window.addEventListener("mouseup",l)}),this.$input.addEventListener("focus",()=>{this._inputFocused=!0}),this.$input.addEventListener("blur",()=>{this._inputFocused=!1,this.updateDisplay(),this._callOnFinishChange()})}_initSlider(){this._hasSlider=!0,this.$slider=document.createElement("div"),this.$slider.classList.add("slider"),this.$fill=document.createElement("div"),this.$fill.classList.add("fill"),this.$slider.appendChild(this.$fill),this.$widget.insertBefore(this.$slider,this.$input),this.domElement.classList.add("hasSlider");const t=d=>{const f=this.$slider.getBoundingClientRect();let p=(_=d,g=f.left,m=f.right,x=this._min,y=this._max,(_-g)/(m-g)*(y-x)+x);var _,g,m,x,y;this._snapClampSetValue(p)},e=d=>{t(d.clientX)},i=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("mousemove",e),window.removeEventListener("mouseup",i)};let n,s,o=!1;const a=d=>{d.preventDefault(),this._setDraggingStyle(!0),t(d.touches[0].clientX),o=!1},h=d=>{if(o){const f=d.touches[0].clientX-n,p=d.touches[0].clientY-s;Math.abs(f)>Math.abs(p)?a(d):(window.removeEventListener("touchmove",h),window.removeEventListener("touchend",l))}else d.preventDefault(),t(d.touches[0].clientX)},l=()=>{this._callOnFinishChange(),this._setDraggingStyle(!1),window.removeEventListener("touchmove",h),window.removeEventListener("touchend",l)},c=this._callOnFinishChange.bind(this);let u;this.$slider.addEventListener("mousedown",d=>{this._setDraggingStyle(!0),t(d.clientX),window.addEventListener("mousemove",e),window.addEventListener("mouseup",i)}),this.$slider.addEventListener("touchstart",d=>{d.touches.length>1||(this._hasScrollBar?(n=d.touches[0].clientX,s=d.touches[0].clientY,o=!0):a(d),window.addEventListener("touchmove",h,{passive:!1}),window.addEventListener("touchend",l))},{passive:!1}),this.$slider.addEventListener("wheel",d=>{if(Math.abs(d.deltaX)<Math.abs(d.deltaY)&&this._hasScrollBar)return;d.preventDefault();const f=this._normalizeMouseWheel(d)*this._step;this._snapClampSetValue(this.getValue()+f),this.$input.value=this.getValue(),clearTimeout(u),u=setTimeout(c,400)},{passive:!1})}_setDraggingStyle(t,e="horizontal"){this.$slider&&this.$slider.classList.toggle("active",t),document.body.classList.toggle("lil-gui-dragging",t),document.body.classList.toggle("lil-gui-"+e,t)}_getImplicitStep(){return this._hasMin&&this._hasMax?(this._max-this._min)/1e3:.1}_onUpdateMinMax(){!this._hasSlider&&this._hasMin&&this._hasMax&&(this._stepExplicit||this.step(this._getImplicitStep(),!1),this._initSlider(),this.updateDisplay())}_normalizeMouseWheel(t){let{deltaX:e,deltaY:i}=t;return Math.floor(t.deltaY)!==t.deltaY&&t.wheelDelta&&(e=0,i=-t.wheelDelta/120,i*=this._stepExplicit?1:10),e+-i}_arrowKeyMultiplier(t){let e=this._stepExplicit?1:10;return t.shiftKey?e*=10:t.altKey&&(e/=10),e}_snap(t){const e=Math.round(t/this._step)*this._step;return parseFloat(e.toPrecision(15))}_clamp(t){return t<this._min&&(t=this._min),t>this._max&&(t=this._max),t}_snapClampSetValue(t){this.setValue(this._clamp(this._snap(t)))}get _hasScrollBar(){const t=this.parent.root.$children;return t.scrollHeight>t.clientHeight}get _hasMin(){return this._min!==void 0}get _hasMax(){return this._max!==void 0}}class f3 extends kn{constructor(t,e,i,n){super(t,e,i,"option"),this.$select=document.createElement("select"),this.$select.setAttribute("aria-labelledby",this.$name.id),this.$display=document.createElement("div"),this.$display.classList.add("display"),this._values=Array.isArray(n)?n:Object.values(n),this._names=Array.isArray(n)?n:Object.keys(n),this._names.forEach(s=>{const o=document.createElement("option");o.innerHTML=s,this.$select.appendChild(o)}),this.$select.addEventListener("change",()=>{this.setValue(this._values[this.$select.selectedIndex]),this._callOnFinishChange()}),this.$select.addEventListener("focus",()=>{this.$display.classList.add("focus")}),this.$select.addEventListener("blur",()=>{this.$display.classList.remove("focus")}),this.$widget.appendChild(this.$select),this.$widget.appendChild(this.$display),this.$disable=this.$select,this.updateDisplay()}updateDisplay(){const t=this.getValue(),e=this._values.indexOf(t);return this.$select.selectedIndex=e,this.$display.innerHTML=e===-1?t:this._names[e],this}}class p3 extends kn{constructor(t,e,i){super(t,e,i,"string"),this.$input=document.createElement("input"),this.$input.setAttribute("type","text"),this.$input.setAttribute("aria-labelledby",this.$name.id),this.$input.addEventListener("input",()=>{this.setValue(this.$input.value)}),this.$input.addEventListener("keydown",n=>{n.code==="Enter"&&this.$input.blur()}),this.$input.addEventListener("blur",()=>{this._callOnFinishChange()}),this.$widget.appendChild(this.$input),this.$disable=this.$input,this.updateDisplay()}updateDisplay(){return this.$input.value=this.getValue(),this}}let rx=!1;class nM{constructor({parent:t,autoPlace:e=t===void 0,container:i,width:n,title:s="Controls",injectStyles:o=!0,touchStyles:a=!0}={}){if(this.parent=t,this.root=t?t.root:this,this.children=[],this.controllers=[],this.folders=[],this._closed=!1,this._hidden=!1,this.domElement=document.createElement("div"),this.domElement.classList.add("lil-gui"),this.$title=document.createElement("div"),this.$title.classList.add("title"),this.$title.setAttribute("role","button"),this.$title.setAttribute("aria-expanded",!0),this.$title.setAttribute("tabindex",0),this.$title.addEventListener("click",()=>this.openAnimated(this._closed)),this.$title.addEventListener("keydown",h=>{h.code!=="Enter"&&h.code!=="Space"||(h.preventDefault(),this.$title.click())}),this.$title.addEventListener("touchstart",()=>{},{passive:!0}),this.$children=document.createElement("div"),this.$children.classList.add("children"),this.domElement.appendChild(this.$title),this.domElement.appendChild(this.$children),this.title(s),a&&this.domElement.classList.add("allow-touch-styles"),this.parent)return this.parent.children.push(this),this.parent.folders.push(this),void this.parent.$children.appendChild(this.domElement);this.domElement.classList.add("root"),!rx&&o&&(function(h){const l=document.createElement("style");l.innerHTML=h;const c=document.querySelector("head link[rel=stylesheet], head style");c?document.head.insertBefore(l,c):document.head.appendChild(l)}('.lil-gui{--background-color:#1f1f1f;--text-color:#ebebeb;--title-background-color:#111;--title-text-color:#ebebeb;--widget-color:#424242;--hover-color:#4f4f4f;--focus-color:#595959;--number-color:#2cc9ff;--string-color:#a2db3c;--font-size:11px;--input-font-size:11px;--font-family:-apple-system,BlinkMacSystemFont,"Segoe UI",Roboto,Arial,sans-serif;--font-family-mono:Menlo,Monaco,Consolas,"Droid Sans Mono",monospace;--padding:4px;--spacing:4px;--widget-height:20px;--name-width:45%;--slider-knob-width:2px;--slider-input-width:27%;--color-input-width:27%;--slider-input-min-width:45px;--color-input-min-width:45px;--folder-indent:7px;--widget-padding:0 0 0 3px;--widget-border-radius:2px;--checkbox-size:calc(var(--widget-height)*0.75);--scrollbar-width:5px;background-color:var(--background-color);color:var(--text-color);font-family:var(--font-family);font-size:var(--font-size);font-style:normal;font-weight:400;line-height:1;text-align:left;touch-action:manipulation;user-select:none;-webkit-user-select:none}.lil-gui,.lil-gui *{box-sizing:border-box;margin:0;padding:0}.lil-gui.root{display:flex;flex-direction:column;width:var(--width,245px)}.lil-gui.root>.title{background:var(--title-background-color);color:var(--title-text-color)}.lil-gui.root>.children{overflow-x:hidden;overflow-y:auto}.lil-gui.root>.children::-webkit-scrollbar{background:var(--background-color);height:var(--scrollbar-width);width:var(--scrollbar-width)}.lil-gui.root>.children::-webkit-scrollbar-thumb{background:var(--focus-color);border-radius:var(--scrollbar-width)}.lil-gui.force-touch-styles{--widget-height:28px;--padding:6px;--spacing:6px;--font-size:13px;--input-font-size:16px;--folder-indent:10px;--scrollbar-width:7px;--slider-input-min-width:50px;--color-input-min-width:65px}.lil-gui.autoPlace{max-height:100%;position:fixed;right:15px;top:0;z-index:1001}.lil-gui .controller{align-items:center;display:flex;margin:var(--spacing) 0;padding:0 var(--padding)}.lil-gui .controller.disabled{opacity:.5}.lil-gui .controller.disabled,.lil-gui .controller.disabled *{pointer-events:none!important}.lil-gui .controller>.name{flex-shrink:0;line-height:var(--widget-height);min-width:var(--name-width);padding-right:var(--spacing);white-space:pre}.lil-gui .controller .widget{align-items:center;display:flex;min-height:var(--widget-height);position:relative;width:100%}.lil-gui .controller.string input{color:var(--string-color)}.lil-gui .controller.boolean .widget{cursor:pointer}.lil-gui .controller.color .display{border-radius:var(--widget-border-radius);height:var(--widget-height);position:relative;width:100%}.lil-gui .controller.color input[type=color]{cursor:pointer;height:100%;opacity:0;width:100%}.lil-gui .controller.color input[type=text]{flex-shrink:0;font-family:var(--font-family-mono);margin-left:var(--spacing);min-width:var(--color-input-min-width);width:var(--color-input-width)}.lil-gui .controller.option select{max-width:100%;opacity:0;position:absolute;width:100%}.lil-gui .controller.option .display{background:var(--widget-color);border-radius:var(--widget-border-radius);height:var(--widget-height);line-height:var(--widget-height);max-width:100%;overflow:hidden;padding-left:.55em;padding-right:1.75em;pointer-events:none;position:relative;word-break:break-all}.lil-gui .controller.option .display.active{background:var(--focus-color)}.lil-gui .controller.option .display:after{bottom:0;content:"↕";font-family:lil-gui;padding-right:.375em;position:absolute;right:0;top:0}.lil-gui .controller.option .widget,.lil-gui .controller.option select{cursor:pointer}.lil-gui .controller.number input{color:var(--number-color)}.lil-gui .controller.number.hasSlider input{flex-shrink:0;margin-left:var(--spacing);min-width:var(--slider-input-min-width);width:var(--slider-input-width)}.lil-gui .controller.number .slider{background-color:var(--widget-color);border-radius:var(--widget-border-radius);cursor:ew-resize;height:var(--widget-height);overflow:hidden;padding-right:var(--slider-knob-width);touch-action:pan-y;width:100%}.lil-gui .controller.number .slider.active{background-color:var(--focus-color)}.lil-gui .controller.number .slider.active .fill{opacity:.95}.lil-gui .controller.number .fill{border-right:var(--slider-knob-width) solid var(--number-color);box-sizing:content-box;height:100%}.lil-gui-dragging .lil-gui{--hover-color:var(--widget-color)}.lil-gui-dragging *{cursor:ew-resize!important}.lil-gui-dragging.lil-gui-vertical *{cursor:ns-resize!important}.lil-gui .title{--title-height:calc(var(--widget-height) + var(--spacing)*1.25);-webkit-tap-highlight-color:transparent;text-decoration-skip:objects;cursor:pointer;font-weight:600;height:var(--title-height);line-height:calc(var(--title-height) - 4px);outline:none;padding:0 var(--padding)}.lil-gui .title:before{content:"▾";display:inline-block;font-family:lil-gui;padding-right:2px}.lil-gui .title:active{background:var(--title-background-color);opacity:.75}.lil-gui.root>.title:focus{text-decoration:none!important}.lil-gui.closed>.title:before{content:"▸"}.lil-gui.closed>.children{opacity:0;transform:translateY(-7px)}.lil-gui.closed:not(.transition)>.children{display:none}.lil-gui.transition>.children{overflow:hidden;pointer-events:none;transition-duration:.3s;transition-property:height,opacity,transform;transition-timing-function:cubic-bezier(.2,.6,.35,1)}.lil-gui .children:empty:before{content:"Empty";display:block;font-style:italic;height:var(--widget-height);line-height:var(--widget-height);margin:var(--spacing) 0;opacity:.5;padding:0 var(--padding)}.lil-gui.root>.children>.lil-gui>.title{border-width:0;border-bottom:1px solid var(--widget-color);border-left:0 solid var(--widget-color);border-right:0 solid var(--widget-color);border-top:1px solid var(--widget-color);transition:border-color .3s}.lil-gui.root>.children>.lil-gui.closed>.title{border-bottom-color:transparent}.lil-gui+.controller{border-top:1px solid var(--widget-color);margin-top:0;padding-top:var(--spacing)}.lil-gui .lil-gui .lil-gui>.title{border:none}.lil-gui .lil-gui .lil-gui>.children{border:none;border-left:2px solid var(--widget-color);margin-left:var(--folder-indent)}.lil-gui .lil-gui .controller{border:none}.lil-gui input{-webkit-tap-highlight-color:transparent;background:var(--widget-color);border:0;border-radius:var(--widget-border-radius);color:var(--text-color);font-family:var(--font-family);font-size:var(--input-font-size);height:var(--widget-height);outline:none;width:100%}.lil-gui input:disabled{opacity:1}.lil-gui input[type=number],.lil-gui input[type=text]{padding:var(--widget-padding)}.lil-gui input[type=number]:focus,.lil-gui input[type=text]:focus{background:var(--focus-color)}.lil-gui input::-webkit-inner-spin-button,.lil-gui input::-webkit-outer-spin-button{-webkit-appearance:none;margin:0}.lil-gui input[type=number]{-moz-appearance:textfield}.lil-gui input[type=checkbox]{appearance:none;-webkit-appearance:none;border-radius:var(--widget-border-radius);cursor:pointer;height:var(--checkbox-size);text-align:center;width:var(--checkbox-size)}.lil-gui input[type=checkbox]:checked:before{content:"✓";font-family:lil-gui;font-size:var(--checkbox-size);line-height:var(--checkbox-size)}.lil-gui button{-webkit-tap-highlight-color:transparent;background:var(--widget-color);border:1px solid var(--widget-color);border-radius:var(--widget-border-radius);color:var(--text-color);cursor:pointer;font-family:var(--font-family);font-size:var(--font-size);height:var(--widget-height);line-height:calc(var(--widget-height) - 4px);outline:none;text-align:center;text-transform:none;width:100%}.lil-gui button:active{background:var(--focus-color)}@font-face{font-family:lil-gui;src:url("data:application/font-woff;charset=utf-8;base64,d09GRgABAAAAAAUsAAsAAAAACJwAAQAAAAAAAAAAAAAAAAAAAAAAAAAAAABHU1VCAAABCAAAAH4AAADAImwmYE9TLzIAAAGIAAAAPwAAAGBKqH5SY21hcAAAAcgAAAD0AAACrukyyJBnbHlmAAACvAAAAF8AAACEIZpWH2hlYWQAAAMcAAAAJwAAADZfcj2zaGhlYQAAA0QAAAAYAAAAJAC5AHhobXR4AAADXAAAABAAAABMAZAAAGxvY2EAAANsAAAAFAAAACgCEgIybWF4cAAAA4AAAAAeAAAAIAEfABJuYW1lAAADoAAAASIAAAIK9SUU/XBvc3QAAATEAAAAZgAAAJCTcMc2eJxVjbEOgjAURU+hFRBK1dGRL+ALnAiToyMLEzFpnPz/eAshwSa97517c/MwwJmeB9kwPl+0cf5+uGPZXsqPu4nvZabcSZldZ6kfyWnomFY/eScKqZNWupKJO6kXN3K9uCVoL7iInPr1X5baXs3tjuMqCtzEuagm/AAlzQgPAAB4nGNgYRBlnMDAysDAYM/gBiT5oLQBAwuDJAMDEwMrMwNWEJDmmsJwgCFeXZghBcjlZMgFCzOiKOIFAB71Bb8AeJy1kjFuwkAQRZ+DwRAwBtNQRUGKQ8OdKCAWUhAgKLhIuAsVSpWz5Bbkj3dEgYiUIszqWdpZe+Z7/wB1oCYmIoboiwiLT2WjKl/jscrHfGg/pKdMkyklC5Zs2LEfHYpjcRoPzme9MWWmk3dWbK9ObkWkikOetJ554fWyoEsmdSlt+uR0pCJR34b6t/TVg1SY3sYvdf8vuiKrpyaDXDISiegp17p7579Gp3p++y7HPAiY9pmTibljrr85qSidtlg4+l25GLCaS8e6rRxNBmsnERunKbaOObRz7N72ju5vdAjYpBXHgJylOAVsMseDAPEP8LYoUHicY2BiAAEfhiAGJgZWBgZ7RnFRdnVJELCQlBSRlATJMoLV2DK4glSYs6ubq5vbKrJLSbGrgEmovDuDJVhe3VzcXFwNLCOILB/C4IuQ1xTn5FPilBTj5FPmBAB4WwoqAHicY2BkYGAA4sk1sR/j+W2+MnAzpDBgAyEMQUCSg4EJxAEAwUgFHgB4nGNgZGBgSGFggJMhDIwMqEAYAByHATJ4nGNgAIIUNEwmAABl3AGReJxjYAACIQYlBiMGJ3wQAEcQBEV4nGNgZGBgEGZgY2BiAAEQyQWEDAz/wXwGAAsPATIAAHicXdBNSsNAHAXwl35iA0UQXYnMShfS9GPZA7T7LgIu03SSpkwzYTIt1BN4Ak/gKTyAeCxfw39jZkjymzcvAwmAW/wgwHUEGDb36+jQQ3GXGot79L24jxCP4gHzF/EIr4jEIe7wxhOC3g2TMYy4Q7+Lu/SHuEd/ivt4wJd4wPxbPEKMX3GI5+DJFGaSn4qNzk8mcbKSR6xdXdhSzaOZJGtdapd4vVPbi6rP+cL7TGXOHtXKll4bY1Xl7EGnPtp7Xy2n00zyKLVHfkHBa4IcJ2oD3cgggWvt/V/FbDrUlEUJhTn/0azVWbNTNr0Ens8de1tceK9xZmfB1CPjOmPH4kitmvOubcNpmVTN3oFJyjzCvnmrwhJTzqzVj9jiSX911FjeAAB4nG3HMRKCMBBA0f0giiKi4DU8k0V2GWbIZDOh4PoWWvq6J5V8If9NVNQcaDhyouXMhY4rPTcG7jwYmXhKq8Wz+p762aNaeYXom2n3m2dLTVgsrCgFJ7OTmIkYbwIbC6vIB7WmFfAAAA==") format("woff")}@media (pointer:coarse){.lil-gui.allow-touch-styles{--widget-height:28px;--padding:6px;--spacing:6px;--font-size:13px;--input-font-size:16px;--folder-indent:10px;--scrollbar-width:7px;--slider-input-min-width:50px;--color-input-min-width:65px}}@media (hover:hover){.lil-gui .controller.color .display:hover:before{border:1px solid #fff9;border-radius:var(--widget-border-radius);bottom:0;content:" ";display:block;left:0;position:absolute;right:0;top:0}.lil-gui .controller.option .display.focus{background:var(--focus-color)}.lil-gui .controller.option .widget:hover .display{background:var(--hover-color)}.lil-gui .controller.number .slider:hover{background-color:var(--hover-color)}body:not(.lil-gui-dragging) .lil-gui .title:hover{background:var(--title-background-color);opacity:.85}.lil-gui .title:focus{text-decoration:underline var(--focus-color)}.lil-gui input:hover{background:var(--hover-color)}.lil-gui input:active{background:var(--focus-color)}.lil-gui input[type=checkbox]:focus{box-shadow:inset 0 0 0 1px var(--focus-color)}.lil-gui button:hover{background:var(--hover-color);border-color:var(--hover-color)}.lil-gui button:focus{border-color:var(--focus-color)}}'),rx=!0),i?i.appendChild(this.domElement):e&&(this.domElement.classList.add("autoPlace"),document.body.appendChild(this.domElement)),n&&this.domElement.style.setProperty("--width",n+"px"),this.domElement.addEventListener("keydown",h=>h.stopPropagation()),this.domElement.addEventListener("keyup",h=>h.stopPropagation())}add(t,e,i,n,s){if(Object(i)===i)return new f3(this,t,e,i);const o=t[e];switch(typeof o){case"number":return new d3(this,t,e,i,n,s);case"boolean":return new o3(this,t,e);case"string":return new p3(this,t,e);case"function":return new zp(this,t,e)}console.error(`gui.add failed
	property:`,e,`
	object:`,t,`
	value:`,o)}addColor(t,e,i=1){return new u3(this,t,e,i)}addFolder(t){return new nM({parent:this,title:t})}load(t,e=!0){return t.controllers&&this.controllers.forEach(i=>{i instanceof zp||i._name in t.controllers&&i.load(t.controllers[i._name])}),e&&t.folders&&this.folders.forEach(i=>{i._title in t.folders&&i.load(t.folders[i._title])}),this}save(t=!0){const e={controllers:{},folders:{}};return this.controllers.forEach(i=>{if(!(i instanceof zp)){if(i._name in e.controllers)throw new Error(`Cannot save GUI with duplicate property "${i._name}"`);e.controllers[i._name]=i.save()}}),t&&this.folders.forEach(i=>{if(i._title in e.folders)throw new Error(`Cannot save GUI with duplicate folder "${i._title}"`);e.folders[i._title]=i.save()}),e}open(t=!0){return this._closed=!t,this.$title.setAttribute("aria-expanded",!this._closed),this.domElement.classList.toggle("closed",this._closed),this}close(){return this.open(!1)}show(t=!0){return this._hidden=!t,this.domElement.style.display=this._hidden?"none":"",this}hide(){return this.show(!1)}openAnimated(t=!0){return this._closed=!t,this.$title.setAttribute("aria-expanded",!this._closed),requestAnimationFrame(()=>{const e=this.$children.clientHeight;this.$children.style.height=e+"px",this.domElement.classList.add("transition");const i=s=>{s.target===this.$children&&(this.$children.style.height="",this.domElement.classList.remove("transition"),this.$children.removeEventListener("transitionend",i))};this.$children.addEventListener("transitionend",i);const n=t?this.$children.scrollHeight:0;this.domElement.classList.toggle("closed",!t),requestAnimationFrame(()=>{this.$children.style.height=n+"px"})}),this}title(t){return this._title=t,this.$title.innerHTML=t,this}reset(t=!0){return(t?this.controllersRecursive():this.controllers).forEach(e=>e.reset()),this}onChange(t){return this._onChange=t,this}_callOnChange(t){this.parent&&this.parent._callOnChange(t),this._onChange!==void 0&&this._onChange.call(this,{object:t.object,property:t.property,value:t.getValue(),controller:t})}onFinishChange(t){return this._onFinishChange=t,this}_callOnFinishChange(t){this.parent&&this.parent._callOnFinishChange(t),this._onFinishChange!==void 0&&this._onFinishChange.call(this,{object:t.object,property:t.property,value:t.getValue(),controller:t})}destroy(){this.parent&&(this.parent.children.splice(this.parent.children.indexOf(this),1),this.parent.folders.splice(this.parent.folders.indexOf(this),1)),this.domElement.parentElement&&this.domElement.parentElement.removeChild(this.domElement),Array.from(this.children).forEach(t=>t.destroy())}controllersRecursive(){let t=Array.from(this.controllers);return this.folders.forEach(e=>{t=t.concat(e.controllersRecursive())}),t}foldersRecursive(){let t=Array.from(this.folders);return this.folders.forEach(e=>{t=t.concat(e.foldersRecursive())}),t}}var m3=typeof globalThis<"u"?globalThis:typeof window<"u"?window:typeof global<"u"?global:typeof self<"u"?self:{};function g3(r){return r&&r.__esModule&&Object.prototype.hasOwnProperty.call(r,"default")?r.default:r}var sM={exports:{}};(function(r,t){(function(e,i){r.exports=i()})(m3,function(){var e=function(){function i(f){return o.appendChild(f.dom),f}function n(f){for(var p=0;p<o.children.length;p++)o.children[p].style.display=p===f?"block":"none";s=f}var s=0,o=document.createElement("div");o.style.cssText="position:fixed;top:0;left:0;cursor:pointer;opacity:0.9;z-index:10000",o.addEventListener("click",function(f){f.preventDefault(),n(++s%o.children.length)},!1);var a=(performance||Date).now(),h=a,l=0,c=i(new e.Panel("FPS","#0ff","#002")),u=i(new e.Panel("MS","#0f0","#020"));if(self.performance&&self.performance.memory)var d=i(new e.Panel("MB","#f08","#201"));return n(0),{REVISION:16,dom:o,addPanel:i,showPanel:n,begin:function(){a=(performance||Date).now()},end:function(){l++;var f=(performance||Date).now();if(u.update(f-a,200),f>h+1e3&&(c.update(1e3*l/(f-h),100),h=f,l=0,d)){var p=performance.memory;d.update(p.usedJSHeapSize/1048576,p.jsHeapSizeLimit/1048576)}return f},update:function(){a=this.end()},domElement:o,setMode:n}};return e.Panel=function(i,n,s){var o=1/0,a=0,h=Math.round,l=h(window.devicePixelRatio||1),c=80*l,u=48*l,d=3*l,f=2*l,p=3*l,_=15*l,g=74*l,m=30*l,x=document.createElement("canvas");x.width=c,x.height=u,x.style.cssText="width:80px;height:48px";var y=x.getContext("2d");return y.font="bold "+9*l+"px Helvetica,Arial,sans-serif",y.textBaseline="top",y.fillStyle=s,y.fillRect(0,0,c,u),y.fillStyle=n,y.fillText(i,d,f),y.fillRect(p,_,g,m),y.fillStyle=s,y.globalAlpha=.9,y.fillRect(p,_,g,m),{dom:x,update:function(v,E){o=Math.min(o,v),a=Math.max(a,v),y.fillStyle=s,y.globalAlpha=1,y.fillRect(0,0,c,_),y.fillStyle=n,y.fillText(h(v)+" "+i+" ("+h(o)+"-"+h(a)+")",d,f),y.drawImage(x,p+l,_,g-l,m,p,_,g-l,m),y.fillRect(p+g-l,_,l,m),y.fillStyle=s,y.globalAlpha=.9,y.fillRect(p+g-l,_,l,h((1-v/E)*m))}}},e})})(sM);var _3=sM.exports;const LI=g3(_3);export{sx as O,LI as S,me as V,nM as g};
